{"version":3,"sources":["components/NavBar.js","screens/LoginScreen.js","utils/KML_GEN.js","screens/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","history","useHistory","className","alt","src","viewBox","xmlns","d","showLogoutButton","onClick","localStorage","clear","push","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","LoginScren","useState","userName","setUserName","password","setPassword","prefixUrl","setPrefixUrl","isUserNameError","setIsUserNameError","isPassError","setIsPassError","isUrlError","setIsUrlError","isError","setisError","errMsg","setErrMsg","inputClass","errInputClass","useEffect","authInterval","setInterval","console","log","getItem","undefined","window","myWindow","close","clearInterval","htmlFor","id","type","value","placeholder","onChange","e","target","length","setItem","link","open","doLogin","KML_GEN","geoList","forEach","i","Object","keys","key","val","newKey","replace","newKML","map","item","newItem","xml","formatted","lines","split","indent","lastType","transitions","ln","match","single","Boolean","closing","opening","fromTo","padding","j","substr","formatXml","OBJtoXML","obj","prop","Array","array","AnyReactComponent","text","HomeScreen","setIsError","inputTag","setInputTag","data","setData","isLoading","setIsLoading","arrSplittedValue","setArrSplittedValue","arrData","counter","splitedValue","trim","url","token","fetch","headers","Accept","Authorization","then","response","json","responseData","attrs","catch","error","submitTagNumber","style","display","preventDefault","some","JSON","parse","file","File","Date","saveAs","class","arrNameValue","arrkeys","name","stringify","bootstrapURLKeys","defaultCenter","lat","parseFloat","Latitude","lng","Longitude","center","distanceToMouse","defaultZoom","nameValue","allowZeroExpanded","index","stroke-width","stroke-linecap","stroke-linejoin","showAttr","App","exact","path","component","LoginScreen","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.516b78c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        //remove all local storage\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex items-center justify-between flex-wrap bg-purple-900  p-6\">\r\n            <div className=\"flex items-center flex-shrink-0 text-black mr-6\">\r\n                <img alt=\"Logo\" className=\"w-1/2\" src=\"https://www.datum360.com/assets/img/logo.png\"></img>\r\n            </div>\r\n            <div className=\"block lg:hidden\">\r\n                <button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n                    <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n                <div className=\"text-sm lg:flex-grow\">\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\" onClick={() => logout()}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-log-out\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line></svg>\r\n                        <span>Logout</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction LoginScren(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  // const [count, setCount] = useState(0);\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [prefixUrl, setPrefixUrl] = useState(\"\");\r\n  const [isUserNameError, setIsUserNameError] = useState(false);\r\n  const [isPassError, setIsPassError] = useState(false);\r\n  const [isUrlError, setIsUrlError] = useState(false);\r\n  const [isError, setisError] = useState();\r\n  const [errMsg, setErrMsg] = useState();\r\n  const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:border-purple-900\";\r\n  const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none border-red-500\";\r\n\r\n\r\n  const doLogin = () => {\r\n    //reset error value\r\n    setisError(false);\r\n    setIsUserNameError(false);\r\n    setIsPassError(false);\r\n    setIsUrlError(false);\r\n    setErrMsg(\"\");\r\n\r\n    // validation\r\n    if (userName !== undefined && userName.length > 0 && password.length > 0 && prefixUrl.length > 0) {\r\n      //setting prefix url to localstorage\r\n      localStorage.setItem(\"prefixUrl\", prefixUrl);\r\n\r\n      //generating link\r\n      let link = `auth/index.php?clientId=${userName}&clientSecret=${password}&prefix_url=${prefixUrl}`;\r\n      //open new window and save that in window.myWindow \r\n      window.myWindow = window.open(link, 'targetWindow', `toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,height=500`);\r\n    }\r\n    else {\r\n      //setting userName error \r\n      if(userName.length == 0){\r\n        setIsUserNameError(true);\r\n      }\r\n      //setting password error \r\n      if(password.length == 0){\r\n        setIsPassError(true);\r\n      }\r\n      //setting userName error \r\n      if(prefixUrl.length == 0){\r\n        setIsUrlError(true);\r\n      }\r\n      //setting common error\r\n      setisError(true);\r\n      setErrMsg(\"Please fill all the fields\");\r\n    }\r\n  }\r\n\r\n  //closing window and navigating to homescreen\r\n  const closeWindow = (props) => {\r\n    if (window.myWindow !== undefined) {\r\n      window.myWindow.close();\r\n      history.push('/home');\r\n    }\r\n    else {\r\n      history.push('/home');\r\n    }\r\n    console.log(\"inside close window --------->\")\r\n  }\r\n\r\n  //listening localstorage for b_token\r\n  useEffect((props) => {\r\n    const authInterval = setInterval(() => {\r\n      console.log(\"listening ------------>\")\r\n      if (localStorage.getItem(\"b_token\") != null) {\r\n        console.log(\"b_token found ---------->\" + localStorage.getItem(\"b_token\"))\r\n        closeWindow();\r\n        clearInterval(authInterval)\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(authInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar showLogoutButton={false}></NavBar>\r\n      <div className=\"w-full max-w-sm login-container mt-5\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Username\r\n          </label>\r\n            <input className={isUserNameError ? errInputClass : inputClass}\r\n              id=\"username\" type=\"text\" value={userName} placeholder=\"Enter your username\" onChange={(e) => setUserName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              Password\r\n          </label>\r\n            <input className={isPassError ? errInputClass : inputClass} value={password}\r\n              id=\"password\" type=\"password\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Prefix URL\r\n          </label>\r\n            <input className={isUrlError ? errInputClass : inputClass} value={prefixUrl}\r\n              id=\"prefixUrl\" type=\"text\" placeholder=\"Enter your prefix url\" onChange={(e) => setPrefixUrl(e.target.value)}\r\n            />\r\n            <span className=\"text-gray-700 text-xs\">Note: Its is 1st portion of your domain name (also known as subdomain), or its called as scope of pim360.</span>\r\n          </div>\r\n          <p className=\"text-center text-red-500\">{isError ? errMsg : \"\"}</p>\r\n          <div className=\"flex\">\r\n            <button className=\"mt-3 bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-auto\" type=\"button\"\r\n              onClick={() => { doLogin() }}>\r\n              Proceed\r\n      </button>\r\n          </div>\r\n        </form>\r\n        <br>\r\n        </br>\r\n        <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScren;","// KML Generator\r\nexport const KML_GEN = (geoList) => {\r\n    if (geoList) {\r\n        if (geoList.length > 0) {\r\n            // remove space with _\r\n            geoList.forEach(function (e, i) {\r\n                // Iterate over the keys of object\r\n                Object.keys(e).forEach(function (key) {\r\n\r\n                    // Copy the value\r\n                    var val = e[key],\r\n                        newKey = key.replace(/\\s+/g, '_');\r\n\r\n                    // Remove key-value from object\r\n                    delete geoList[i][key];\r\n\r\n                    // Add value with new key\r\n                    geoList[i][newKey] = val;\r\n                });\r\n            });\r\n\r\n            // custom json to ready for xml json\r\n            let newKML = [];\r\n            if (geoList.length > 0) {\r\n                geoList.map((item) => {\r\n                    let newItem = {\r\n                        \"Placemark\": {\r\n                            \"Attributes\": item,\r\n                            \"Point\": {\r\n                                \"coordinates\": `${item[\"Latitude\"]}, ${item[\"Longitude\"]}`\r\n                            }\r\n                        }\r\n                    };\r\n                    newKML.push(newItem)\r\n                })\r\n            }\r\n\r\n            // object to xml\r\n            function OBJtoXML(obj) {\r\n                var xml = '';\r\n                for (var prop in obj) {\r\n                    xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\r\n                    if (obj[prop] instanceof Array) {\r\n                        for (var array in obj[prop]) {\r\n                            xml += \"<\" + prop + \">\";\r\n                            xml += OBJtoXML(new Object(obj[prop][array]));\r\n                            xml += \"</\" + prop + \">\";\r\n                        }\r\n                    } else if (typeof obj[prop] == \"object\") {\r\n                        xml += OBJtoXML(new Object(obj[prop]));\r\n                    } else {\r\n                        xml += obj[prop];\r\n                    }\r\n                    xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\r\n                }\r\n                var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\r\n                return xml\r\n            }\r\n\r\n            // formatXml\r\n            function formatXml (xml) {\r\n                var reg = /(>)\\s*(<)(\\/*)/g; // updated Mar 30, 2015\r\n                var wsexp = / *(.*) +\\n/g;\r\n                var contexp = /(<.+>)(.+\\n)/g;\r\n                xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\r\n                var pad = 0;\r\n                var formatted = '';\r\n                var lines = xml.split('\\n');\r\n                var indent = 0;\r\n                var lastType = 'other';\r\n                // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions \r\n                var transitions = {\r\n                    'single->single': 0,\r\n                    'single->closing': -1,\r\n                    'single->opening': 0,\r\n                    'single->other': 0,\r\n                    'closing->single': 0,\r\n                    'closing->closing': -1,\r\n                    'closing->opening': 0,\r\n                    'closing->other': 0,\r\n                    'opening->single': 1,\r\n                    'opening->closing': 0,\r\n                    'opening->opening': 1,\r\n                    'opening->other': 1,\r\n                    'other->single': 0,\r\n                    'other->closing': -1,\r\n                    'other->opening': 0,\r\n                    'other->other': 0\r\n                };\r\n\r\n                for (var i = 0; i < lines.length; i++) {\r\n                    var ln = lines[i];\r\n\r\n                    // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration\r\n                    if (ln.match(/\\s*<\\?xml/)) {\r\n                        formatted += ln + \"\\n\";\r\n                        continue;\r\n                    }\r\n                    // ---\r\n\r\n                    var single = Boolean(ln.match(/<.+\\/>/)); // is this line a single tag? ex. <br />\r\n                    var closing = Boolean(ln.match(/<\\/.+>/)); // is this a closing tag? ex. </a>\r\n                    var opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)\r\n                    var type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\r\n                    var fromTo = lastType + '->' + type;\r\n                    lastType = type;\r\n                    var padding = '';\r\n\r\n                    indent += transitions[fromTo];\r\n                    for (var j = 0; j < indent; j++) {\r\n                        padding += '\\t';\r\n                    }\r\n                    if (fromTo == 'opening->closing')\r\n                        formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n'; // substr removes line break (\\n) from prev loop\r\n                    else\r\n                        formatted += padding + ln + '\\n';\r\n                }\r\n\r\n                return formatted;\r\n            };\r\n\r\n            // final processing\r\n            let beforeKML = OBJtoXML(newKML)\r\n            const responseMessage = `<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\"><Document id=\"1\">` + beforeKML + `</Document></kml>`;\r\n\r\n            return formatXml(responseMessage);\r\n        } else {\r\n            return \"\";\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { FileSaver, saveAs } from 'file-saver';\r\nimport { KML_GEN } from '../utils/KML_GEN'\r\nimport NavBar from '../components/NavBar'\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\n\r\nconst HomeScreen = props => {\r\n    const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\r\n    const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\";\r\n    const [isError, setIsError] = useState();\r\n    const [inputTag, setInputTag] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     KML_GEN()\r\n    // })\r\n\r\n\r\n    const submitTagNumber = () => {\r\n        //reset default value \r\n        setIsError(false);\r\n\r\n        //validation\r\n        if (inputTag !== null && inputTag.length > 0) {\r\n            setIsLoading(true)\r\n            let arrData = [];\r\n            let counter = 0;\r\n            var splitedValue = inputTag.split(\",\").map((item) => {\r\n                return item.trim();\r\n            });\r\n            setArrSplittedValue(splitedValue);\r\n            splitedValue.map((id) => {\r\n                let url = \"https://\" + localStorage.getItem(\"prefixUrl\") + \".pim360.io/api/objects/TAGGED_ITEM/id/\" + id;\r\n                let token = localStorage.getItem(\"b_token\");\r\n                fetch(url, {\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: token,\r\n                    }\r\n                }).then(response => {\r\n                    var responseValue = response.json();\r\n                    return responseValue;\r\n                }).then(responseData => {\r\n                    if (responseData.attrs !== undefined && responseData.attrs !== null) {\r\n                        arrData.push(responseData);\r\n                    }\r\n                    else {\r\n                        console.log(responseData);\r\n                    }\r\n                    counter += 1;\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                        setData(arrData);\r\n                        return\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"error -------->\" + error);\r\n                    counter += 1\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n                return '';\r\n            })\r\n        }\r\n        else {\r\n            setIsError(true);\r\n            console.log(\"show error\");\r\n        }\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key) => {\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                return '';\r\n            })\r\n            arrNameValue.push(obj);\r\n            return '';\r\n        });\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        // console.log(JSON.stringify(arrNameValue))\r\n        // console.log(arrSplittedValue);\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 &&\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0].Latitude),\r\n                                lng: parseFloat(arrNameValue[0].Longitude)\r\n                            }}\r\n                            center={{\r\n                                lat: parseFloat(arrNameValue[0].Latitude),\r\n                                lng: parseFloat(arrNameValue[0].Longitude)\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 6 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                    lat={nameValue.Latitude}\r\n                                    lng={nameValue.Longitude}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded >\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={item.Latitude}>\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                        &emsp;\r\n                                        {arrSplittedValue[index]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel>\r\n                                    <table class=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key) => {\r\n                                                return <tr>\r\n                                                    <td class=\"border px-4 py-2\">{key}</td>\r\n                                                    <td class=\"border px-4 py-2\">{item[key]}</td>\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar showLogoutButton={true}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"}\r\n            <div className=\"p-10\">\r\n                <div className=\"w-full max-w\">\r\n                    <form className=\"bg-white rounded pt-6 pb-8 mb-4\">\r\n                        <div>\r\n                            <div className=\"inline-block\">\r\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                    Tag Number\r\n                            </label>\r\n                                <input className={isError ? errInputClass : inputClass} value={inputTag}\r\n                                    id=\"tagNumber\" type=\"text\" placeholder=\"Enter your tag number\" onChange={(e) => setInputTag(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\">\r\n                                <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                                    onClick={() => { submitTagNumber() }}\r\n                                >\r\n                                    Submit\r\n                             </button>\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\" style={{ display: data.length > 0 ? \"\" : \"none\" }}>\r\n                                <button onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    // console.log()\r\n                                    let some = JSON.parse(localStorage.getItem('pre_kml_data'))\r\n                                    var file = new File([`${KML_GEN(some)}`], `${new Date()}.kml`, { type: \"text/xml;charset=utf-8\" });\r\n                                    saveAs(file);\r\n                                }} class=\"bg-purple-800 hover:bg-purple-900 text-white  py-2 px-4 rounded inline-flex items-center\">\r\n                                    <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\r\n                                    <span>Download KML</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        {isError ? <p className=\"text-red-500 pl-2 text-xs pt-1\">Tag name is required </p> : \"\"}\r\n                    </form>\r\n                </div>\r\n                {data !== undefined && data.length > 0 &&\r\n                    <div>\r\n                        {showAttr()}\r\n                    </div>\r\n                }\r\n                <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HomeScreen;","import React from 'react';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path=\"/\" component={LoginScreen} />\r\n        <Route exact path=\"/home\" component={HomeScreen} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}