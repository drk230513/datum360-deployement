{"version":3,"sources":["assests/search.svg","components/NavBar.js","api/api.js","screens/LoginScreen.js","utils/KML_GEN.js","screens/HomeScreen.js","components/Modal.js","screens/LiveView.js","screens/LiveToMap.js","screens/ESRIMapPOC.js","screens/LiveToShape.js","screens/LiveToShape_v2.js","screens/LiveViewWithTable.js","screens/LiveViewToLink.js","screens/LinearAsset.js","screens/LiveViewAndTag.js","screens/Poc.js","App.js","serviceWorker.js","index.js","assests/map.svg","assests/noDataAttribute.svg","assests/logo_search.png","assests/gantt_chat.svg","assests/bug.svg"],"names":["module","exports","NavBar","props","history","useHistory","useEffect","window","location","pathname","token","localStorage","getItem","redirectPath","arrLocation","href","split","setItem","length","push","removeItem","className","alt","src","viewBox","xmlns","d","showSearch","id","type","name","placeholder","defaultValue","onClick","e","document","getElementById","value","onClickSearch","xmlnsXlink","version","x","y","style","enableBackground","xmlSpace","width","height","showLogoutButton","clear","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","axios","require","defaults","timeout","Api","loginDetails","user","pass","attrGroups","this","getToken","contextFields","getAttributeGroups","console","log","p","searchObject","pp","objectAssociations","data","hdl","assocs","generateDataMapEQ","dataMap","objectType","route_length","fixedFields","retData","plaCount","Number","items","assoc","objectByHdl","Hdl","ta","taClass","helperAttrByName","attrs","from_route_chainage","to_route_chainage","attribute_name","attribute_value","attribute_uom","ds_flag","localMap","assocId","class_name","refObj","stylePlace","styleWidth","indexOf","laMap","fixed","ref","it","routeChainage","objId","route_chainage","route_chainage_uom","uom","sort","a","b","searchTerm","ppp","searchObjectWithAttr","pppp","generateDataMap","dataMapRef","routeInfo","route_uom","from_node","to_node","dd","dataMapEq","index","JSON","stringify","attrName","key","hasOwnProperty","element","username","password","prefixUrl","request","url","method","baseURL","auth","then","res","headers","common","access_token","query","contextCache","getRequest","assocTo","searchCxt","body","ID","CLASS","DESCRIPTION","postRequest","qReq","resulturl","attrValue","LoginScren","useState","userName","setUserName","setPassword","setPrefixUrl","isUserNameError","setIsUserNameError","isPassError","setIsPassError","isUrlError","setIsUrlError","isError","setisError","errMsg","setErrMsg","isLoading","setIsLoading","inputClass","errInputClass","htmlFor","onChange","target","undefined","response","token_type","catch","KML_GEN","geoList","inputArray","forEach","i","Object","keys","val","newKey","replace","newKML","map","item","new_html_for_description","j","join","newItem","xml","formatted","lines","indent","lastType","transitions","ln","match","single","Boolean","closing","opening","fromTo","padding","substr","formatXml","OBJtoXML","obj","prop","Array","array","AnyReactComponent","text","HomeScreen","setIsError","inputTag","setInputTag","setData","arrSplittedValue","setArrSplittedValue","arrData","counter","splitedValue","trim","fetch","Accept","Authorization","json","responseData","error","submitTagNumber","display","preventDefault","pre_kml_data","parse","file","File","Date","saveAs","class","features","geometry","properties","arrNameValue","arrkeys","bootstrapURLKeys","options","mapTypeControl","defaultCenter","lat","parseFloat","lng","center","distanceToMouse","defaultZoom","nameValue","draggable","allowZeroExpanded","preExpanded","uuid","stroke-width","stroke-linecap","stroke-linejoin","showAttr","Modal","eicData","setEicData","deliverablesData","setDeliverablesData","ensData","setEnsData","sourceData","setSourceData","domainData","setDomainData","finalObj","setFinalObj","selectClass","lableClass","clsToken","baseUrl","cls_baseUrl","classification","getEICList","onClickCancel","filteredList","rows","keyToGetValue","filter","getDeliverables","eic","deliverable_keys","Deliverables","filter_list","deliverables_list","getTimeLine","tempObj","onClickSubmit","authCls","getClsToken","getDomains","domain_List","Name","getSourceNames","source_List","getEnsNames","ens_List","params","object_type","eic_handle","deliverable","source_handle","ens_name","aria-hidden","role","aria-modal","aria-labelledby","for","LiveView","arrLiveView","setarrLiveView","showData","setShowData","arrTagNumber","setArrTagNumber","selectedLiveViewHdl","setselectedLiveViewHdl","isContentEditable","setisContentEditable","editedAttr","seteditedAttr","showModal","setshowModal","tempBody","tempSelectedObj","fetchLiveView","secondApi","thirdApi","myHeaders","Headers","redirect","fourthApi","alert","getResultUrl","createQueryBody","Data","conditions","fields","getFinalResult","finalResult","arrFirstObjKeys","arrModifiedData","arrTagNumberData","queryResult","pageSize","page","hasmore","handleSubmitModal","xlsxData","firstApi","liveView","selectedLiveView","selectedHdl","fetchSelectedLiveViewData","selectedTag","getAttributes","tag","onError","mapTypeId","Latitude","onChangeAttributeValue","search","mapboxgl","accessToken","LiveToMap","selectedLiveViewName","setselectedLiveViewName","showMapBox","setShowMapBox","boxMapData","setBoxMapData","googleMapData","setGoogleMapData","mapContainerRef","useRef","setLng","setLat","zoom","formData","gMapData","tableData","k","linkTitle","tagHdl","link","decriptionContent","coordinates","description","Map","container","addControl","NavigationControl","on","loadImage","image","addImage","addSource","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","layout","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","slice","mag","tsunami","Math","abs","lngLat","getCanvas","cursor","Popup","setLngLat","setHTML","addTo","InitializeMap","doAuth","selectedIndex","fileReader","FileReader","readAsText","files","onload","result","EsriMapPOC","LiveToShape","selectedType","setSelectedType","random","floor","esriData","setEsriData","esriCenterData","setEsriCenterData","mapBoxData","esriMapBoxData","btoa","textVal","updateEsriMapData","mapData","esriJSONData","LiveToShape_v2","setMapData","setEsriJSONData","setAttributeData","notFound","setNotFound","arrSelectedTagNumber","SetArrSelectedTagNumber","arrSelectedLiveView_2","SetArrSelectedLiveView_2","isLiveView2","setIsLiveView2","isDualCall","setisDualCall","isFirstDataFormed","setIsFirstDataFormed","isSecondDataFormed","setIsSecondDataFormed","arrTagResponseData","multiSelectStyle","chips","background","color","searchBox","border","multiselectContainer","show_data","centerPoint","geojson","lngLat_coordinates","isLiveViewTO","requestOptions","fetchSelectedLiveViewData_liveview2","tempData","liveView_2","formData_liveView2","doSecondCall","tempMapData","arrEsriMapObj","arrObj","arrMapObj","mapObj","hasRoute","itemData","esriMapObj","includes","temp_arrEsriMapObj","liveview2","displayValue","showCheckbox","isObject","onSelect","selectedList","selectedItem","onRemove","removedItem","onSubmitTag","base64Data","noDataAttribute","LiveViewWithTable","setArrFormedTableData","editedArrFormedTabledData","setEditedArrFormedTabledData","tempArrFormedTableData","editedRows","isEdited","arrFormedTableData","tableHeaderKeys","headerKey","childIndex","itemIndex","tempArr","objToEdit","URLSearchParams","get","fetchTaggedItems","Logo","LinearAsset","ganttData","setGanttData","setAss_ganttData","attributeData","documentData","setdocumentData","isAttrLoading","setIsAttrLoading","isGanntHaveData","setIsGanntHaveData","isAssociateGanntHaveData","setIsAssociateGanntHaveData","isMapError","setIsMapError","generateGanttData","LaMap","mapdata","fixed_obj","lastObj","pointsToAdd","parseInt","values","toLowerCase","ref_obj","d3","gantt","onClickGanttItem","taskTypes","taskStatus","tickFormat","gantt1","clickedObj","associativeData","ClsName","Url","myMap","setZoom","panTo","generateAssociateData","AssociativeData","issueKeys","Issue","issue_obj","Type","valueKeys","Value","value_obj","taskNames","keyword","searchKey","getRouteObj","position","offset","stopColor","stopOpacity","minHeight","chat","bug","LiveViewAndTag","showcommonLogo","setShowcommonLogo","commonMsg","setCommonMsg","dataToSet","latKey","longKey","formDataTagNumber","handleLiveViewSubmit","reload","Poc","tasks","endDate","startDate","tasks2","gantt2","App","exact","path","component","LoginScreen","esriMapPOC","LiveViewToLink","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67b0a800.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.0f7fe590.svg\";","import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname != '/') {\r\n            const token = localStorage.getItem('b_token');\r\n            const redirectPath = localStorage.getItem('redirectPath');\r\n            if (token == null) {\r\n                let arrLocation = window.location.href.split('/');\r\n                localStorage.setItem('redirectPath', arrLocation[arrLocation.length - 1]);\r\n                history.push('/');\r\n            } else if (redirectPath != null) {\r\n                history.push(redirectPath)\r\n                localStorage.removeItem('redirectPath')\r\n            }\r\n        }\r\n    }, [])\r\n    const logout = () => {\r\n        //remove all local storage\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    const onClickSearch = () => {\r\n        if (document.getElementById(\"search\").value != \"\") {\r\n            //pass value in props\r\n            props.onClickSearch(document.getElementById(\"search\").value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex items-center justify-between flex-wrap bg-purple-900  p-6\">\r\n            <div className=\"flex items-center flex-shrink-0 text-black mr-6\">\r\n                <img alt=\"Logo\" className=\"w-1/2\" src=\"https://www.datum360.com/assets/img/logo.png\"></img>\r\n            </div>\r\n            <div className=\"block lg:hidden bg-mediaquery\">\r\n                <button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n                    <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto bg-mediaquery\">\r\n                <div className=\"text-sm lg:flex-grow\">\r\n                </div>\r\n                <div className={props.showSearch ? \"relative mx-auto text-gray-600 mr-3\" : \"hidden\"}>\r\n                    <input id=\"search\" className=\"border-2 bg-gray-300 bg-white h-10 px-5 pr-10 rounded-lg text-sm focus:outline-none\"\r\n                        type=\"search\" name=\"search\" placeholder=\"Enter you tag to search\"\r\n                        defaultValue=\"\"\r\n                    />\r\n                    <button type=\"submit\" className=\"absolute right-0 top-0 mt-5 mr-4 r-5px t-n7px focus:outline-none\"\r\n                        onClick={(e) => onClickSearch(e)}\r\n                    >\r\n                        <svg className=\"text-gray-600 h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 56.966 56.966\" style={{ enableBackground: 'new 0 0 56.966 56.966' }} xmlSpace=\"preserve\" width=\"512px\" height=\"512px\">\r\n                            <path d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/home\")}>\r\n                        <span>Home</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/search\")}>\r\n                        <span>Search</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/linearAsset\")}>\r\n                        <span>Linear Asset</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveView\")}>\r\n                        <span>Live View</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveView_Table\")}>\r\n                        <span>LiveView Table</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveview2map\")}>\r\n                        <span>LiveView to map</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveview2link\")}>\r\n                        <span>LiveView to link</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/l2sv1\")}>\r\n                        <span>L2sv1</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/l2sv2\")}>\r\n                        <span>L2sv2</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\" onClick={() => logout()}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-log-out\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line></svg>\r\n                        <span>Logout</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","\r\nconst axios = require('axios');\r\naxios.defaults.timeout = 10000;\r\nlet prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n\r\nexport default class Api {\r\n\r\n    loginDetails = { user: '', pass: '' };\r\n\r\n    attrGroups = {};\r\n\r\n    static async warmUp() {\r\n        await this.getToken();\r\n        await this.contextFields('TAGGED_ITEM');\r\n        this.attrGroups = await this.getAttributeGroups();\r\n    }\r\n\r\n    static setUserPass(user, pass) {\r\n        this.loginDetails = { user: user, pass: pass };\r\n    }\r\n\r\n    static async login() {\r\n        console.log(\"inside login --------->\")\r\n        var p = await this.getToken();\r\n        console.log(p);\r\n\r\n        var pp = await this.searchObject(\"TAGGED_ITEM\", 'Route B to C');\r\n        var assocs = await this.objectAssociations('TAGGED_ITEM', pp.data[0].hdl, \"EQUIPMENT_ITEM\");\r\n        var dd = await this.generateDataMapEQ(assocs, 'TAGGED_ITEM');\r\n\r\n        // var pp = await this.searchObject(\"TAGGED_ITEM\", 'Route B to C');\r\n        // var ppp = await this.objectByHdl('TAGGED_ITEM', pp.data[0].hdl);\r\n\r\n        // var routeInfo = {\r\n        //     route_length: this.helperAttrByName(ppp.attrs, 'Length').value,\r\n        //     route_uom: this.helperAttrByName(ppp.attrs, 'Length').uom,\r\n        //     from_node: this.helperAttrByName(ppp.attrs, 'From Reference Node').value,\r\n        //     to_node: this.helperAttrByName(ppp.attrs, 'To Reference Node').value,\r\n        // }\r\n\r\n        // var pppp = await this.searchObjectWithAttr('TAGGED_ITEM', 'Route', 'Route B To C');\r\n        // await this.generateDataMap(pppp, 'TAGGED_ITEM');\r\n\r\n        console.log('done');\r\n        // var pp = await x.getRequest(\"api/context/fields/TAGGED_ITEM\");\r\n        // console.log(pp.ID);\r\n    }\r\n\r\n    static async generateDataMapEQ(dataMap, objectType, route_length) {\r\n        console.log(\"inside generateDataMapEQ ---------> dataMap \"+ dataMap + \" route_length \" + route_length)\r\n\r\n        let fixedFields = ['Issue', 'Value'];\r\n        let retData = {};\r\n\r\n\r\n        let plaCount = 100 / Number(route_length);\r\n\r\n        for (const assoc of dataMap.items) {\r\n\r\n            let ta = await this.objectByHdl(\"EQUIPMENT_ITEM\", assoc.Hdl);\r\n\r\n            let taClass = this.helperAttrByName(ta.attrs, 'Class Name').value;\r\n            let from_route_chainage = this.helperAttrByName(ta.attrs, 'From Route Chainage');\r\n            let to_route_chainage = this.helperAttrByName(ta.attrs, 'To Route Chainage');\r\n            let attribute_name = this.helperAttrByName(ta.attrs, 'Linear Asset Attribute Name').value;\r\n            let attribute_value = this.helperAttrByName(ta.attrs, 'Linear Asset Attribute Value').value;\r\n            let attribute_uom = this.helperAttrByName(ta.attrs, 'Linear Asset Value UoM').value;\r\n            let ds_flag = this.helperAttrByName(ta.attrs, 'DS Flag').value;\r\n\r\n            let localMap = {\r\n                assocId: assoc.id,\r\n                from_route_chainage: Number(from_route_chainage.value),\r\n                to_route_chainage: Number(to_route_chainage.value),\r\n                class_name: taClass,\r\n                attribute_name: attribute_name,\r\n                attribute_value: attribute_value,\r\n                attribute_uom: attribute_uom,\r\n                ds_flag: ds_flag,\r\n                refObj: assoc\r\n            };\r\n\r\n            localMap.stylePlace = plaCount * localMap.from_route_chainage;\r\n            localMap.styleWidth = (plaCount * localMap.to_route_chainage) - localMap.stylePlace;\r\n\r\n\r\n            if (fixedFields.indexOf(ds_flag) != -1) {\r\n                if (!retData[localMap.ds_flag])\r\n                    retData[localMap.ds_flag] = {};\r\n\r\n                if (!retData[localMap.ds_flag][localMap.class_name])\r\n                    retData[localMap.ds_flag][localMap.class_name] = [];\r\n\r\n                retData[localMap.ds_flag][localMap.class_name].push(localMap);\r\n            }\r\n\r\n        }\r\n\r\n        //retData = retData.sort((a, b) => (a.class_name > b.class_name) ? 1 : -1);\r\n\r\n        return retData;\r\n    }\r\n\r\n\r\n    static async generateDataMap(dataMap, objectType) {\r\n        console.log(\"inside generateDataMap ---------> dataMap \"+ dataMap + \" objectType \" + objectType)\r\n\r\n        let laMap = {\r\n            fixed: [],\r\n            ref: []\r\n        };\r\n\r\n        for (const it of dataMap.data) {\r\n            let fixedFields = ['Isolator', 'AST Booster', 'Section Insulator'];\r\n\r\n            let ta = await this.objectByHdl(objectType, it.hdl);\r\n            let taClass = this.helperAttrByName(ta.attrs, 'Class Name').value;\r\n            let routeChainage = this.helperAttrByName(ta.attrs, 'Route Chainage');\r\n            if (routeChainage) {\r\n                let localMap = {\r\n                    objId: it.objId,\r\n                    class_name: taClass,\r\n                    route_chainage: Number(routeChainage.value),\r\n                    route_chainage_uom: routeChainage.uom,\r\n                    hdl: it.hdl,\r\n                    refObj: ta\r\n                };\r\n\r\n                if (fixedFields.indexOf(taClass) != -1)\r\n                    laMap.fixed.push(localMap);\r\n                else\r\n                    laMap.ref.push(localMap);\r\n            }\r\n        }\r\n\r\n        laMap.fixed = laMap.fixed.sort((a, b) => (a.route_chainage > b.route_chainage) ? 1 : -1);\r\n        laMap.ref = laMap.ref.sort((a, b) => (a.route_chainage > b.route_chainage) ? 1 : -1);\r\n        // console.log(\"laMap --------------> \" + JSON.stringify(laMap));\r\n        // console.log(laMap);\r\n        return laMap;\r\n        //working\r\n    }\r\n\r\n    static async getRouteObj(searchTerm) {\r\n        console.log(\"inside getRouteObj --------> searchTerm \"+searchTerm)\r\n        // var p = await this.getToken();//this is really bad practise as generate datamap could be proper async\r\n        var pp = await this.searchObject(\"TAGGED_ITEM\", searchTerm);\r\n        var ppp = await this.objectByHdl('TAGGED_ITEM', pp.data[0].hdl);\r\n        var pppp = await this.searchObjectWithAttr('TAGGED_ITEM', 'Route', searchTerm);\r\n        var dataMapRef = await this.generateDataMap(pppp, 'TAGGED_ITEM');\r\n        var assocs = await this.objectAssociations('TAGGED_ITEM', pp.data[0].hdl, \"EQUIPMENT_ITEM\");\r\n\r\n        var routeInfo = {\r\n            route_length: Number(this.helperAttrByName(ppp.attrs, 'Length').value),\r\n            route_uom: this.helperAttrByName(ppp.attrs, 'Length').uom,\r\n            from_node: this.helperAttrByName(ppp.attrs, 'From Reference Node').value,\r\n            to_node: this.helperAttrByName(ppp.attrs, 'To Reference Node').value,\r\n            dataMap: dataMapRef\r\n        }\r\n\r\n        let plaCount = 100 / Number(routeInfo.route_length);\r\n\r\n        var dd = await this.generateDataMapEQ(assocs, 'TAGGED_ITEM', routeInfo.route_length);\r\n        routeInfo.dataMapEq = dd;\r\n\r\n        for (let index = 0; index < routeInfo.dataMap.fixed.length; index++) {\r\n            routeInfo.dataMap.fixed[index].stylePlace = plaCount * routeInfo.dataMap.fixed[index].route_chainage;\r\n        }\r\n\r\n        for (let index = 0; index < routeInfo.dataMap.ref.length; index++) {\r\n            routeInfo.dataMap.ref[index].stylePlace = plaCount * routeInfo.dataMap.ref[index].route_chainage;\r\n        }\r\n        console.log(\"routeInfo  ------------> \"+JSON.stringify(routeInfo))\r\n        // console.log(routeInfo)\r\n        return routeInfo;\r\n    }\r\n\r\n    static helperAttrByName(attrs, attrName) {\r\n        //this entire function can be replaced by 1 or two lines TS/ES6\r\n        for (const key in attrs) {\r\n            if (attrs.hasOwnProperty(key)) {\r\n                const element = attrs[key];\r\n                if (element.name == attrName)\r\n                    return element;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static async getToken(username, password, prefixUrl) {\r\n        return axios.request({\r\n            url: \"/oauth2/token\",\r\n            method: \"post\",\r\n            baseURL: \"https://\" + prefixUrl + \".acl360.io\",\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            data: {\r\n                \"grant_type\": \"client_credentials\",\r\n                \"service_url\": \"https://\" + prefixUrl + \".pim360.io/\"\r\n            }\r\n        }).then(function (res) {\r\n            axios.defaults.headers.common = { 'Authorization': \"Bearer \" + res.data.access_token }\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static async getClsToken(username, password, prefixUrl) {\r\n        return axios.request({\r\n            url: \"/oauth2/token\",\r\n            method: \"post\",\r\n            baseURL: \"https://\" + prefixUrl + \".acl360.io\",\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            data: {\r\n                \"grant_type\": \"client_credentials\",\r\n                \"service_url\": \"https://\" + prefixUrl + \".cls360.io/\"\r\n            }\r\n        }).then(function (res) {\r\n            axios.defaults.headers.common = { 'Authorization': \"Bearer \" + res.data.access_token }\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static async getRequest(url) {\r\n        return axios.request({\r\n            url: url,\r\n            method: \"get\",\r\n            baseURL: `https://${localStorage.getItem(\"prefixUrl\")}.pim360.io/`,\r\n        }).then(function (res) {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    static async postRequest(url, query) {\r\n        return axios.request({\r\n            url: url,\r\n            method: \"post\",\r\n            baseURL: `https://${localStorage.getItem(\"prefixUrl\")}.pim360.io/`,\r\n            data: query\r\n        }).then(function (res) {\r\n            console.log(\"res ---------\", res)\r\n            return res.data;\r\n        })\r\n    }\r\n\r\n\r\n    static async contextFields(objectType) {\r\n        console.log(\"inside contextFields ------------> \"+objectType);\r\n        console.log(this.contextCache);\r\n        if (!this.contextCache)\r\n            this.contextCache = {};\r\n\r\n        if (!this.contextCache[objectType]) {\r\n            this.contextCache[objectType] = await this.getRequest('api/context/fields/' + objectType);\r\n        }\r\n\r\n        return this.contextCache[objectType];\r\n    }\r\n\r\n    static async objectByHdl(objectType, hdl) {\r\n        return this.getRequest(`api/objects/${objectType}/${hdl}`);\r\n    }\r\n\r\n    static async getAttributeGroups() {\r\n        return this.getRequest(`api/objects/attributegroups`);\r\n    }\r\n\r\n    static async objectAssociations(objectType, hdl, assocTo) {\r\n        return this.getRequest(`api/associations?type=${objectType}&hdl=${hdl}&assoc=${assocTo}&skip=0`);\r\n    }\r\n\r\n    static async searchObject(objectType, searchTerm) {\r\n        let searchCxt = await this.contextFields(objectType);\r\n\r\n        let body = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": {\r\n                \"logical\": \"AND\",\r\n                \"items\": [\r\n                    {\r\n                        \"handle\": searchCxt.ID.Hdl,\r\n                        \"operator\": \"$regex-l\",\r\n                        \"value\": searchTerm,\r\n                        \"caseSensitive\": false,\r\n                        \"excludeUoM\": false,\r\n                        \"regex\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"fields\": [\r\n                searchCxt.ID.Hdl,\r\n                searchCxt.CLASS.Hdl,\r\n                searchCxt.DESCRIPTION.Hdl\r\n            ]\r\n        };\r\n\r\n        let qReq = await this.postRequest('api/queries', body);\r\n\r\n        return this.getRequest(`api${qReq.resulturl}`);\r\n    }\r\n\r\n    static async searchObjectWithAttr(objectType, attrName, attrValue) {\r\n        console.log(\"inside searchObjectWithAttr ----------> objectType \"+objectType + \" attrName \" + attrName + \" attrValue \" + attrValue)\r\n        let searchCxtR = await this.contextFields(attrName);\r\n        let searchCxt = await this.contextFields(objectType);\r\n\r\n        let body = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": {\r\n                \"logical\": \"AND\",\r\n                \"items\": [\r\n                    {\r\n                        \"operator\": \"$regex-l\",\r\n                        \"value\": attrValue,\r\n                        \"handle\": \"TMiQuiViT1OEjp8uEeLy_Q\",\r\n                        \"caseSensitive\": false,\r\n                        \"excludeUoM\": false,\r\n                        \"regex\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"fields\": [\r\n                searchCxt.ID.Hdl,\r\n                searchCxt.CLASS.Hdl,\r\n                searchCxt.DESCRIPTION.Hdl\r\n            ]\r\n        };\r\n\r\n        let qReq = await this.postRequest('api/queries', body);\r\n\r\n        return this.getRequest(`api${qReq.resulturl}`);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/NavBar'\r\nimport Api from \"../api/api\";\r\n\r\n\r\nfunction LoginScren(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  // const [count, setCount] = useState(0);\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [prefixUrl, setPrefixUrl] = useState(\"\");\r\n  const [isUserNameError, setIsUserNameError] = useState(false);\r\n  const [isPassError, setIsPassError] = useState(false);\r\n  const [isUrlError, setIsUrlError] = useState(false);\r\n  const [isError, setisError] = useState();\r\n  const [errMsg, setErrMsg] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:border-purple-900\";\r\n  const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none border-red-500\";\r\n\r\n\r\n  const doLogin = () => {\r\n    setIsLoading(true);\r\n    //reset error value\r\n    setisError(false);\r\n    setIsUserNameError(false);\r\n    setIsPassError(false);\r\n    setIsUrlError(false);\r\n    setErrMsg(\"\");\r\n\r\n    // validation\r\n    if (userName !== undefined && userName.length > 0 && password.length > 0 && prefixUrl.length > 0) {\r\n      //setting prefix url to localstorage\r\n      localStorage.setItem(\"prefixUrl\", prefixUrl);\r\n      //setting userName to localstorage\r\n      localStorage.setItem(\"userName\", userName);\r\n      //setting password to localstorage\r\n      localStorage.setItem(\"password\", password);\r\n      Api.getToken(userName, password, prefixUrl).then((response) => {\r\n        if (response.data.access_token != \"\") {\r\n          setIsLoading(false);\r\n          //set token in local storage\r\n          localStorage.setItem(\"b_token\", response.data.token_type + \" \" + response.data.access_token);\r\n          history.push('/search');\r\n        };\r\n      }).catch((e)=>{\r\n        //setting common error\r\n        setisError(true);\r\n        setErrMsg(\"Something went wrong!!!\");\r\n        setIsLoading(false);\r\n      })\r\n    }\r\n    else {\r\n      //setting userName error \r\n      if (userName.length == 0) {\r\n        setIsUserNameError(true);\r\n      }\r\n      //setting password error \r\n      if (password.length == 0) {\r\n        setIsPassError(true);\r\n      }\r\n      //setting userName error \r\n      if (prefixUrl.length == 0) {\r\n        setIsUrlError(true);\r\n      }\r\n      //setting common error\r\n      setisError(true);\r\n      setErrMsg(\"Please fill all the fields\");\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar showLogoutButton={false}></NavBar>\r\n      {isLoading ?\r\n        <div className=\"popUpContainer\">\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n        : \"\"}\r\n      <div className=\"w-full max-w-sm login-container mt-5\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Username\r\n          </label>\r\n            <input className={isUserNameError ? errInputClass : inputClass}\r\n              id=\"username\" type=\"text\" value={userName} placeholder=\"Enter your username\" onChange={(e) => setUserName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              Password\r\n          </label>\r\n            <input className={isPassError ? errInputClass : inputClass} value={password}\r\n              id=\"password\" type=\"password\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Prefix URL\r\n          </label>\r\n            <input className={isUrlError ? errInputClass : inputClass} value={prefixUrl}\r\n              id=\"prefixUrl\" type=\"text\" placeholder=\"Enter your prefix url\" onChange={(e) => setPrefixUrl(e.target.value)}\r\n            />\r\n            <span className=\"text-gray-700 text-xs\">Note: Its is 1st portion of your domain name (also known as subdomain), or its called as scope of pim360.</span>\r\n          </div>\r\n          <p className=\"text-center text-red-500\">{isError ? errMsg : \"\"}</p>\r\n          <div className=\"flex\">\r\n            <button className=\"mt-3 bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-auto\" type=\"button\"\r\n              onClick={() => { doLogin() }}>\r\n              Proceed\r\n      </button>\r\n          </div>\r\n        </form>\r\n        <br>\r\n        </br>\r\n        <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScren;","// KML Generator\\\r\nexport const KML_GEN = (geoList, inputArray) => {\r\n    var latlngToDms = require('latlng-to-dms');\r\n\r\n    function toDegreesMinutesAndSeconds(coordinate) {\r\n        var absolute = Math.abs(coordinate);\r\n        var degrees = Math.floor(absolute);\r\n        var minutesNotTruncated = (absolute - degrees) * 60;\r\n        var minutes = Math.floor(minutesNotTruncated);\r\n        var seconds = Math.floor((minutesNotTruncated - minutes) * 60);\r\n    \r\n        return degrees + \"° \" + minutes + \"' \" + seconds + `''`;\r\n    }\r\n\r\n    if (geoList) {\r\n        if (geoList.length > 0) {\r\n            // remove space with _\r\n            geoList.forEach(function (e, i) {\r\n                // Iterate over the keys of object\r\n                Object.keys(e).forEach(function (key) {\r\n\r\n                    // Copy the value\r\n                    var val = e[key],\r\n                        newKey = key.replace(/\\s+/g, '_');\r\n\r\n                    // Remove key-value from object\r\n                    delete geoList[i][key];\r\n\r\n                    // Add value with new key\r\n                    geoList[i][newKey] = val;\r\n                });\r\n            });\r\n\r\n            // custom json to ready for xml json\r\n            let newKML = [];\r\n            if (geoList.length > 0) {\r\n                geoList.map((item, index) => {\r\n                    let new_html_for_description = Object.keys(item).map((j) => {\r\n                        return \"<div>\" + j + \" - \" + item[j] + \"<br></div>\";\r\n                    }).join('')\r\n\r\n                    let newItem = {\r\n                        \"Placemark\": {\r\n                            \"name\": inputArray[index],\r\n                            \"description\": `<![CDATA[${new_html_for_description}]]>`,\r\n                            \"Point\": {\r\n                                \"coordinates\": `${item[\"Longitude\"]},${item[\"Latitude\"]}`\r\n                                // \"coordinates\": latlngToDms(`${item[\"Latitude\"]}, ${item[\"Longitude\"]}`)\r\n                                // \"coordinates\": `${toDegreesMinutesAndSeconds(item[\"Latitude\"])} ${item[\"Latitude\"] > 0 ? \"N\" : \"S\"}, ${toDegreesMinutesAndSeconds(item[\"Longitude\"])} ${item[\"Longitude\"] > 0 ? \"E\" : \"W\"}`\r\n                            }\r\n                        }\r\n                    };\r\n                    newKML.push(newItem)\r\n                })\r\n            }\r\n\r\n            // object to xml\r\n            function OBJtoXML(obj) {\r\n                var xml = '';\r\n                for (var prop in obj) {\r\n                    xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\r\n                    if (obj[prop] instanceof Array) {\r\n                        for (var array in obj[prop]) {\r\n                            xml += \"<\" + prop + \">\";\r\n                            xml += OBJtoXML(new Object(obj[prop][array]));\r\n                            xml += \"</\" + prop + \">\";\r\n                        }\r\n                    } else if (typeof obj[prop] == \"object\") {\r\n                        xml += OBJtoXML(new Object(obj[prop]));\r\n                    } else {\r\n                        xml += obj[prop];\r\n                    }\r\n                    xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\r\n                }\r\n                var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\r\n                return xml\r\n            }\r\n\r\n            // formatXml\r\n            function formatXml (xml) {\r\n                var reg = /(>)\\s*(<)(\\/*)/g; // updated Mar 30, 2015\r\n                var wsexp = / *(.*) +\\n/g;\r\n                var contexp = /(<.+>)(.+\\n)/g;\r\n                xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\r\n                var pad = 0;\r\n                var formatted = '';\r\n                var lines = xml.split('\\n');\r\n                var indent = 0;\r\n                var lastType = 'other';\r\n                // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions \r\n                var transitions = {\r\n                    'single->single': 0,\r\n                    'single->closing': -1,\r\n                    'single->opening': 0,\r\n                    'single->other': 0,\r\n                    'closing->single': 0,\r\n                    'closing->closing': -1,\r\n                    'closing->opening': 0,\r\n                    'closing->other': 0,\r\n                    'opening->single': 1,\r\n                    'opening->closing': 0,\r\n                    'opening->opening': 1,\r\n                    'opening->other': 1,\r\n                    'other->single': 0,\r\n                    'other->closing': -1,\r\n                    'other->opening': 0,\r\n                    'other->other': 0\r\n                };\r\n\r\n                for (var i = 0; i < lines.length; i++) {\r\n                    var ln = lines[i];\r\n\r\n                    // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration\r\n                    if (ln.match(/\\s*<\\?xml/)) {\r\n                        formatted += ln + \"\\n\";\r\n                        continue;\r\n                    }\r\n                    // ---\r\n\r\n                    var single = Boolean(ln.match(/<.+\\/>/)); // is this line a single tag? ex. <br />\r\n                    var closing = Boolean(ln.match(/<\\/.+>/)); // is this a closing tag? ex. </a>\r\n                    var opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)\r\n                    var type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\r\n                    var fromTo = lastType + '->' + type;\r\n                    lastType = type;\r\n                    var padding = '';\r\n\r\n                    indent += transitions[fromTo];\r\n                    for (var j = 0; j < indent; j++) {\r\n                        padding += '\\t';\r\n                    }\r\n                    if (fromTo == 'opening->closing')\r\n                        formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n'; // substr removes line break (\\n) from prev loop\r\n                    else\r\n                        formatted += padding + ln + '\\n';\r\n                }\r\n\r\n                return formatted;\r\n            };\r\n\r\n            // final processing\r\n            let beforeKML = OBJtoXML(newKML)\r\n            const responseMessage = `<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\"><Document id=\"1\">` + beforeKML + `</Document></kml>`;\r\n\r\n            return formatXml(responseMessage);\r\n        } else {\r\n            return \"\";\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { FileSaver, saveAs } from 'file-saver';\r\nimport { KML_GEN } from '../utils/KML_GEN'\r\nimport NavBar from '../components/NavBar'\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png\" />{text}</div>;\r\n\r\nconst HomeScreen = props => {\r\n    const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\r\n    const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\";\r\n    const [isError, setIsError] = useState();\r\n    const [inputTag, setInputTag] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n\r\n    const submitTagNumber = () => {\r\n        //reset default value \r\n        setIsError(false);\r\n\r\n        //validation\r\n        if (inputTag !== null && inputTag.length > 0) {\r\n            setIsLoading(true)\r\n            let arrData = [];\r\n            let counter = 0;\r\n            var splitedValue = inputTag.split(\",\").map((item) => {\r\n                return item.trim();\r\n            });\r\n            setArrSplittedValue(splitedValue);\r\n            splitedValue.map((id) => {\r\n                let url = \"https://\" + localStorage.getItem(\"prefixUrl\") + \".pim360.io/api/objects/TAGGED_ITEM/id/\" + id;\r\n                let token = localStorage.getItem(\"b_token\");\r\n                fetch(url, {\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: token,\r\n                    }\r\n                }).then(response => {\r\n                    var responseValue = response.json();\r\n                    return responseValue;\r\n                }).then(responseData => {\r\n                    if (responseData.attrs !== undefined && responseData.attrs !== null) {\r\n                        arrData.push(responseData);\r\n                    }\r\n                    else {\r\n                        console.log(responseData);\r\n                    }\r\n                    counter += 1;\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                        setData(arrData);\r\n                        return\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"error -------->\" + error);\r\n                    counter += 1\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n                return '';\r\n            })\r\n        }\r\n        else {\r\n            setIsError(true);\r\n            console.log(\"show error\");\r\n        }\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key) => {\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                return '';\r\n            })\r\n            arrNameValue.push(obj);\r\n            return '';\r\n        });\r\n        console.log(\"arrNameValue ------->\", arrNameValue)\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        // console.log(JSON.stringify(arrNameValue))\r\n        // console.log(arrSplittedValue);\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 && (arrNameValue[0].hasOwnProperty(\"Latitude\") || arrNameValue[0].hasOwnProperty(\"LATITUDE\") || arrNameValue[0].hasOwnProperty(\"Approved Latitude\")) ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                                // lat: parseFloat(arrNameValue[0][\"Latitude\"]),\r\n                                // lng: parseFloat(arrNameValue[0][\"Longitude\"])\r\n                            }}\r\n                            center={{\r\n                                // lat: parseFloat(arrNameValue[0][\"Latitude\"]),\r\n                                // lng: parseFloat(arrNameValue[0][\"Longitude\"])\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 18 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                lat={parseFloat(nameValue.hasOwnProperty(\"Latitude\") ? nameValue[\"Latitude\"] : (nameValue.hasOwnProperty(\"LATITUDE\") ? nameValue[\"LATITUDE\"] : (nameValue.hasOwnProperty(\"Approved Latitude\") ? nameValue[\"Approved Latitude\"] : 0)))}\r\n                                lng={parseFloat(nameValue.hasOwnProperty(\"Longitude\") ? nameValue[\"Longitude\"] : (nameValue.hasOwnProperty(\"LONGITUDE\") ? nameValue[\"LONGITUDE\"] : (nameValue.hasOwnProperty(\"Approved Longitude\") ? nameValue[\"Approved Longitude\"] : 0)))}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={index} uuid=\"attributes\">\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                        &emsp;\r\n                                        {arrSplittedValue[index]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel>\r\n                                    <table class=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key) => {\r\n                                                return <tr>\r\n                                                    <td class=\"border px-4 py-2\">{key}</td>\r\n                                                    <td class=\"border px-4 py-2\">{item[key]}</td>\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar showLogoutButton={true}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"}\r\n            <div className=\"p-10\">\r\n                <div className=\"w-full max-w\">\r\n                    <form className=\"bg-white rounded pt-6 pb-8 mb-4\">\r\n                        <div>\r\n                            <div className=\"inline-block\">\r\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                    Tag Number\r\n                            </label>\r\n                                <input className={isError ? errInputClass : inputClass} value={inputTag}\r\n                                    id=\"tagNumber\" type=\"text\" placeholder=\"Enter your tag number\" onChange={(e) => setInputTag(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\">\r\n                                <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                                    onClick={() => { submitTagNumber() }}\r\n                                >\r\n                                    Submit\r\n                             </button>\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\" style={{ display: data.length > 0 ? \"\" : \"none\" }}>\r\n                                <button onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    // console.log()\r\n                                    let pre_kml_data = JSON.parse(localStorage.getItem('pre_kml_data'))\r\n                                    let inputArray = JSON.parse(localStorage.getItem('inputsArray'))\r\n                                    var file = new File([`${KML_GEN(pre_kml_data, inputArray)}`], `${new Date()}.kml`, { type: \"text/xml;charset=utf-8\" });\r\n                                    saveAs(file);\r\n                                }} class=\"bg-purple-800 hover:bg-purple-900 text-white  py-2 px-4 rounded inline-flex items-center\">\r\n                                    <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\r\n                                    <span>Download KML</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\" style={{ display: data.length > 0 ? \"\" : \"none\" }}>\r\n                                <button onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    let pre_kml_data = JSON.parse(localStorage.getItem('pre_kml_data'))\r\n                                    let json = { type: 'FeatureCollection', features: [] };\r\n                                    let temp = pre_kml_data.map((i) => {\r\n                                        json.features.push({\r\n                                            type: 'Feature',\r\n                                            geometry: {\r\n                                                type: 'Point',\r\n                                                // coordinates: [parseFloat(i.Longitude), parseFloat(i.Latitude)],\r\n                                            },\r\n                                            properties: i,\r\n                                        });\r\n                                    });\r\n                                    var file = new File([`${JSON.stringify(json)}`], `${new Date()}.json`, { type: \"application/json;charset=utf-8\" });\r\n                                    saveAs(file);\r\n                                }} class=\"bg-purple-800 hover:bg-purple-900 text-white  py-2 px-4 rounded inline-flex items-center\">\r\n                                    <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\r\n                                    <span>Download JSON</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        {isError ? <p className=\"text-red-500 pl-2 text-xs pt-1\">Tag name is required </p> : \"\"}\r\n                    </form>\r\n                </div>\r\n                {data !== undefined && data.length > 0 &&\r\n                    <div>\r\n                        {showAttr()}\r\n                    </div>\r\n                }\r\n                <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HomeScreen;","import React, { useEffect, useState } from 'react';\r\nimport Api from \"../api/api\";\r\n\r\nconst Modal = (props) => {\r\n    const [eicData, setEicData] = useState([]);\r\n    const [deliverablesData, setDeliverablesData] = useState([]);\r\n    const [ensData, setEnsData] = useState([]);\r\n    const [sourceData, setSourceData] = useState([]);\r\n    const [domainData, setDomainData] = useState([]);\r\n    const [finalObj, setFinalObj] = useState({\r\n        \"hdl\": \"\",\r\n        \"status\": \"PENDING\",\r\n        \"params\": {\r\n            \"eic_handle\": \"\",\r\n            \"manifest_name\": \"\",\r\n            \"inputfile\": \"\",\r\n            \"worksheets\": \"\",\r\n            \"object_type\": \"\",\r\n            \"deliverable\": \"\",\r\n            \"source_handle\": \"\",\r\n            \"classification\": \"\",\r\n            \"ens_name\": \"\",\r\n            \"terminate_attributes\": \"ignore\"\r\n        }\r\n    }\r\n    );\r\n    const selectClass = \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\";\r\n    const lableClass = \"block text-sm font-medium text-gray-700\";\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let clsToken = localStorage.getItem(\"b_token_cls\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let cls_baseUrl = `https://${prefixUrl}.cls360.io/api`;\r\n    const objectType = [\r\n        { value: \"TAGGED_ITEM\", name: \"Tagged Item\" },\r\n        { value: \"EQUIPMENT_ITEM\", name: \"Equipment Item\" },\r\n        { value: \"EQUIPMENT_MODEL\", name: \"Equipment Model\" },\r\n        { value: \"DOCUMENT\", name: \"Document\" }\r\n    ];\r\n    const classification = [\r\n        { value: \"cls\", name: \"CLASS\" },\r\n        { value: \"ens\", name: \"ENS\" }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getEICList();\r\n    }, []);\r\n\r\n    const onClickCancel = () => {\r\n        if (props.onClickCancel) {\r\n            props.onClickCancel();\r\n        };\r\n    };\r\n\r\n    const getEICList = () => {\r\n        console.log('inside getEICList ---------->')\r\n        let url = `${baseUrl}/eic/list`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let eic_List = responseData.rows.map((item) => {\r\n                    let keyToGetValue = Object.keys(item)[4];\r\n                    if (item[keyToGetValue] != undefined) {\r\n                        return { \"name\": item[keyToGetValue], \"value\": item.id }\r\n                    }\r\n                    else {\r\n                        return null\r\n                    }\r\n                });\r\n                let filteredList = eic_List.filter(item => item != null);\r\n                // console.log('filteredList -------', JSON.stringify(filteredList))\r\n                setEicData(filteredList)\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getEICList error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getDeliverables = (eic) => {\r\n        console.log('inside getDeliverables ---------->');\r\n        let url = `${baseUrl}/eic/${eic}/deliverables`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                // console.log('getDeliverables   -------->', JSON.stringify(responseData));\r\n                let deliverable_keys = Object.keys(responseData.Deliverables)\r\n                if (deliverable_keys.length != null && deliverable_keys.length > 0) {\r\n                    let filter_list = deliverable_keys.filter(e => e != \"length\");\r\n                    let deliverables_list = [];\r\n                    filter_list.map((filter) => {\r\n                        responseData.Deliverables[filter].map(({ ID, Hdl }) => {\r\n                            deliverables_list.push({ \"name\": ID, \"value\": Hdl });\r\n                        });\r\n                    });\r\n                    setDeliverablesData(deliverables_list);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getDeliverables error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getTimeLine = () => {\r\n        console.log('inside getTimeLine ---------->');\r\n        let url = `${baseUrl}/timeline?categories=IMPORT&offset=0&limit=200`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let tempObj = { ...finalObj };\r\n                tempObj.hdl = responseData[0].Hdl;\r\n                setFinalObj(tempObj);\r\n                if (props.onClickSubmit) {\r\n                    props.onClickSubmit(tempObj);\r\n                };\r\n                // console.log('final obj --------', JSON.stringify(tempObj));\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getTimeLine error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const authCls = () => {\r\n        console.log('inside authCls -------------> ')\r\n        Api.getClsToken(userName, password, prefixUrl).then((response) => {\r\n            if (response.data.access_token != \"\") {\r\n                //set token in local storage\r\n                localStorage.setItem(\"b_token_cls\", response.data.token_type + \" \" + response.data.access_token);\r\n                clsToken = localStorage.getItem(\"b_token_cls\");\r\n                getDomains();\r\n            };\r\n        }).catch((e) => {\r\n            //setting common error\r\n            console.log('authCls error-------> ');\r\n        });\r\n    };\r\n\r\n    const getDomains = () => {\r\n        console.log('inside getDomains ---------->');\r\n        let url = `${cls_baseUrl}/domains?pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let domain_List = responseData.value.map(({ Name, Hdl }) => {\r\n                    return { \"name\": Name, \"value\": Hdl };\r\n                })\r\n                setDomainData(domain_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getDomains error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getSourceNames = (hdl) => {\r\n        console.log('inside getSourceNames ---------->');\r\n        let url = `${cls_baseUrl}/domains/${hdl}/classes?filter=%5BObject%20Type%5D%20cnt%20Source&pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let source_List = responseData.value.map(({ Name, Hdl }) => {\r\n                    return { \"name\": Name, \"value\": Hdl }\r\n                })\r\n                setSourceData(source_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getSourceNames error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getEnsNames = (hdl) => {\r\n        console.log('inside getEnsNames ---------->');\r\n        let url = `${cls_baseUrl}/domains/${hdl}/classes?filter=%5BObject%20Type%5D%20cnt%20Numbering&pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let ens_List = responseData.value.map(({ Name }) => {\r\n                    return { \"name\": Name, \"value\": Name }\r\n                })\r\n                setEnsData(ens_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getEnsNames error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"none\" }} className=\"modal-container\">\r\n                <div className=\"modal\">\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Object Type\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.object_type = e.target.value\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Object Type</option>\r\n                            {objectType.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Classification\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.classification = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Classification</option>\r\n                            {classification.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            EIC\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.eic_handle = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                                getDeliverables(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Eic</option>\r\n                            {eicData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Deliverables\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.deliverable = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                                authCls();\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {deliverablesData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Domains\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                getSourceNames(e.target.value);\r\n                                getEnsNames(e.target.value);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {domainData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Source Name\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.source_handle = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Source</option>\r\n                            {sourceData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            ENS Name\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.ens_name = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {ensData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"x-icon\" onClick={() => onClickCancel()}>\r\n                        X\r\n                    </button>\r\n                    <div>\r\n                        <button className=\"mr-3\" onClick={() => onClickCancel()}>\r\n                            Cancel\r\n                    </button>\r\n                        <button className=\"\" onClick={() => getTimeLine()}>\r\n                            Submit\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"fixed z-10 inset-0 overflow-y-auto\">\r\n                <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                    <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n                        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n                    </div>\r\n                    <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n                    <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n                        <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                            <div className=\"mt-3\">\r\n                                <label for=\"objectType\" className={lableClass}>Object Type</label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.object_type = e.target.value\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Object Type</option>\r\n                                    {objectType.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Classification\r\n                                </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.classification = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Classification</option>\r\n                                    {classification.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    EIC\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.eic_handle = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                        getDeliverables(e.target.value)\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Eic</option>\r\n                                    {eicData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Deliverables\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.deliverable = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                        authCls();\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {deliverablesData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Domains\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        getSourceNames(e.target.value);\r\n                                        getEnsNames(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {domainData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Source Name\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.source_handle = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Source</option>\r\n                                    {sourceData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    ENS Name\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.ens_name = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {ensData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                            <button onClick={() => getTimeLine()} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-900 text-base font-medium text-white hover:bg-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                                Submit\r\n                            </button>\r\n                            <button onClick={() => onClickCancel()} type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport Upload from \"../components/Upload\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\nconst axios = require('axios');\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\n\r\nfunction LiveView(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isError, setIsError] = useState();\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n    const [showData, setShowData] = useState(false);\r\n    const [arrTagNumber, setArrTagNumber] = useState([]);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [isContentEditable, setisContentEditable] = useState(false);\r\n    const [editedAttr, seteditedAttr] = useState({});\r\n    const [showModal, setshowModal] = useState(false);\r\n    let tempBody = {};\r\n    let tempSelectedObj = {};\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let arrData = [];\r\n\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (e, selectedLiveView, selectedHdl) => {\r\n        setselectedLiveViewHdl(selectedLiveView);\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews/${selectedHdl}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(response => {\r\n            if (response !== undefined && response !== null) {\r\n                getResultUrl(response);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchSelectedLiveViewData error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const firstApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                console.log('firstApi res ----->', JSON.stringify(data));\r\n                secondApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error('firstApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const secondApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=import`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error('secondApi response ------------>', data);\r\n                thirdApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error(' secondApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const thirdApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=download-new`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                console.log('thirdApi res ----->', JSON.stringify(data));\r\n                fourthApi(data.response);\r\n            })\r\n            .catch((error) => {\r\n                console.error('thirdApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const fourthApi = (hdl) => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=update&file_hdl=${hdl}`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error(' fourthApi response--------->:', data);\r\n                setIsLoading(false);\r\n                alert('Successfully updated.')\r\n            })\r\n            .catch((error) => {\r\n                console.error(' fourthApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n\r\n    const getResultUrl = (response) => {\r\n        let createQueryBody = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": response.Data.conditions,\r\n            \"fields\": response.Data.fields\r\n        };\r\n        let url = `${baseUrl}/queries`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(createQueryBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                return getFinalResult(data.resulturl).then((finalResult) => {\r\n                    // console.log('finalResult ------->', JSON.stringify(finalResult));\r\n                    setIsLoading(false);\r\n                    let arrFirstObjKeys = Object.keys(finalResult[0]).filter(e => typeof finalResult[0][e] == 'object')\r\n                    let arrModifiedData = [];\r\n                    let arrTagNumberData = [];\r\n                    finalResult.map((item) => {\r\n                        let obj = {};\r\n                        arrFirstObjKeys.map((key) => {\r\n                            if (item[key].name == \"Tag Number\" || item[key].name == \"TAG NUMBER\") {\r\n                                arrTagNumberData.push(item[key].value);\r\n                            }\r\n                            obj[item[key].name] = item[key].value;\r\n                        });\r\n                        arrModifiedData.push(obj);\r\n                    });\r\n                    if (arrModifiedData.length > 0) {\r\n                        if (arrModifiedData[0].hasOwnProperty(\"Tag Number\") || arrModifiedData[0].hasOwnProperty(\"TAG NUMBER\")) {\r\n                            if (arrTagNumberData.length > 0) {\r\n                                setArrTagNumber(arrTagNumberData);\r\n                            }\r\n                            setShowData(true);\r\n                        }\r\n                        else {\r\n                            //finish process and show no data found\r\n                            setShowData(true)\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const getFinalResult = (queryResult, pageSize = 200, page = 0) => {\r\n        let url = `${baseUrl}${queryResult}?limit=${pageSize}&skip=${page}`;\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        return Api.getRequest(url).then((response) => {\r\n            arrData.push(...response.data);\r\n            if (response.hasmore) {\r\n                return getFinalResult(queryResult, pageSize, (arrData.length / pageSize) * 200)\r\n            } else {\r\n                setIsLoading(false);\r\n                return arrData;\r\n            }\r\n        });\r\n    }\r\n\r\n    const getAttributes = (selectedTag) => {\r\n        let url = `${baseUrl}/objects/TAGGED_ITEM/id/${selectedTag}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            setData(responseData);\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(\"getAttributes error -------->\" + error);\r\n        })\r\n    }\r\n\r\n    const onChangeAttributeValue = (value, key) => {\r\n        let obj = {};\r\n        if(Object.keys(editedAttr).length > 0){\r\n            obj = {...editedAttr};\r\n            tempSelectedObj = {};\r\n        }\r\n        else{\r\n            console.log('tempSelectedObj --->', JSON.stringify(tempSelectedObj))\r\n            obj = {...tempSelectedObj};\r\n        }\r\n        obj[key] = value;\r\n        seteditedAttr(obj);\r\n    }\r\n\r\n    const handleSubmitModal = (value) => {\r\n        let finalObj = {\r\n            finalObj: value,\r\n            xlsxData: [editedAttr],\r\n        };\r\n        tempBody = finalObj;\r\n        setshowModal(false);\r\n        firstApi();\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        let arrkeys = Object.keys(data.attrs)\r\n        let obj = {};\r\n        arrkeys.map((key) => {\r\n            obj[data.attrs[key].name] = data.attrs[key].value;\r\n            return '';\r\n        })\r\n        arrNameValue.push(obj);\r\n        tempSelectedObj = arrNameValue[0];\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 && arrNameValue[0].hasOwnProperty(\"Approved Longitude\") && arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <a target=\"_blank\" href={`https://earth.google.com/web/search/Arsenal+fc/@${parseFloat(arrNameValue[0][\"Approved Latitude\"])},${parseFloat(arrNameValue[0][\"Approved Longitude\"])},9.09858867a,612.98636056d,35y,-40.1316669h,45.00000069t,0`}>Click here for Google Earth</a>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true,\r\n                                    mapTypeId: \"satellite\"\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            center={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 18 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                    lat={nameValue[\"Approved Latitude\"]}\r\n                                    lng={nameValue[\"Approved Longitude\"]}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <div>\r\n                        {!isContentEditable \r\n                            ? \r\n                                <button className=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={()=>setisContentEditable(true)}>\r\n                                    Edit\r\n                                </button>\r\n                            : \r\n                                <div>\r\n                                     <button className=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3\" onClick={()=> setisContentEditable(false)}>\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button className=\"inline-flex justify-center py-2 px-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-900 hover:bg-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={()=> setshowModal(true)}>\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={item.Latitude} uuid=\"attributes\" key={item+index}>\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                        &emsp;\r\n                                        {arrNameValue[index].hasOwnProperty(\"Tag Number\") ? arrNameValue[index][\"Tag Number\"] : arrNameValue[index][\"TAG NUMBER\"]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel className=\"liveView-item-container\">\r\n                                    <table className=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key, index) => {\r\n                                                return <tr key={key + index}>\r\n                                                    <td className=\"border px-4 py-2\">{key}</td>\r\n                                                    {!isContentEditable \r\n                                                    ? \r\n                                                        <td className=\"border px-4 py-2\">{item[key]}</td>\r\n                                                    : \r\n                                                        <td className=\"border px-4 py-2\">\r\n                                                            <input onChange={(e)=> onChangeAttributeValue(e.target.value, key)} defaultValue={item[key]}></input>\r\n                                                        </td>\r\n                                                    }\r\n                                                    \r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            {showModal ? <Modal onClickCancel={()=> {setshowModal(false)}} onClickSubmit={(value)=> handleSubmitModal(value)} /> : \"\" }\r\n            <div id=\"liveView-container\">\r\n                <div className=\"sideBar bg-purple-900\">\r\n                    {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                        return (<div  key={liveView.name + liveView.Hdl + index}>\r\n                            <button\r\n                                onClick={(e) => fetchSelectedLiveViewData(e, liveView.Name, liveView.Hdl)}\r\n                               \r\n                                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex my-2 justify-center w-full\">\r\n                                {liveView.Name}\r\n                            </button>\r\n                        </div>)\r\n                    }) : \"\"}\r\n                </div>\r\n                <div className=\"liveView-wrapper\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewHdl}</p>\r\n                            </div>\r\n                            {arrTagNumber.length > 0 &&\r\n                                <div className=\"m-4 mt-0\">\r\n                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                        Tag Number\r\n                                    </label>\r\n                                    <div className=\"inline-block relative w-1/4\">\r\n                                        <select\r\n                                            className=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                                            onChange={(e) => {\r\n                                                getAttributes(e.target.value)\r\n                                            }}>\r\n                                            <option value=\"\">Select</option>\r\n                                            {\r\n                                                arrTagNumber.map((tag, index) => {\r\n                                                    return <option value={tag} key={tag + index}>{tag}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                            <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"inline-block relative w-1/4 ml-3\">\r\n                                        {\r\n                                            data !== undefined && Object.keys(data).length > 0 ?\r\n                                                <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${data.hdl}`}>\r\n                                                    <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n                                                        \r\n                                                        e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                                                    }} />\r\n                                                </a>\r\n                                                : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                            }\r\n                            {data !== undefined && Object.keys(data).length > 0 &&\r\n                                <div>\r\n                                    {showAttr()}\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveView;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport search from \"../assests/search.svg\";\r\nimport mapboxgl from 'mapbox-gl';\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\n\r\n\r\nfunction LiveToMap(props) {\r\n  const [arrLiveView, setarrLiveView] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showData, setShowData] = useState(false);\r\n  const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n  const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n  const [showMapBox, setShowMapBox] = useState(false);\r\n  const [boxMapData, setBoxMapData] = useState({});\r\n  const [googleMapData, setGoogleMapData] = useState([]);\r\n  //map states\r\n  const mapContainerRef = useRef(null);\r\n  const [lng, setLng] = useState(5);\r\n  const [lat, setLat] = useState(34);\r\n  const [zoom, setZoom] = useState(5);\r\n  let map = null;\r\n  //local storage values\r\n  let token = localStorage.getItem(\"b_token\");\r\n  let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n  let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n  let userName = localStorage.getItem(\"userName\");\r\n  let password = localStorage.getItem(\"password\");\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n    fetchLiveView();\r\n  }, []);\r\n\r\n  const show_mapBox = () => {\r\n    map = new mapboxgl.Map({\r\n      container: \"map-container\",\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n    map.on('load', function () {\r\n      // Add an image to use as a custom marker\r\n      map.loadImage(\r\n        'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n        function (error, image) {\r\n          if (error) throw error;\r\n          map.addImage('custom-marker', image);\r\n          // console.log('boxMapData --------', JSON.stringify(boxMapData))\r\n          // Add a GeoJSON source with 2 points\r\n          map.addSource('points', {\r\n            'type': 'geojson',\r\n            'data': boxMapData,\r\n            cluster: true,\r\n            clusterMaxZoom: 14, // Max zoom to cluster points on\r\n            clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\r\n          });\r\n\r\n          // Add a symbol layer\r\n          map.addLayer({\r\n            'id': 'points',\r\n            'type': 'symbol',\r\n            'source': 'points',\r\n            'layout': {\r\n              'icon-image': 'custom-marker',\r\n              // get the title name from the source's \"title\" property\r\n              'text-field': ['get', 'title'],\r\n              'text-font': [\r\n                'Open Sans Semibold',\r\n                'Arial Unicode MS Bold'\r\n              ],\r\n              'text-offset': [0, 1.25],\r\n              'text-anchor': 'top'\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'clusters',\r\n            type: 'circle',\r\n            source: 'points',\r\n            filter: ['has', 'point_count'],\r\n            paint: {\r\n              // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n              // with three steps to implement three types of circles:\r\n              //   * Blue, 20px circles when point count is less than 100\r\n              //   * Yellow, 30px circles when point count is between 100 and 750\r\n              //   * Pink, 40px circles when point count is greater than or equal to 750\r\n              'circle-color': [\r\n                'step',\r\n                ['get', 'point_count'],\r\n                '#51bbd6',\r\n                100,\r\n                '#f1f075',\r\n                750,\r\n                '#f28cb1'\r\n              ],\r\n              'circle-radius': [\r\n                'step',\r\n                ['get', 'point_count'],\r\n                20,\r\n                100,\r\n                30,\r\n                750,\r\n                40\r\n              ]\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'cluster-count',\r\n            type: 'symbol',\r\n            source: 'points',\r\n            filter: ['has', 'point_count'],\r\n            layout: {\r\n              'text-field': '{point_count_abbreviated}',\r\n              'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n              'text-size': 12\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'unclustered-point',\r\n            type: 'circle',\r\n            source: 'points',\r\n            filter: ['!', ['has', 'point_count']],\r\n            paint: {\r\n              'circle-color': '#11b4da',\r\n              'circle-radius': 4,\r\n              'circle-stroke-width': 1,\r\n              'circle-stroke-color': '#fff'\r\n            }\r\n          });\r\n\r\n          // inspect a cluster on click\r\n          map.on('click', 'clusters', function (e) {\r\n            var features = map.queryRenderedFeatures(e.point, {\r\n              layers: ['clusters']\r\n            });\r\n            var clusterId = features[0].properties.cluster_id;\r\n            map.getSource('points').getClusterExpansionZoom(\r\n              clusterId,\r\n              function (err, zoom) {\r\n                if (err) return;\r\n\r\n                map.easeTo({\r\n                  center: features[0].geometry.coordinates,\r\n                  zoom: zoom\r\n                });\r\n              }\r\n            );\r\n          });\r\n\r\n          // When a click event occurs on a feature in\r\n          // the unclustered-point layer, open a popup at\r\n          // the location of the feature, with\r\n          // description HTML from its properties.\r\n          map.on('click', 'unclustered-point', function (e) {\r\n            var coordinates = e.features[0].geometry.coordinates.slice();\r\n            var mag = e.features[0].properties.mag;\r\n            var tsunami;\r\n\r\n            if (e.features[0].properties.tsunami === 1) {\r\n              tsunami = 'yes';\r\n            } else {\r\n              tsunami = 'no';\r\n            }\r\n\r\n            // Ensure that if the map is zoomed out such that\r\n            // multiple copies of the feature are visible, the\r\n            // popup appears over the copy being pointed to.\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n\r\n            // new mapboxgl.Popup()\r\n            //   .setLngLat(coordinates)\r\n            //   .setHTML(\r\n            //     'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\r\n            //   )\r\n            //   .addTo(map);\r\n          });\r\n\r\n          map.on('mouseenter', 'clusters', function () {\r\n            map.getCanvas().style.cursor = 'pointer';\r\n          });\r\n          map.on('mouseleave', 'clusters', function () {\r\n            map.getCanvas().style.cursor = '';\r\n          });\r\n\r\n          // When a click event occurs on a feature in the places layer, open a popup at the\r\n          // location of the feature, with description HTML from its properties.\r\n          map.on('click', 'points', function (e) {\r\n            var coordinates = e.features[0].geometry.coordinates.slice();\r\n            var description = e.features[0].properties.description;\r\n            // Ensure that if the map is zoomed out such that multiple\r\n            // copies of the feature are visible, the popup appears\r\n            // over the copy being pointed to.\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n\r\n            new mapboxgl.Popup()\r\n              .setLngLat(coordinates)\r\n              .setHTML(description)\r\n              .addTo(map);\r\n          });\r\n\r\n          // Change the cursor to a pointer when the mouse is over the places layer.\r\n          map.on('mouseenter', 'places', function () {\r\n            map.getCanvas().style.cursor = 'pointer';\r\n          });\r\n\r\n          // Change it back to a pointer when it leaves.\r\n          map.on('mouseleave', 'places', function () {\r\n            map.getCanvas().style.cursor = '';\r\n          });\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const fetchLiveView = () => {\r\n    setIsLoading(true);\r\n    let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n    fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: token,\r\n      }\r\n    }).then(response => {\r\n      var responseValue = response.json();\r\n      return responseValue;\r\n    }).then(responseData => {\r\n      if (responseData !== undefined && responseData !== null) {\r\n        setarrLiveView(responseData);\r\n      }\r\n      setIsLoading(false);\r\n    }).catch(error => {\r\n      console.log(\"error -------->\" + error);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const doAuth = (selectedLiveView, selectedHdl) => {\r\n    setIsLoading(true);\r\n    setselectedLiveViewHdl(selectedHdl);\r\n    setselectedLiveViewName(selectedLiveView);\r\n    let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n    var myHeaders = new Headers();\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(url, requestOptions).then(response => {\r\n      var responseValue = response.json();\r\n      return responseValue;\r\n    }).then(responseData => {\r\n      if (responseData !== undefined && responseData !== null) {\r\n        fetchSelectedLiveViewData(selectedLiveView);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const formData = (response) => {\r\n    let data = { ...response };\r\n    let gMapData = [];\r\n    data.features.map((item) => {\r\n      //form mapBoxData\r\n      let keys = Object.keys(item.properties);\r\n      let tableData = \"\";\r\n      tableData += \"<p>\";\r\n      keys.map((k) => {\r\n        if (k !== 'undefined' && k !== '(unresolved)') {\r\n          tableData += k;\r\n          tableData += \" : \";\r\n          tableData += item.properties[k];\r\n          tableData += \" <br> \";\r\n        }\r\n      });\r\n      tableData += \"</p>\";\r\n      let linkTitle = item.properties[\"TAG NUMBER\"] ? item.properties[\"TAG NUMBER\"] : item.properties[\"Tag Number\"];\r\n      let tagHdl = item.properties['undefined'] ? item.properties['undefined'] : item.properties['(unresolved)'];\r\n      const link = `<a href='https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${tagHdl}' target='_blank'> ${linkTitle} <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>`;\r\n      let decriptionContent = `<div class='description-wrapper'><div class='header'></div><div class=\"content\">${link}${tableData}</div></div>`\r\n\r\n      //form gMapData\r\n      gMapData.push({\r\n        \"lat\": Number(item.geometry.coordinates[1]),\r\n        \"lng\": Number(item.geometry.coordinates[0]),\r\n        \"ref_or_fix\": \"fix\",\r\n        \"desc\": decriptionContent\r\n      });\r\n\r\n      item.properties.description = decriptionContent;\r\n\r\n      let lat = item.geometry.coordinates[1];\r\n      let lng = item.geometry.coordinates[0];\r\n      item.geometry.coordinates[0] = lng;\r\n      item.geometry.coordinates[1] = lat;\r\n    });\r\n\r\n    setLat(data.features[0].geometry.coordinates[1]);\r\n    setLng(data.features[0].geometry.coordinates[0]);\r\n    setBoxMapData(data);\r\n    setGoogleMapData(gMapData);\r\n    setShowData(true);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const fetchSelectedLiveViewData = (selectedLiveView) => {\r\n    let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=${selectedLiveView}`;\r\n    var myHeaders = new Headers();\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        console.log(\"result response-------\", JSON.stringify(responseData));\r\n        if (responseData != null) {\r\n          formData(responseData);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        console.log('fetchSelectedLiveViewData error --------->', error)\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      let value = JSON.parse(e.target.result);\r\n      formData(value);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showData) {\r\n      if (showMapBox) {\r\n        show_mapBox();\r\n      }\r\n      else {\r\n        //initialize map\r\n        window.InitializeMap(googleMapData);\r\n      }\r\n    }\r\n  }, [showMapBox, showData]);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n      {isLoading ?\r\n        <div className=\"popUpContainer\">\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n        : \"\"\r\n      }\r\n      <div className=\"m-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n          LiveView\r\n        </label>\r\n        <div className=\"inline-block relative w-1/1\">\r\n          <select\r\n            class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n            onChange={(e) => {\r\n              var textVal = e.target.options[e.target.selectedIndex].text;\r\n              doAuth(textVal, e.target.value);\r\n            }}>\r\n            <option value=\"\">Select</option>\r\n            {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n              return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n            }) : \"\"\r\n            }\r\n          </select>\r\n          <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"inline-block relative mx-3\">\r\n          {\r\n            selectedLiveViewHdl !== undefined && selectedLiveViewHdl != \"\" ?\r\n              // https://d-lab-2019.pim360.io/liveview#view=vkbseBkRSF-CfXDXdy6D7Q\r\n              <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/liveview#view=${selectedLiveViewHdl}`}>\r\n                <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n\r\n                  e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                  // e.src = \"hello.png\"\r\n                }} />\r\n              </a>\r\n              : ''\r\n          }\r\n        </div>\r\n        <div className=\"inline-block relative w-1/4 ml-3\">\r\n          <input type=\"file\" onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n      <div id=\"liveView-container\">\r\n        <div className=\"w-full\">\r\n          {showData ?\r\n            <div className=\"relative\">\r\n              <div className=\"m-4\">\r\n                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                  Selected LiveView:\r\n                </label>\r\n                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n              </div>\r\n              <div className=\"m-4\">\r\n                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => setShowMapBox(false)}>Google Map</button>\r\n                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n              </div>\r\n              {showMapBox ?\r\n                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                : \"\"\r\n              }\r\n              {!showMapBox ? <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div> : \"\"}\r\n            </div>\r\n            :\r\n            <div className=\"centerItem\">\r\n              <img draggable={false} width={300} src={search} />\r\n              <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveToMap;","import React, { useEffect, useState } from 'react';\r\nimport { Map } from '@esri/react-arcgis';\r\n\r\nfunction EsriMapPOC() {    \r\n    return (\r\n        <div style={{ width: '100vw', height: '100vh' }}>\r\n            {/* <Map /> */}\r\n            <iframe style={{ width: '100vw', height: '100vh' }} src=\"https://dev-env.space/esri.php?data=\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EsriMapPOC;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport map from \"../assests/map.svg\";\r\nimport Upload from \"../components/Upload\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport EsriMapPOC from \"./ESRIMapPOC\";\r\n// mapboxgl.accessToken =\r\n//   'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\nmapboxgl.accessToken =\r\n    'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\nconst axios = require('axios');\r\n\r\nfunction LiveToShape(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showData, setShowData] = useState(false);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n    const [showMapBox, setShowMapBox] = useState(true);\r\n    const [boxMapData, setBoxMapData] = useState({});\r\n    const [googleMapData, setGoogleMapData] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const types = [\r\n        { value: \"linestring\", name: \"Linestring\" },\r\n        { value: \"polygon\", name: \"Polygon\" },\r\n    ];\r\n    //map states\r\n    const mapContainerRef = useRef(null);\r\n    const [lng, setLng] = useState(5);\r\n    const [lat, setLat] = useState(34);\r\n    const [zoom, setZoom] = useState(5);\r\n    const [randomNum, setRandomNum] = useState(Math.random() * Math.floor(100));\r\n    const [esriData, setEsriData] = useState(null);\r\n    const [ esriCenterData,setEsriCenterData] = useState(\"\");\r\n    let map = null;\r\n    //local storage values\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    // Initialize map when component mounts\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    const show_linear_mapBox = () => {\r\n        console.log('inside show_linear_mapBox -------->', '')\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    map.addSource('route', {\r\n                        'type': 'geojson',\r\n                        'data': {\r\n                            'type': 'Feature',\r\n                            'properties': {},\r\n                            'geometry': {\r\n                                'type': 'LineString',\r\n                                'coordinates': boxMapData\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    map.addLayer({\r\n                        'id': 'route',\r\n                        'type': 'line',\r\n                        'source': 'route',\r\n                        'layout': {\r\n                            'line-join': 'round',\r\n                            'line-cap': 'round'\r\n                        },\r\n                        'paint': {\r\n                            'line-color': '#44337a',\r\n                            'line-width': 8\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const show_polygon_mapBox = () => {\r\n        console.log('inside show_polygon_mapBox -------->', '')\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    map.addSource('maine', {\r\n                        'type': 'geojson',\r\n                        'data': {\r\n                            'type': 'Feature',\r\n                            'geometry': {\r\n                                'type': 'Polygon',\r\n                                'coordinates': [boxMapData]\r\n                            }\r\n                        }\r\n                    });\r\n                    map.addLayer({\r\n                        'id': 'maine',\r\n                        'type': 'fill',\r\n                        'source': 'maine',\r\n                        'layout': {},\r\n                        'paint': {\r\n                            'fill-color': '#44337a',\r\n                            'fill-opacity': 0.8\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const doAuth = (selectedLiveView, selectedHdl) => {\r\n        console.log('inside do auth ------', '')\r\n        setShowMapBox(false);\r\n        setShowData(false)\r\n        setBoxMapData([]);\r\n        setIsLoading(true);\r\n        setselectedLiveViewHdl(selectedHdl);\r\n        setselectedLiveViewName(selectedLiveView);\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                console.log(\"doAuth responseData-------->\");\r\n                fetchSelectedLiveViewData(selectedLiveView, selectedHdl);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const formData = (response) => {\r\n        setShowMapBox(true)\r\n        let data = { ...response };\r\n        let gMapData = [];\r\n        let mapBoxData = [];\r\n        let esriMapBoxData = [];\r\n        data.features.map((item, index) => {\r\n            let obj = {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                  \"mag\": 500\r\n                },\r\n                \"geometry\": {\r\n                  \"type\": \"Point\",\r\n                  \"coordinates\": [parseFloat(item.properties[\"Geometry.Start.Longitude\"]), parseFloat(item.properties[\"Geometry.Start.Latitude\"])]\r\n                }\r\n              }\r\n            let keys = Object.keys(item.properties);\r\n            keys.map((k)=>{\r\n                obj.properties[k] = item.properties[k];\r\n            });\r\n            if (index == 0) {\r\n                mapBoxData.push([item.properties[\"Geometry.Start.Longitude\"], item.properties[\"Geometry.Start.Latitude\"]]);\r\n                esriMapBoxData.push(obj);\r\n            }\r\n            //form mapboxdata\r\n            mapBoxData.push([item.properties[\"Geometry.End.Longitude\"], item.properties[\"Geometry.End.Latitude\"]]);\r\n            // esriMapBoxData.push([parseFloat(item.properties[\"Geometry.End.Longitude\"]), parseFloat(item.properties[\"Geometry.End.Latitude\"])]);\r\n            esriMapBoxData.push(obj);\r\n\r\n            let lat = item.geometry.coordinates[1];\r\n            let lng = item.geometry.coordinates[0];\r\n            item.geometry.coordinates[0] = lng;\r\n            item.geometry.coordinates[1] = lat;\r\n        });\r\n        setLat(data.features[0].properties[\"Geometry.Start.Latitude\"]);\r\n        setLng(data.features[0].properties[\"Geometry.Start.Longitude\"]);\r\n        setBoxMapData(mapBoxData);\r\n        setShowData(true);\r\n        setIsLoading(false);\r\n        // var arr_20 = esriMapBoxData.slice(0, 20);\r\n        //converting to base64\r\n        // setEsriData(window.btoa(JSON.stringify(arr_20)));\r\n        setEsriData(window.btoa(JSON.stringify(esriMapBoxData)));\r\n        setEsriCenterData(window.btoa(JSON.stringify(esriMapBoxData[0])));\r\n    }\r\n\r\n    const updateEsriMapData = () => {\r\n        setIsLoading(true)\r\n        let data = {\r\n            \"data\": esriData\r\n        };\r\n        let url = `https://dev-env.space/post_req.php`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                setIsLoading(false)\r\n                setShowMapBox(false);\r\n            })\r\n            .catch((error) => {\r\n                // setShowMapBox(false);\r\n                console.error('updateEsriMapData error: ------->', error);\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (selectedLiveView, selectedHdl) => {\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=${selectedLiveView}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData != null) {\r\n                    formData(responseData);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsLoading(false);\r\n                console.log('fetchSelectedLiveViewData error --------->', error)\r\n                alert(error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showData) {\r\n            if (showMapBox) {\r\n                if (selectedType == \"linestring\") {\r\n                    show_linear_mapBox()\r\n                }\r\n                else if (selectedType == \"polygon\") {\r\n                    show_polygon_mapBox()\r\n                }\r\n            }\r\n            else {\r\n                //initialize map\r\n                // window.InitializeMap(googleMapData);\r\n            }\r\n        }\r\n    }, [showMapBox, showData, boxMapData]);\r\n\r\n    function bufferToBase64(buf) {\r\n        var binstr = Array.prototype.map.call(buf, function (ch) {\r\n            return String.fromCharCode(ch);\r\n        }).join('');\r\n        return btoa(binstr);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <div className=\"m-4 inline-block\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    Choose type\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            setSelectedType(e.target.value);\r\n                            if (selectedLiveViewName != null && selectedLiveViewName != \"\") {\r\n                                console.log('inside 1 ------->', '')\r\n                                // map = null;\r\n                                // if (e.target.value == \"linestring\") {\r\n                                //     console.log('inside 1 linestring ------->', '')\r\n                                //     show_linear_mapBox()\r\n                                // }\r\n                                // else if (e.target.value == \"polygon\") {\r\n                                //     console.log('inside 1 polygon ------->', '')\r\n                                //     show_polygon_mapBox()\r\n                                // }\r\n                                map = null;\r\n                                doAuth(selectedLiveViewName, selectedLiveViewHdl)\r\n                            }\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {types.map((type) => {\r\n                            return <option value={type.value}>{type.name}</option>\r\n                        })}\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-4 inline-block\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    LiveView\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            var textVal = e.target.options[e.target.selectedIndex].text;\r\n                            setShowMapBox(false)\r\n                            doAuth(textVal, e.target.value);\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                            return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n                        }) : \"\"\r\n                        }\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"inline-block relative mx-3\">\r\n                    {\r\n                        selectedLiveViewHdl !== undefined && selectedLiveViewHdl != \"\" ?\r\n                            // https://d-lab-2019.pim360.io/liveview#view=vkbseBkRSF-CfXDXdy6D7Q\r\n                            <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/liveview#view=${selectedLiveViewHdl}`}>\r\n                                <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n\r\n                                    e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                                    // e.src = \"hello.png\"\r\n                                }} />\r\n                            </a>\r\n                            : ''\r\n                    }\r\n                </div>\r\n                {/* <div className=\"inline-block relative w-1/4 ml-3\">\r\n          <input type=\"file\" onChange={handleChange} />\r\n        </div> */}\r\n            </div>\r\n            <div id=\"liveView-container\">\r\n                <div className=\"w-full\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n                            </div>\r\n                            <div className=\"m-4\">\r\n                                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n                                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => updateEsriMapData()}>ESRI</button>\r\n                            </div>\r\n                            {showMapBox ?\r\n                                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                                : \"\"\r\n                            }\r\n                            {/* {!showMapBox ? <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div> : \"\"} */}\r\n                            {!showMapBox ? <EsriMapPOC  data={esriData != null ? esriData : \"\"} center={esriCenterData}/> : \"\"}\r\n\r\n                            {/* {!showMapBox && <div>\r\n                {googleMapData.length > 0 ?\r\n                    <div className='m-4 w-full h-full'>\r\n                          Google map\r\n                    </div> \r\n                    : \r\n                    <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n              </div>\r\n              } */}\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveToShape;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport search from \"../assests/search.svg\";\r\nimport noDataAttribute from \"../assests/noDataAttribute.svg\";\r\nimport Api from '../api/api';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport EsriMapPOC from \"./ESRIMapPOC\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nmapboxgl.accessToken =\r\n    'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\nconst axios = require('axios');\r\nwindow.mapData = [];\r\nwindow.esriJSONData = [];\r\nfunction LiveToShape_v2(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showData, setShowData] = useState(false);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n    const [showMapBox, setShowMapBox] = useState(true);\r\n    const [mapData, setMapData] = useState([]);\r\n    //map states\r\n    const mapContainerRef = useRef(null);\r\n    const [zoom, setZoom] = useState(5);\r\n    const [esriJSONData, setEsriJSONData] = useState([]);\r\n    const [arrTagNumber, setArrTagNumber] = useState([]);\r\n    const [attributeData, setAttributeData] = useState(null);\r\n    const [notFound, setNotFound] = useState(false);\r\n    const [arrSelectedTagNumber, SetArrSelectedTagNumber] = useState([]);\r\n    const [arrSelectedLiveView_2, SetArrSelectedLiveView_2] = useState([]);\r\n    const [lat, setLat] = useState(0);\r\n    const [lng, setLng] = useState(0);\r\n    const [isLiveView2, setIsLiveView2] = useState(false);\r\n    const [isDualCall, setisDualCall] = useState(false);\r\n    const [isFirstDataFormed, setIsFirstDataFormed] = useState(false);\r\n    const [isSecondDataFormed, setIsSecondDataFormed] = useState(false);\r\n    let map = null;\r\n    //local storage values\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let arrData = [];\r\n    let arrTagResponseData = [];\r\n    let multiSelectStyle = {\r\n        chips: {\r\n            background: \"#44337a\",\r\n            color: \"white\"\r\n        },\r\n        searchBox: {\r\n            border: \"none\",\r\n            \"border-bottom\": \"1px solid blue\",\r\n            \"border-radius\": \"0px\",\r\n\r\n        },\r\n        multiselectContainer: {\r\n            color: \"#44337a\",\r\n        }\r\n    }\r\n    // Initialize map when component mounts\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    const show_data = () => {\r\n        console.log(\"inside show_data------------>\")\r\n        let centerPoint = [0, 0];\r\n        if (isLiveView2) {\r\n            if (mapData.length == 0) {\r\n                centerPoint = [lng, lat];\r\n            }\r\n            else {\r\n                if (mapData[0].geometry.coordinates[0].length <= 3) {\r\n                    centerPoint = mapData[0].geometry.coordinates[0];\r\n                }\r\n                else {\r\n                    centerPoint = mapData[0].geometry.coordinates[0][0];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (mapData[0].geometry.coordinates[0].length <= 3) {\r\n                centerPoint = mapData[0].geometry.coordinates[0];\r\n            }\r\n            else {\r\n                centerPoint = mapData[0].geometry.coordinates[0][0];\r\n            }\r\n        }\r\n        var geojson = {\r\n            'type': 'FeatureCollection',\r\n            'features': mapData\r\n        };\r\n        map = null;\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: centerPoint,\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    map.addSource('route', {\r\n                        'type': 'geojson',\r\n                        'data': geojson\r\n                    });\r\n                    if (isLiveView2) {\r\n                        // Add a symbol layer\r\n                        map.addLayer({\r\n                            'id': 'points',\r\n                            'type': 'symbol',\r\n                            'source': 'route',\r\n                            'layout': {\r\n                                'icon-image': 'custom-marker',\r\n                                // get the title name from the source's \"title\" property\r\n                                'text-field': ['get', 'title'],\r\n                                'text-font': [\r\n                                    'Open Sans Semibold',\r\n                                    'Arial Unicode MS Bold'\r\n                                ],\r\n                                'text-offset': [0, 1.25],\r\n                                'text-anchor': 'top'\r\n                            }\r\n                        });\r\n\r\n                        map.addLayer({\r\n                            id: 'clusters',\r\n                            type: 'circle',\r\n                            source: 'route',\r\n                            filter: ['has', 'point_count'],\r\n                            paint: {\r\n                                // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n                                // with three steps to implement three types of circles:\r\n                                //   * Blue, 20px circles when point count is less than 100\r\n                                //   * Yellow, 30px circles when point count is between 100 and 750\r\n                                //   * Pink, 40px circles when point count is greater than or equal to 750\r\n                                'circle-color': [\r\n                                    'step',\r\n                                    ['get', 'point_count'],\r\n                                    '#51bbd6',\r\n                                    100,\r\n                                    '#f1f075',\r\n                                    750,\r\n                                    '#f28cb1'\r\n                                ],\r\n                                'circle-radius': [\r\n                                    'step',\r\n                                    ['get', 'point_count'],\r\n                                    20,\r\n                                    100,\r\n                                    30,\r\n                                    750,\r\n                                    40\r\n                                ]\r\n                            }\r\n                        });\r\n\r\n                        // map.addLayer({\r\n                        //     id: 'cluster-count',\r\n                        //     type: 'symbol',\r\n                        //     source: 'route',\r\n                        //     filter: ['has', 'point_count'],\r\n                        //     layout: {\r\n                        //         'text-field': '{point_count_abbreviated}',\r\n                        //         'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n                        //         'text-size': 12\r\n                        //     }\r\n                        // });\r\n\r\n                        // map.addLayer({\r\n                        //     id: 'unclustered-point',\r\n                        //     type: 'circle',\r\n                        //     source: 'route',\r\n                        //     filter: ['!', ['has', 'point_count']],\r\n                        //     paint: {\r\n                        //         'circle-color': '#11b4da',\r\n                        //         'circle-radius': 4,\r\n                        //         'circle-stroke-width': 1,\r\n                        //         'circle-stroke-color': '#fff'\r\n                        //     }\r\n                        // });\r\n                        map.on('click', 'points', function (e) {\r\n                            var coordinates = e.features[0].geometry.coordinates.slice();\r\n                            var description = e.features[0].properties.description;\r\n                            let lngLat_coordinates = coordinates;\r\n                            if (typeof coordinates[0] != \"object\") {\r\n                                lngLat_coordinates = coordinates;\r\n                            }\r\n                            else {\r\n                                if (typeof coordinates[0][0] != \"object\") {\r\n                                    lngLat_coordinates = coordinates[0];\r\n                                }\r\n                            }\r\n                            // Ensure that if the map is zoomed out such that\r\n                            // multiple copies of the feature are visible, the\r\n                            // popup appears over the copy being pointed to.\r\n                            while (Math.abs(e.lngLat.lng - lngLat_coordinates[0]) > 180) {\r\n                                lngLat_coordinates[0] += e.lngLat.lng > lngLat_coordinates[0] ? 360 : -360;\r\n                            }\r\n                            new mapboxgl.Popup()\r\n                                .setLngLat(lngLat_coordinates)\r\n                                .setHTML(description)\r\n                                .addTo(map);\r\n                        })\r\n\r\n                        // // inspect a cluster on click\r\n                        // map.on('click', 'clusters', function (e) {\r\n                        //     alert(\"clusters clicked ------------>\")\r\n                        //     var features = map.queryRenderedFeatures(e.point, {\r\n                        //         layers: ['clusters']\r\n                        //     });\r\n                        //     var clusterId = features[0].properties.cluster_id;\r\n                        //     map.getSource('points').getClusterExpansionZoom(\r\n                        //         clusterId,\r\n                        //         function (err, zoom) {\r\n                        //             if (err) return;\r\n\r\n                        //             map.easeTo({\r\n                        //                 center: features[0].geometry.coordinates,\r\n                        //                 zoom: zoom\r\n                        //             });\r\n                        //         }\r\n                        //     );\r\n                        // });\r\n\r\n                        // When a click event occurs on a feature in\r\n                        // the unclustered-point layer, open a popup at\r\n                        // the location of the feature, with\r\n                        // description HTML from its properties.\r\n                        // map.on('click', 'unclustered-point', function (e, index) {\r\n                        //     alert(\"click unclustered-point ----------------->\")\r\n                        //     var coordinates = e.features[0].geometry.coordinates.slice();\r\n                        //     var description = e.features[0].properties.description;\r\n                        //     let lngLat_coordinates = coordinates;\r\n                        //     if (typeof coordinates[0] != \"object\") {\r\n                        //         lngLat_coordinates = coordinates;\r\n                        //     }\r\n                        //     else {\r\n                        //         if (typeof coordinates[0][0] != \"object\") {\r\n                        //             lngLat_coordinates = coordinates[0];\r\n                        //         }\r\n                        //     }\r\n                        //     // Ensure that if the map is zoomed out such that\r\n                        //     // multiple copies of the feature are visible, the\r\n                        //     // popup appears over the copy being pointed to.\r\n                        //     while (Math.abs(e.lngLat.lng - lngLat_coordinates[0]) > 180) {\r\n                        //         lngLat_coordinates[0] += e.lngLat.lng > lngLat_coordinates[0] ? 360 : -360;\r\n                        //     }\r\n                        //     new mapboxgl.Popup()\r\n                        //         .setLngLat(lngLat_coordinates)\r\n                        //         .setHTML(description)\r\n                        //         .addTo(map);\r\n                        // });\r\n\r\n                        map.on('mouseenter', 'points', function () {\r\n                            map.getCanvas().style.cursor = 'pointer';\r\n                        });\r\n                        map.on('mouseleave', 'points', function () {\r\n                            map.getCanvas().style.cursor = '';\r\n                        });\r\n                    };\r\n                    //linestring line layer\r\n                    map.addLayer({\r\n                        'id': 'route',\r\n                        'type': 'line',\r\n                        'source': 'route',\r\n                        'layout': {\r\n                            'line-join': 'round',\r\n                            'line-cap': 'round'\r\n                        },\r\n                        'paint': {\r\n                            'line-color': '#44337a',\r\n                            'line-width': 2\r\n                        },\r\n                        'filter': ['==', '$type', 'LineString']\r\n                    });\r\n                    //polygon fill layer\r\n                    map.addLayer({\r\n                        'id': 'maine',\r\n                        'type': 'fill',\r\n                        'source': 'route',\r\n                        'layout': {},\r\n                        'paint': {\r\n                            'fill-color': '#44337a',\r\n                            'fill-opacity': 0.8\r\n                        },\r\n                        'filter': ['==', '$type', 'Polygon']\r\n                    });\r\n\r\n                    map.on('mouseenter', 'route', function () {\r\n                        map.getCanvas().style.cursor = 'pointer';\r\n                    });\r\n                    map.on('mouseleave', 'route', function () {\r\n                        map.getCanvas().style.cursor = '';\r\n                    });\r\n\r\n                    // When a click event occurs on a feature in the places layer, open a popup at the\r\n                    // location of the feature, with description HTML from its properties.\r\n                    map.on('click', 'route', function (e) {\r\n                        var coordinates = e.features[0].geometry.coordinates.slice();\r\n                        var description = e.features[0].properties.description;\r\n                        // Ensure that if the map is zoomed out such that multiple\r\n                        // copies of the feature are visible, the popup appears\r\n                        // over the copy being pointed to.\r\n                        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                        }\r\n                        new mapboxgl.Popup()\r\n                            .setLngLat(coordinates[0])\r\n                            .setHTML(description)\r\n                            .addTo(map);\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const doAuth = (selectedLiveView, selectedHdl, isLiveViewTO = false) => {\r\n        setShowData(false);\r\n        setShowMapBox(false);\r\n        setIsLoading(true);\r\n        setselectedLiveViewHdl(selectedHdl);\r\n        setselectedLiveViewName(selectedLiveView);\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                if (isLiveViewTO == true) {\r\n                    fetchSelectedLiveViewData_liveview2();\r\n                }\r\n                else {\r\n                    fetchSelectedLiveViewData(selectedLiveView, selectedHdl);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData_liveview2 = () => {\r\n        setIsLoading(true);\r\n        let counter = 0;\r\n        let tempData = [];\r\n        arrSelectedLiveView_2.map((liveView_2)=>{\r\n            let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=` + liveView_2.Name;\r\n            var myHeaders = new Headers();\r\n            var requestOptions = {\r\n                method: 'GET',\r\n                headers: myHeaders,\r\n                redirect: 'follow'\r\n            };\r\n            fetch(url, requestOptions)\r\n                .then(response => response.json())\r\n                .then(responseData => {\r\n                    if (responseData != null) {\r\n                        tempData.push(responseData);\r\n                        counter  += 1\r\n                        if(counter == arrSelectedLiveView_2.length){\r\n                            formData_liveView2(tempData);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    counter  += 1\r\n                    if(counter == arrSelectedLiveView_2.length){\r\n                        setIsLoading(false);\r\n                        alert(error);\r\n                    }\r\n                    console.log('fetchSelectedLiveViewData error --------->', error)\r\n                });\r\n        });\r\n    };\r\n\r\n    const updateEsriMapData = () => {\r\n        console.log(\"inside updateesrimap data esriJSONData----------->\", esriJSONData);\r\n        let base64Data = window.btoa(JSON.stringify(esriJSONData));\r\n        // setEsriData(window.btoa(JSON.stringify(esriJSONData)));\r\n        setIsLoading(true)\r\n        let data = {\r\n            \"data\": base64Data\r\n        };\r\n        let url = `https://dev-env.space/post_req.php`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                setIsLoading(false);\r\n                setShowMapBox(false);\r\n            })\r\n            .catch((error) => {\r\n                // setShowMapBox(false);\r\n                console.error('updateEsriMapData error: ------->', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (selectedLiveView, selectedHdl) => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews/${selectedHdl}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(response => {\r\n            if (response !== undefined && response !== null) {\r\n                getResultUrl(response);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchSelectedLiveViewData error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const getFinalResult = (queryResult, pageSize = 200, page = 0) => {\r\n        let url = `${baseUrl}${queryResult}?limit=${pageSize}&skip=${page}`\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        return Api.getRequest(url).then((response) => {\r\n            arrData.push(...response.data);\r\n            if (response.hasmore) {\r\n                return getFinalResult(queryResult, pageSize, (arrData.length / pageSize) * 200)\r\n            } else {\r\n                setIsLoading(false);\r\n                return arrData;\r\n            }\r\n        });\r\n    }\r\n\r\n    const getResultUrl = (response) => {\r\n        let createQueryBody = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": response.Data.conditions,\r\n            \"fields\": response.Data.fields\r\n        };\r\n        let url = `${baseUrl}/queries`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(createQueryBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                return getFinalResult(data.resulturl).then((finalResult) => {\r\n                    setIsLoading(false);\r\n                    let arrFirstObjKeys = Object.keys(finalResult[0]).filter(e => typeof finalResult[0][e] == 'object')\r\n                    let arrModifiedData = [];\r\n                    let arrTagNumberData = [];\r\n                    finalResult.map((item) => {\r\n                        let obj = {};\r\n                        arrFirstObjKeys.map((key) => {\r\n                            if (item[key].name == \"Tag Number\" || item[key].name == \"TAG NUMBER\") {\r\n                                arrTagNumberData.push(item[key].value);\r\n                            }\r\n                            obj[item[key].name] = item[key].value;\r\n                        });\r\n                        arrModifiedData.push(obj);\r\n                    });\r\n                    if (arrModifiedData.length > 0) {\r\n                        if (arrModifiedData[0].hasOwnProperty(\"Tag Number\") || arrModifiedData[0].hasOwnProperty(\"TAG NUMBER\")) {\r\n                            if (arrTagNumberData.length > 0) {\r\n                                setArrTagNumber(arrTagNumberData);\r\n                            }\r\n                        }\r\n                        else {\r\n                            //finish process and show no data found\r\n                            setNotFound(true);\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showMapBox) {\r\n            if (Object.keys(mapData).length > 0) {\r\n                if(isDualCall){\r\n                    if(isFirstDataFormed == true && isSecondDataFormed == true){\r\n                        setIsLoading(false);\r\n                        console.log(\" inside call isDualCall showdata  ------------>\")\r\n                        show_data();\r\n                    }\r\n                }else{\r\n                    console.log(\"inside isDualCall else------------>\")\r\n                    show_data()\r\n                }\r\n            }\r\n        }\r\n    }, [mapData, showMapBox]);\r\n\r\n    const onSelect = (selectedList, selectedItem) => {\r\n        setShowData(false);\r\n        SetArrSelectedTagNumber(selectedList)\r\n    }\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        setShowData(false);\r\n        SetArrSelectedTagNumber(selectedList)\r\n    }\r\n\r\n    \r\n    const onSelect_liveView2 = (selectedList, selectedItem) => {\r\n        setIsLiveView2(true);\r\n        setShowData(false);\r\n        SetArrSelectedLiveView_2(selectedList);\r\n    }\r\n\r\n    const onRemove_liveView2 = (selectedList, removedItem) => {\r\n        setIsLiveView2(true);\r\n        setShowData(false);\r\n        SetArrSelectedLiveView_2(selectedList);\r\n    }\r\n\r\n    const onSubmitTag = () => {\r\n        let isDualCall = false;\r\n        setisDualCall(false);\r\n        setIsFirstDataFormed(false);\r\n        setIsSecondDataFormed(false);\r\n        if(arrSelectedTagNumber.length > 0 && arrSelectedLiveView_2.length > 0){\r\n            isDualCall = true;\r\n            setMapData([]);\r\n            setEsriJSONData([]);\r\n            window.esriJSONData = [];\r\n            window.mapData = [];\r\n            setisDualCall(true);\r\n        }\r\n        setIsLoading(true);\r\n        if(isDualCall){\r\n            console.log(\"onSubmitTag if ----------------->\");\r\n            let counter = 0;\r\n            arrSelectedTagNumber.map((selectedTag) => {\r\n                let url = `${baseUrl}/objects/TAGGED_ITEM/id/${selectedTag}`;\r\n                fetch(url, {\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: token,\r\n                    }\r\n                }).then(response => {\r\n                    var responseValue = response.json();\r\n                    return responseValue;\r\n                }).then(responseData => {\r\n                    counter += 1;\r\n                    if (responseData !== null && responseData !== undefined && responseData.attrs !== null) {\r\n                        arrTagResponseData.push(responseData.attrs);\r\n                    }\r\n                    if (counter === arrSelectedTagNumber.length) {\r\n                        formData(true);\r\n                        return\r\n                    }\r\n                    // setData(responseData);\r\n                }).catch(error => {\r\n                    counter += 1;\r\n                    if (counter === arrSelectedTagNumber.length) {\r\n                        formData();\r\n                        setIsLoading(false);\r\n                        return\r\n                    }\r\n                    console.log(\"getAttributes error -------->\" + error);\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            console.log(\"onSubmitTag else ----------------->\")\r\n            if(isLiveView2){\r\n                doAuth(\"\", \"\", true);\r\n            }\r\n            else{\r\n                let counter = 0;\r\n                arrSelectedTagNumber.map((selectedTag) => {\r\n                    let url = `${baseUrl}/objects/TAGGED_ITEM/id/${selectedTag}`;\r\n                    fetch(url, {\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            Authorization: token,\r\n                        }\r\n                    }).then(response => {\r\n                        var responseValue = response.json();\r\n                        return responseValue;\r\n                    }).then(responseData => {\r\n                        counter += 1;\r\n                        if (responseData !== null && responseData !== undefined && responseData.attrs !== null) {\r\n                            arrTagResponseData.push(responseData.attrs);\r\n                        }\r\n                        if (counter === arrSelectedTagNumber.length) {\r\n                            formData();\r\n                            return\r\n                        }\r\n                        // setData(responseData);\r\n                    }).catch(error => {\r\n                        counter += 1;\r\n                        if (counter === arrSelectedTagNumber.length) {\r\n                            formData();\r\n                            setIsLoading(false);\r\n                            return\r\n                        }\r\n                        console.log(\"getAttributes error -------->\" + error);\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const formData = (doSecondCall = false) => {\r\n        setShowData(true);\r\n        setShowMapBox(true);\r\n        let tempMapData = [...mapData];\r\n        let arrEsriMapObj = [...esriJSONData];\r\n        if(doSecondCall){\r\n            tempMapData = [];\r\n            arrEsriMapObj = [];\r\n        }\r\n        let arrObj = [];\r\n        let arrMapObj = [];\r\n        arrTagResponseData.length > 0 && arrTagResponseData.map((response) => {\r\n            let arrkeys = Object.keys(response);\r\n            let obj = {};\r\n            let mapObj = {}\r\n            let tableData = \"\";\r\n            let hasRoute = false;\r\n            arrkeys.map((key) => {\r\n                if (response[key].name == \"Route\") {\r\n                    hasRoute = true;\r\n                    mapObj = JSON.parse(response[key].value);\r\n                }\r\n                else {\r\n                    obj[response[key].name] = response[key].value;\r\n                    tableData += \"<p>\";\r\n                    tableData += response[key].name;\r\n                    tableData += \" : \";\r\n                    tableData += response[key].value;\r\n                    tableData += \" <br> \";\r\n                    tableData += \"</p>\";\r\n                }\r\n                return;\r\n            });\r\n            if (hasRoute) {\r\n                mapObj.properties.description = tableData;\r\n                arrObj.push(obj);\r\n                arrMapObj.push(mapObj);\r\n                let key =  \"tagno\" + arrMapObj.length;\r\n                let esriObj = {};\r\n                esriObj[key] = mapObj;\r\n                arrEsriMapObj.push(mapObj);\r\n            }\r\n            else {\r\n                setNotFound(true);\r\n            }\r\n        });\r\n        if(!isDualCall){\r\n            setIsLoading(false);\r\n        }\r\n        window.esriJSONData.push(...arrEsriMapObj);\r\n        setEsriJSONData(arrEsriMapObj);\r\n        setIsFirstDataFormed(true);\r\n        setAttributeData(arrObj);\r\n        tempMapData.push(...arrMapObj);\r\n        window.mapData.push(...tempMapData);\r\n        setMapData(tempMapData);\r\n        if(doSecondCall){\r\n            console.log(\"inside calling second api ---------->\");\r\n            doAuth(\"\", \"\", true);\r\n        }\r\n    }\r\n\r\n    const formData_liveView2 = (response) => {\r\n        // let tempMapData = [];\r\n        // let arrEsriMapObj = [];\r\n        // console.log(\"dualcall ------->\", isDualCall)\r\n        // if(isDualCall){\r\n        //     tempMapData = [...window.mapData];\r\n        //     arrEsriMapObj = [...window.esriJSONData];\r\n        // }else{\r\n        //     tempMapData = [...mapData];\r\n        //     arrEsriMapObj = [...esriJSONData];\r\n        // }\r\n        let tempMapData = [...window.mapData];\r\n        let arrEsriMapObj = [...window.esriJSONData];\r\n        response.map((itemData, index)=>{\r\n            let data = { ...itemData };\r\n            let gMapData = [];\r\n            data.features.map((item, index) => {\r\n                //form mapBoxData\r\n                let keys = Object.keys(item.properties);\r\n                let tableData = \"\";\r\n                tableData += \"<p>\";\r\n                keys.map((k) => {\r\n                    tableData += k;\r\n                    tableData += \" : \";\r\n                    tableData += item.properties[k];\r\n                    tableData += \" <br> \";\r\n                });\r\n                tableData += \"</p>\";\r\n    \r\n                //form gMapData\r\n                gMapData.push({\r\n                    \"lat\": Number(item.geometry.coordinates[1]),\r\n                    \"lng\": Number(item.geometry.coordinates[0]),\r\n                    \"ref_or_fix\": \"fix\",\r\n                    \"desc\": tableData\r\n                });\r\n                item.properties.description = tableData;\r\n                let lat = item.geometry.coordinates[1];\r\n                let lng = item.geometry.coordinates[0];\r\n                item.geometry.coordinates[0] = lng;\r\n                item.geometry.coordinates[1] = lat;\r\n            });\r\n            \r\n            setLat(data.features[0].geometry.coordinates[1]);\r\n            setLng(data.features[0].geometry.coordinates[0]);\r\n            let tempKey = \"liveview2\";\r\n            let esriMapObj = {};\r\n            esriMapObj[tempKey] = data;\r\n            if(arrEsriMapObj.length > 0){\r\n                if(Object.keys(arrEsriMapObj[arrEsriMapObj.length - 1]).includes(\"liveview2\")){\r\n                    let temp_arrEsriMapObj = [...data.features];\r\n                    arrEsriMapObj[arrEsriMapObj.length - 1].liveview2.features.push(...temp_arrEsriMapObj)\r\n                    console.log(\"includes ---------->\")\r\n                }\r\n                else{\r\n                    arrEsriMapObj.push(esriMapObj);\r\n                    console.log(\"not includes ---------->\");\r\n                }\r\n            }\r\n            else{\r\n                arrEsriMapObj.push(esriMapObj);\r\n            }\r\n            tempMapData.push(...data.features);\r\n        });\r\n        if(!isDualCall){\r\n            setIsLoading(false);\r\n        }\r\n        setIsSecondDataFormed(true);\r\n        setMapData(tempMapData);\r\n        window.esriJSONData.push(...arrEsriMapObj);\r\n        window.mapData.push(...tempMapData);\r\n        setEsriJSONData(arrEsriMapObj);\r\n        setShowData(true);\r\n        setShowMapBox(true);\r\n    }\r\n\r\n    return (\r\n        <div id=\"v2\">\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <div className=\"m-4 inline-block relative  w-1/1\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    LiveView\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            var textVal = e.target.options[e.target.selectedIndex].text;\r\n                            setIsLiveView2(false)\r\n                            setShowMapBox(false)\r\n                            doAuth(textVal, e.target.value);\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                            return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n                        }) : \"\"\r\n                        }\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                arrTagNumber.length > 0 &&\r\n                <div className=\"m-4 inline-block relative  w-1/1\">\r\n                    <Multiselect\r\n                        displayValue=\"key\"\r\n                        showCheckbox={true}\r\n                        style={multiSelectStyle}\r\n                        options={arrTagNumber}\r\n                        isObject={false}\r\n                        onSelect={onSelect}\r\n                        onRemove={onRemove}\r\n                    />\r\n                </div>\r\n            }\r\n            <div className=\"inline-block relative mx-3\">\r\n                {\r\n                    selectedLiveViewHdl !== undefined && selectedLiveViewHdl != \"\" ?\r\n                        <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/liveview#view=${selectedLiveViewHdl}`}>\r\n                            <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n\r\n                                e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                            }} />\r\n                        </a>\r\n                        : ''\r\n                }\r\n            </div>\r\n            <div className=\"m-4 relative  w-1/1\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    LiveView2\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    {/* <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            var textVal = e.target.options[e.target.selectedIndex].text;\r\n                            setIsLiveView2(true);\r\n                            setShowMapBox(false);\r\n                            doAuth(textVal, e.target.value, true);\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                            return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n                        }) : \"\"\r\n                        }\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div> */}\r\n                     <Multiselect\r\n                        displayValue=\"Name\"\r\n                        showCheckbox={true}\r\n                        style={multiSelectStyle}\r\n                        options={arrLiveView}\r\n                        onSelect={onSelect_liveView2}\r\n                        onRemove={onRemove_liveView2}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"m-4 relative  w-1/1\">\r\n                {arrSelectedTagNumber.length > 0 || arrSelectedLiveView_2.length > 0 ?\r\n                    < button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                        onClick={() => { onSubmitTag() }}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                    : \"\"\r\n                }\r\n            </div>\r\n            <div id=\"liveView-container\">\r\n                <div className=\"w-full\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n                            </div>\r\n                            <div className=\"m-4\">\r\n                                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n                                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => updateEsriMapData()} >ESRI</button>\r\n                            </div>\r\n                            {showMapBox ?\r\n                                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                                : \"\"\r\n                            }\r\n                            {!showMapBox ? <EsriMapPOC /> : \"\"}\r\n                        </div>\r\n                        : notFound\r\n                            ?\r\n                            <div className=\"centerItem mt-5 pt-5 pri\">\r\n                                <img draggable={false} width={300} src={noDataAttribute} />\r\n                                <p className=\"text-center mt-3 text-purple-800\">No Route found</p>\r\n                            </div>\r\n                            :\r\n                            <div className=\"centerItem mt-5 pt-5 pri\">\r\n                                <img draggable={false} width={300} src={search} />\r\n                                <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default LiveToShape_v2;","import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\nconst axios = require('axios');\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\n\r\nfunction LiveViewWithTable(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isError, setIsError] = useState();\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n    const [showData, setShowData] = useState(false);\r\n    const [arrTagNumber, setArrTagNumber] = useState([]);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [showModal, setshowModal] = useState(false);\r\n    const [arrFormedTableData, setArrFormedTableData] = useState([]);\r\n    const [editedArrFormedTabledData, setEditedArrFormedTabledData] = useState([]);\r\n\r\n    let tempBody = {};\r\n    let tempArrFormedTableData = [];\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let arrData = [];\r\n\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (arrTagNumber.length > 0) {\r\n            // arrTagNumber.map((tagItem, index) => {\r\n            //     getAttributes(tagItem, arrTagNumber.length === (index + 1));\r\n            // });\r\n            getAttributes();\r\n        }\r\n    }, [arrTagNumber]);\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (e, selectedLiveView, selectedHdl) => {\r\n        setselectedLiveViewHdl(selectedLiveView);\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews/${selectedHdl}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(response => {\r\n            if (response !== undefined && response !== null) {\r\n                getResultUrl(response);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchSelectedLiveViewData error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const firstApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                console.log('firstApi res ----->', JSON.stringify(data));\r\n                secondApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error('firstApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const secondApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=import`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error('secondApi response ------------>', data);\r\n                thirdApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error(' secondApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const thirdApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=download-new`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                console.log('thirdApi res ----->', JSON.stringify(data));\r\n                fourthApi(data.response);\r\n            })\r\n            .catch((error) => {\r\n                console.error('thirdApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const fourthApi = (hdl) => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=update&file_hdl=${hdl}`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error(' fourthApi response--------->:', data);\r\n                setIsLoading(false);\r\n                alert('Successfully updated.')\r\n            })\r\n            .catch((error) => {\r\n                console.error(' fourthApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n\r\n    const getResultUrl = (response) => {\r\n        let createQueryBody = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": response.Data.conditions,\r\n            \"fields\": response.Data.fields\r\n        };\r\n        let url = `${baseUrl}/queries`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(createQueryBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                return getFinalResult(data.resulturl).then((finalResult) => {\r\n                    // console.log('finalResult ------->', JSON.stringify(finalResult));\r\n                    setIsLoading(false);\r\n                    let arrFirstObjKeys = Object.keys(finalResult[0]).filter(e => typeof finalResult[0][e] == 'object')\r\n                    let arrModifiedData = [];\r\n                    let arrTagNumberData = [];\r\n                    finalResult.map((item) => {\r\n                        let obj = {};\r\n                        arrFirstObjKeys.map((key) => {\r\n                            if (item[key].name == \"Tag Number\" || item[key].name == \"TAG NUMBER\") {\r\n                                arrTagNumberData.push(item[key].value);\r\n                            }\r\n                            obj[item[key].name] = item[key].value;\r\n                        });\r\n                        arrModifiedData.push(obj);\r\n                    });\r\n                    if (arrModifiedData.length > 0) {\r\n                        if (arrModifiedData[0].hasOwnProperty(\"Tag Number\") || arrModifiedData[0].hasOwnProperty(\"TAG NUMBER\")) {\r\n                            if (arrTagNumberData.length > 0) {\r\n                                setArrTagNumber(arrTagNumberData);\r\n                            }\r\n                            setShowData(true);\r\n                        }\r\n                        else {\r\n                            //finish process and show no data found\r\n                            setShowData(true)\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const getFinalResult = (queryResult, pageSize = 200, page = 0) => {\r\n        let url = `${baseUrl}${queryResult}?limit=${pageSize}&skip=${page}`;\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        return Api.getRequest(url).then((response) => {\r\n            arrData.push(...response.data);\r\n            if (response.hasmore) {\r\n                return getFinalResult(queryResult, pageSize, (arrData.length / pageSize) * 200)\r\n            } else {\r\n                setIsLoading(false);\r\n                return arrData;\r\n            }\r\n        });\r\n    }\r\n\r\n    const getAttributes = () => {\r\n        setIsLoading(true);\r\n        let tempData = [];\r\n        arrTagNumber.map(async (item, index) => {\r\n            let url = `${baseUrl}/objects/TAGGED_ITEM/id/${item}`;\r\n            await fetch(url, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: token,\r\n                }\r\n            }).then(response => {\r\n                var responseValue = response.json();\r\n                return responseValue;\r\n            }).then(responseData => {\r\n                tempData.push(responseData);\r\n                if (arrTagNumber.length === (index + 1)) {\r\n                    setData(tempData);\r\n                    setIsLoading(false);\r\n                }\r\n            }).catch(error => {\r\n                setIsLoading(false);\r\n                console.log(\"getAttributes error -------->\" + error);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    const onChangeAttributeValue = (value, key, itemIndex) => {\r\n        let tempArr = [];\r\n        if (editedArrFormedTabledData.length === 0) {\r\n            setArrFormedTableData(tempArrFormedTableData);\r\n            tempArr = [...tempArrFormedTableData];\r\n        }\r\n        else {\r\n            tempArr = [...editedArrFormedTabledData];\r\n        }\r\n        let objToEdit = tempArr[itemIndex];\r\n        // console.log(\"obj to edit\", JSON.stringify(objToEdit))\r\n        objToEdit[key] = value;\r\n        objToEdit[\"isEdited\"] = true;\r\n        // console.log('tempArr ------->', JSON.stringify(tempArr));\r\n        setEditedArrFormedTabledData(tempArr);\r\n    };\r\n\r\n    const handleSubmitModal = (value) => {\r\n        let editedRows = editedArrFormedTabledData.filter(item => item.isEdited === true);\r\n        // console.log(editedRows.length)\r\n        // console.log(\"editesRows ------->\", JSON.stringify(editedRows));\r\n        let finalObj = {\r\n            finalObj: value,\r\n            xlsxData: editedRows,\r\n        };\r\n        tempBody = finalObj;\r\n        setshowModal(false);\r\n        firstApi();\r\n    }\r\n\r\n    const showAttr = () => {\r\n        // console.log(\"show attr\")\r\n        let arrFormedTableData = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key) => {\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                return '';\r\n            });\r\n            obj[\"isEdited\"] = false;\r\n            arrFormedTableData.push(obj);\r\n        });\r\n        //set formed data in arr\r\n        tempArrFormedTableData = arrFormedTableData;\r\n\r\n        let tableHeaderKeys = [\"TAG NUMBER\", \"ASSET\", \"CLASS NAME\", \"DESCRIPTION\"]\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrFormedTableData))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        return <div className=\"mb-4 max-w rounded w-full shadow  p-5\">\r\n            <div className=\"flex mb-2\">\r\n                <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                <div className=\"ml-5\">\r\n                    {/* <button className=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3\" onClick={() => { }}>\r\n                        Reset\r\n                    </button> */}\r\n                    <button className=\"inline-flex justify-center py-2 px-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-900 hover:bg-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={() => setshowModal(true)}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"table-wrapper\">\r\n                <table className=\"table-auto w-full withTable\">\r\n                    <thead>\r\n                        <tr key=\"head_row\">\r\n                            {tableHeaderKeys.map((headerKey) => {\r\n                                return <td>{headerKey}</td>\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {arrFormedTableData.map((item, index) => {\r\n                            return <tr key={'body_row' + index}>\r\n                                {tableHeaderKeys.map((headerKey, childIndex) => {\r\n                                    return <td key={\"body_td_\" + headerKey + index + childIndex}>\r\n                                        <input onChange={(e) => onChangeAttributeValue(e.target.value, headerKey, index)} defaultValue={item[headerKey]}></input>\r\n                                    </td>\r\n                                })}\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            {showModal ? <Modal onClickCancel={() => { setshowModal(false) }} onClickSubmit={(value) => handleSubmitModal(value)} /> : \"\"}\r\n            <div id=\"liveView-container\">\r\n                <div className=\"sideBar bg-purple-900\">\r\n                    {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                        return (<div key={liveView.name + liveView.Hdl + index}>\r\n                            <button\r\n                                onClick={(e) => fetchSelectedLiveViewData(e, liveView.Name, liveView.Hdl)}\r\n\r\n                                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex my-2 justify-center w-full\">\r\n                                {liveView.Name}\r\n                            </button>\r\n                        </div>)\r\n                    }) : \"\"}\r\n                </div>\r\n                <div className=\"liveView-wrapper\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewHdl}</p>\r\n                            </div>\r\n                            {/* {arrTagNumber.length > 0 &&\r\n                                <div className=\"m-4 mt-0\">\r\n                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                        Tag Number\r\n                                    </label>\r\n                                    <div className=\"inline-block relative w-1/4\">\r\n                                        <select\r\n                                            className=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                                            onChange={(e) => {\r\n                                                getAttributes(e.target.value)\r\n                                            }}>\r\n                                            <option value=\"\">Select</option>\r\n                                            {\r\n                                                arrTagNumber.map((tag, index) => {\r\n                                                    return <option value={tag} key={tag + index}>{tag}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                            <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"inline-block relative w-1/4 ml-3\">\r\n                                        {\r\n                                            data !== undefined && Object.keys(data).length > 0 ?\r\n                                                <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${data.hdl}`}>\r\n                                                    <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n                                                        \r\n                                                        e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                                                    }} />\r\n                                                </a>\r\n                                                : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                            }\r\n                            */}\r\n                            {data !== undefined && data.length > 0 &&\r\n                                <div>\r\n                                    {showAttr()}\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} alt=\"\" />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveViewWithTable;","import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport Upload from \"../components/Upload\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\nimport Logo from '../assests/logo_search.png';\r\n\r\nconst axios = require('axios');\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png\" />{text}</div>;\r\n\r\nfunction LiveView(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isError, setIsError] = useState();\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n    const [showData, setShowData] = useState(false);\r\n    const [arrTagNumber, setArrTagNumber] = useState([]);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [isContentEditable, setisContentEditable] = useState(false);\r\n    const [editedAttr, seteditedAttr] = useState({});\r\n    const [showModal, setshowModal] = useState(false);\r\n    let tempBody = {};\r\n    let tempSelectedObj = {};\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let arrData = [];\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const hdl = queryParams.get(\"TAGGED_ITEM\");\r\n        if (hdl) {\r\n            doAuth(hdl);\r\n        }\r\n        if (window.location.pathname != '/') {\r\n            const token = localStorage.getItem('b_token');\r\n            const redirectPath = localStorage.getItem('redirectPath');\r\n            if (token == null) {\r\n                let arrLocation = window.location.href.split('/');\r\n                localStorage.setItem('redirectPath', arrLocation[arrLocation.length - 1]);\r\n                history.push('/');\r\n            } else if (redirectPath != null) {\r\n                history.push(redirectPath)\r\n                localStorage.removeItem('redirectPath')\r\n            }\r\n        }\r\n    }, []);\r\n\r\n\r\n    const doAuth = (hdl) => {\r\n        setIsLoading(true);\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n                fetchTaggedItems(hdl)\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const fetchTaggedItems = (hdl) => {\r\n        //doing api call for getting attributes data\r\n        Api.objectByHdl('TAGGED_ITEM', hdl).then((response) => {\r\n            if (response != null) {\r\n                setShowData(true);\r\n                //getting all keys from attrs\r\n                let arrkeys = Object.keys(response.attrs);\r\n                //initalize object\r\n                let obj = {};\r\n                //looping attribute keys and getting attribute values\r\n                arrkeys.map((key) => {\r\n                    obj[response.attrs[key].name] = response.attrs[key].value;\r\n                });\r\n                setData(response);\r\n                setIsLoading(false);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchTaggedItems error---------->\" + JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const fetchSelectedLiveViewData = (selectedHdl) => {\r\n        // setselectedLiveViewHdl(selectedLiveView);\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews/${selectedHdl}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(response => {\r\n            if (response !== undefined && response !== null) {\r\n                getResultUrl(response);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchSelectedLiveViewData error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const firstApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                secondApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error('firstApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const secondApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=import`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error('secondApi response ------------>', data);\r\n                thirdApi();\r\n            })\r\n            .catch((error) => {\r\n                console.error(' secondApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const thirdApi = () => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=download-new`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => response.json())\r\n            .then(data => {\r\n                fourthApi(data.response);\r\n            })\r\n            .catch((error) => {\r\n                console.error('thirdApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const fourthApi = (hdl) => {\r\n        setIsLoading(true)\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=update&file_hdl=${hdl}`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(tempBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.error(' fourthApi response--------->:', data);\r\n                setIsLoading(false);\r\n                alert('Successfully updated.')\r\n            })\r\n            .catch((error) => {\r\n                console.error(' fourthApi Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n\r\n    const getResultUrl = (response) => {\r\n        let createQueryBody = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": response.Data.conditions,\r\n            \"fields\": response.Data.fields\r\n        };\r\n        let url = `${baseUrl}/queries`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(createQueryBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                return getFinalResult(data.resulturl).then((finalResult) => {\r\n                    setIsLoading(false);\r\n                    let arrFirstObjKeys = Object.keys(finalResult[0]).filter(e => typeof finalResult[0][e] == 'object')\r\n                    let arrModifiedData = [];\r\n                    let arrTagNumberData = [];\r\n                    finalResult.map((item) => {\r\n                        let obj = {};\r\n                        arrFirstObjKeys.map((key) => {\r\n                            if (item[key].name == \"Tag Number\" || item[key].name == \"TAG NUMBER\") {\r\n                                arrTagNumberData.push(item[key].value);\r\n                            }\r\n                            obj[item[key].name] = item[key].value;\r\n                        });\r\n                        arrModifiedData.push(obj);\r\n                    });\r\n                    if (arrModifiedData.length > 0) {\r\n                        if (arrModifiedData[0].hasOwnProperty(\"Tag Number\") || arrModifiedData[0].hasOwnProperty(\"TAG NUMBER\")) {\r\n                            if (arrTagNumberData.length > 0) {\r\n                                setArrTagNumber(arrTagNumberData);\r\n                            }\r\n                            setShowData(true);\r\n                        }\r\n                        else {\r\n                            //finish process and show no data found\r\n                            setShowData(true)\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const getFinalResult = (queryResult, pageSize = 200, page = 0) => {\r\n        let url = `${baseUrl}${queryResult}?limit=${pageSize}&skip=${page}`;\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        return Api.getRequest(url).then((response) => {\r\n            arrData.push(...response.data);\r\n            if (response.hasmore) {\r\n                return getFinalResult(queryResult, pageSize, (arrData.length / pageSize) * 200)\r\n            } else {\r\n                setIsLoading(false);\r\n                return arrData;\r\n            }\r\n        });\r\n    }\r\n\r\n    const getAttributes = (selectedTag) => {\r\n        let url = `${baseUrl}/objects/TAGGED_ITEM/id/${selectedTag}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            setData(responseData);\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(\"getAttributes error -------->\" + error);\r\n        })\r\n    }\r\n\r\n    const onChangeAttributeValue = (value, key) => {\r\n        let obj = {};\r\n        if (Object.keys(editedAttr).length > 0) {\r\n            obj = { ...editedAttr };\r\n            tempSelectedObj = {};\r\n        }\r\n        else {\r\n            obj = { ...tempSelectedObj };\r\n        }\r\n        obj[key] = value;\r\n        seteditedAttr(obj);\r\n    }\r\n\r\n    const handleSubmitModal = (value) => {\r\n        let finalObj = {\r\n            finalObj: value,\r\n            xlsxData: [editedAttr],\r\n        };\r\n        tempBody = finalObj;\r\n        setshowModal(false);\r\n        firstApi();\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        let arrkeys = Object.keys(data.attrs)\r\n        let obj = {};\r\n        arrkeys.map((key) => {\r\n            obj[data.attrs[key].name] = data.attrs[key].value;\r\n            return '';\r\n        })\r\n        arrNameValue.push(obj);\r\n        tempSelectedObj = arrNameValue[0];\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5 pr-0\">\r\n                {arrNameValue.length > 0 && arrNameValue[0].hasOwnProperty(\"Approved Longitude\") && arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <a target=\"_blank\" href={`https://earth.google.com/web/search/Arsenal+fc/@${parseFloat(arrNameValue[0][\"Approved Latitude\"])},${parseFloat(arrNameValue[0][\"Approved Longitude\"])},9.09858867a,612.98636056d,35y,-40.1316669h,45.00000069t,0`}>Click here for Google Earth</a>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true,\r\n                                    mapTypeId: \"satellite\"\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            center={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 18 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                    lat={nameValue[\"Approved Latitude\"]}\r\n                                    lng={nameValue[\"Approved Longitude\"]}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px p-5 pb-0\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={item.Latitude} uuid=\"attributes\" key={item + index}>\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        {/* <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg> */}\r\n                                        &emsp;\r\n                                        {arrNameValue[index].hasOwnProperty(\"Tag Number\") ? arrNameValue[index][\"Tag Number\"] : arrNameValue[index][\"TAG NUMBER\"]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel className=\"liveView-item-container\">\r\n                                    <table className=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key, index) => {\r\n                                                return <tr key={key + index}>\r\n                                                    <td className=\"border px-4 py-2\">{key}</td>\r\n                                                    {!isContentEditable\r\n                                                        ?\r\n                                                        <td className=\"border px-4 py-2\">{item[key]}</td>\r\n                                                        :\r\n                                                        <td className=\"border px-4 py-2\">\r\n                                                            <input onChange={(e) => onChangeAttributeValue(e.target.value, key)} defaultValue={item[key]}></input>\r\n                                                        </td>\r\n                                                    }\r\n\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        //remove all local storage\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <div id=\"searchContainer\">\r\n            {/* <NavBar showLogoutButton={true} showSearch={false}></NavBar> */}\r\n            <div class=\"header-nav\">\r\n                <div className=\"flex items-center flex-shrink-0 text-black mr-6 cursor-pointer\" onClick={() => {\r\n                    history.push('search')\r\n                }}>\r\n                    <img alt=\"Logo\" className=\"w-1/2\" src={Logo}></img>\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                        &emsp;\r\n                    </label>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                        onClick={() => { logout() }}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            {showModal ? <Modal onClickCancel={() => { setshowModal(false) }} onClickSubmit={(value) => handleSubmitModal(value)} /> : \"\"}\r\n            <div id=\"liveView-link-container\">\r\n                <div className=\"liveView-wrapper\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            {data !== undefined && Object.keys(data).length > 0 &&\r\n                                <div>\r\n                                    {showAttr()}\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} alt='errorImage' />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Unable to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveView;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/NavBar'\r\nimport Api from \"../api/api\";\r\nimport bug from \"../assests/bug.svg\";\r\nimport chat from \"../assests/gantt_chat.svg\";\r\nimport map from \"../assests/map.svg\";\r\nimport search from \"../assests/search.svg\";\r\nimport noDataAttribute from \"../assests/noDataAttribute.svg\";\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nconst axios = require('axios');\r\n\r\nfunction LinearAsset(props) {\r\n    const [ganttData, setGanttData] = useState([]);\r\n    const [ass_ganttData, setAss_ganttData] = useState([]);\r\n    const [attributeData, setAttributeData] = useState([]);\r\n    const [documentData, setdocumentData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isAttrLoading, setIsAttrLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errMsg, setErrorMsg] = useState();\r\n    const [showData, setShowData] = useState(false);\r\n    const [isGanntHaveData, setIsGanntHaveData] = useState(false);\r\n    const [isAssociateGanntHaveData, setIsAssociateGanntHaveData] = useState(false);\r\n    const [isMapError, setIsMapError] = useState(false);\r\n    const doApi = (searchKey) => {\r\n        setIsLoading(true);\r\n        //setting token in header\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        Api.getRouteObj(searchKey).then((response) => {\r\n            console.log(\"response ------------>\");\r\n            console.log(response);\r\n            if (response != undefined && response != null) {\r\n                setShowData(true);\r\n                if (response.dataMap != undefined && response.dataMap != null && Object.keys(response.dataMap).length > 0) {\r\n                    console.log(\"inside if\")\r\n                    setIsGanntHaveData(true);\r\n\r\n                    //generating data\r\n                    generateGanttData(response.dataMap);\r\n                }\r\n                else {\r\n                    console.log(\"inside else\")\r\n                    //set gantt data error\r\n                    setIsGanntHaveData(false);\r\n                }\r\n                if (response.dataMapEq != undefined && response.dataMapEq != null && Object.keys(response.dataMapEq).length > 0) {\r\n                    setIsAssociateGanntHaveData(true);\r\n\r\n                    //generate associate Data\r\n                    generateAssociateData(response);\r\n                }\r\n                else {\r\n                    //set gantt data error\r\n                    setIsAssociateGanntHaveData(false);\r\n                }\r\n            }\r\n            console.log(\"isGanntHaveData----------->\" + isGanntHaveData)\r\n            console.log(\"isAssociateGanntHaveData ------------ \" + isAssociateGanntHaveData)\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"doApi error ------------>\");\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            console.log(\"isGanntHaveData----------->\" + isGanntHaveData)\r\n            console.log(\"isAssociateGanntHaveData ------------ \" + isAssociateGanntHaveData)\r\n            if (!isAssociateGanntHaveData && !ganttData) {\r\n                setIsError(true);\r\n            }\r\n            // setIsError(true);\r\n            // setErrorMsg(\"Something went wrong. Please Try again!!\");\r\n        });\r\n    };\r\n\r\n    const generateGanttData = (LaMap) => {\r\n        //getting y keys from main object\r\n        let ganntKeys = Object.keys(LaMap);\r\n        //variable to store all data\r\n        let data = [];\r\n        let mapdata = [];\r\n        //generating data for fixed key\r\n        LaMap.fixed.map((fixed_obj) => {\r\n            let lastObj = LaMap.fixed[LaMap.fixed.length - 1];\r\n            let pointsToAdd = 0;\r\n            if(parseInt(lastObj.route_chainage) < 25000) {\r\n                pointsToAdd = 300;\r\n            }\r\n            else{\r\n                pointsToAdd = 1500;\r\n            }\r\n\r\n            //getting all keys from attrs\r\n            let arrkeys = Object.keys(fixed_obj.refObj.attrs);\r\n\r\n            //initalize object\r\n            let obj = {};\r\n\r\n            //looping attribute keys and getting attribute values\r\n            arrkeys.map((key, index) => {\r\n                obj[fixed_obj.refObj.attrs[key].name] = fixed_obj.refObj.attrs[key].value;\r\n            });\r\n\r\n            //getting lat and lang\r\n            let lat = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Latitude' || e.name.toLowerCase() == 'latitude')[0].value)\r\n            // let lng = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\")) > 0 ? Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\")) : Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\").substring(1))\r\n            let lng = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude' || e.name.toLowerCase() == 'longitude')[0].value)\r\n            \r\n            if(lat){\r\n                mapdata.push({\r\n                    \"lat\": lat ,\r\n                    \"lng\": lng,\r\n                    \"ref_or_fix\": \"fix\"\r\n                });\r\n            }\r\n            \r\n            //creating object with required values  \r\n            data.push({\r\n                \"startDate\": fixed_obj.route_chainage,\r\n                \"endDate\": (fixed_obj.route_chainage + pointsToAdd),\r\n                \"taskName\": \"Fixed\",\r\n                \"type\": fixed_obj.refObj.type,\r\n                \"status\": \"RUNNING\",\r\n                \"attrs\": [{\r\n                    \"name\": \"Tag: \",\r\n                    \"value\": fixed_obj.objId\r\n                }],\r\n                \"hdl\": fixed_obj.hdl,\r\n                \"lat\": lat,\r\n                \"lng\": lng\r\n            });\r\n        });\r\n\r\n        //generating data for ref key\r\n        LaMap.ref.map((ref_obj) => {\r\n            let lastObj = LaMap.ref[LaMap.ref.length - 1];\r\n            let pointsToAdd = 0;\r\n            if(parseInt(lastObj.route_chainage) < 25000) {\r\n                pointsToAdd = 300;\r\n            }\r\n            else{\r\n                pointsToAdd = 1500;\r\n            }\r\n\r\n            //getting lat and lang\r\n            let lat = Number(Object.values(ref_obj.refObj.attrs).filter(e => e.name == 'Approved Latitude' || e.name.toLowerCase() == 'latitude')[0].value)\r\n            let lng = Number(Object.values(ref_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude' || e.name.toLowerCase() == 'longitude')[0].value)\r\n            if(lat){\r\n                mapdata.push({\r\n                    \"lat\": lat ,\r\n                    \"lng\": lng,\r\n                    \"ref_or_fix\": \"ref\"\r\n                });\r\n            }\r\n            //creating object with required values\r\n            data.push({\r\n                \"startDate\": ref_obj.route_chainage,\r\n                \"endDate\": (ref_obj.route_chainage + pointsToAdd),\r\n                \"taskName\": \"Reference\",\r\n                \"type\": ref_obj.refObj.type,\r\n                \"status\": \"SUCCEEDED\",\r\n                \"attrs\": [{\r\n                    \"name\": \"Tag: \",\r\n                    \"value\": ref_obj.objId\r\n                }],\r\n                \"hdl\": ref_obj.hdl,\r\n                \"lat\": lat,\r\n                \"lng\": lng\r\n            });\r\n        });\r\n\r\n        //generating map data\r\n        // generateMapData(mapdata);\r\n\r\n        //initialize map\r\n        window.InitializeMap(mapdata);\r\n\r\n        //set generated data to state\r\n        setGanttData(data);\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n\r\n        var taskNames = [\"Fixed\", \"Reference\"];\r\n        var format = \"%H:%M\";\r\n        // gantt 1\r\n        var gantt1 = window.d3.gantt(\"gantt\", data, onClickGanttItem).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(data);\r\n    };\r\n\r\n    const onClickGanttItem = (clickedObj) => {\r\n        console.log(\"clickedObj -------> \"+JSON.stringify(clickedObj));\r\n        setAttributeData([]);\r\n        setdocumentData([]);\r\n        setIsMapError(false);\r\n        setIsAttrLoading(true);\r\n        let objType = \"TAGGED_ITEM\";\r\n        //setting token in header\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") }\r\n\r\n        //initialize required variables\r\n        let hdlData = [];\r\n\r\n        //doing api call for getting attributes data\r\n        Api.objectByHdl(clickedObj.type, clickedObj.hdl).then((response) => {\r\n            if (response != null) {\r\n                //getting all keys from attrs\r\n                let arrkeys = Object.keys(response.attrs);\r\n                //initalize object\r\n                let obj = {};\r\n                //looping attribute keys and getting attribute values\r\n                arrkeys.map((key) => {\r\n                    obj[response.attrs[key].name] = response.attrs[key].value;\r\n                });\r\n                //set data to state            \r\n                setAttributeData(obj);\r\n                setIsAttrLoading(false);\r\n            }\r\n        }).catch(error => {\r\n            setIsAttrLoading(false);\r\n            console.log(\"objectByHdl error---------->\" + JSON.stringify(error));\r\n        });\r\n\r\n        //doing api call for getting document link data\r\n        Api.objectAssociations(objType, clickedObj.hdl, \"DOCUMENT\").then((response) => {\r\n            let associativeData = [];\r\n            if (response != null) {\r\n                if (response.items.length > 0) {\r\n                    {\r\n                        response.items.map((item) => {\r\n                            associativeData.push({\r\n                                name: item.ID,\r\n                                class: item.ClsName,\r\n                                link: item.Url\r\n                            })\r\n                        })\r\n                    }\r\n                    setdocumentData(associativeData);\r\n                    setIsAttrLoading(false);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            setIsAttrLoading(false);\r\n            console.log(\"objectAssociations error---------->\" + JSON.stringify(error));\r\n        });\r\n        \r\n        // window.myMap.setCenter({lat:clickedObj.lat, lng:clickedObj.lng})    ;\r\n        window.myMap.setZoom(17);\r\n\r\n        window.myMap.panTo({ lat: clickedObj.lat, lng: clickedObj.lng });\r\n        // window.myMap.setZoom(18);      // This will trigger a zoom_changed on the map\r\n    };\r\n\r\n    const generateAssociateData = (AssociativeData) => {\r\n        // console.log(JSON.stringify(AssociativeData))\r\n        //getting y keys from main object\r\n        let issueKeys = Object.keys(AssociativeData.dataMapEq.Issue);\r\n        //variable to store all data\r\n        let data = [];\r\n        issueKeys.map((key) => {\r\n            //generating data for fixed key\r\n            AssociativeData.dataMapEq.Issue[key].map((issue_obj) => {\r\n                if (issue_obj.attribute_name != \"\") {\r\n                    //creating object with required values  \r\n                    data.push({\r\n                        \"startDate\": issue_obj.from_route_chainage,\r\n                        \"endDate\": issue_obj.to_route_chainage,\r\n                        \"taskName\": issue_obj.class_name,\r\n                        \"type\": issue_obj.refObj.Type,\r\n                        \"status\": \"KILLED\",\r\n                        \"attrs\": [{\r\n                            \"name\": issue_obj.attribute_name + \": \",\r\n                            \"value\": issue_obj.attribute_value + \" \" + issue_obj.attribute_uom\r\n                        },\r\n                        {\r\n                            \"name\": \"Ref: \",\r\n                            \"value\": issue_obj.refObj.ID\r\n                        }\r\n                        ],\r\n                        \"hdl\": issue_obj.refObj.Hdl,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //getting y keys from main object\r\n        let valueKeys = Object.keys(AssociativeData.dataMapEq.Value);\r\n        //variable to store all data\r\n        valueKeys.map((key) => {\r\n            //generating data for fixed key\r\n            AssociativeData.dataMapEq.Value[key].map((value_obj) => {\r\n                if (value_obj.attribute_name != \"\") {\r\n                    //creating object with required values  \r\n                    data.push({\r\n                        \"startDate\": value_obj.from_route_chainage,\r\n                        \"endDate\": value_obj.to_route_chainage,\r\n                        \"taskName\": value_obj.class_name,\r\n                        \"status\": \"RUNNING\",\r\n                        \"attrs\": [{\r\n                            \"name\": value_obj.attribute_name + \": \",\r\n                            \"value\": value_obj.attribute_value + \" \" + value_obj.attribute_uom\r\n                        },\r\n                        {\r\n                            \"name\": \"Ref: \",\r\n                            \"value\": value_obj.refObj.ID\r\n                        }\r\n                        ],\r\n                        \"hdl\": value_obj.refObj.Hdl,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        //set generated associative data to state\r\n        setAss_ganttData(data);\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n        var taskNames = [...issueKeys, ...valueKeys];\r\n        var format = \"%H:%M\";\r\n        var gantt1 = window.d3.gantt(\"associate_gantt\", data, onClickGanttItem).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(data);\r\n    };\r\n\r\n    const generateMapData = (data) => {\r\n        // console.log(JSON.stringify(data))\r\n        let mapObj = {\r\n            \"optimizeWaypoints\": false,\r\n            \"travelMode\": \"DRIVING\"\r\n        };\r\n        let waypoints = [];\r\n        {\r\n            data.map((item, index) => {\r\n                if (index == 0) {\r\n                    mapObj.origin = {\r\n                        \"lat\": item.lat,\r\n                        \"lng\": item.lng\r\n                    }\r\n                }\r\n                else if (index == (data.length - 1)) {\r\n                    mapObj.destination = {\r\n                        \"lat\": item.lat,\r\n                        \"lng\": item.lng\r\n                    }\r\n                    mapObj.waypoints = waypoints;\r\n                }\r\n                else {\r\n                    waypoints.push({\r\n                        \"location\": {\r\n                            \"lat\": item.lat,\r\n                            \"lng\": item.lng\r\n                        },\r\n                        \"stopover\": true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        // console.log(\"mapObj ------->\"+JSON.stringify(mapObj));\r\n        window.InitializeMap(mapObj);\r\n    };\r\n\r\n    const mapErrorCallback = (is) => {\r\n        setIsMapError(is);\r\n    }\r\n    const searchClicked = (keyword) => {\r\n        setShowData(false);\r\n        setAttributeData([]);\r\n        setdocumentData([]);\r\n        doApi(keyword);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // window.mapErrorCallback = mapErrorCallback;\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={true} onClickSearch={searchClicked} ></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                :\r\n                \"\"\r\n            }\r\n            {isAttrLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"}\r\n\r\n            {showData ?\r\n                <div className=\"relative\">\r\n                    <svg style={{ height: 0, position: \"absolute\" }}>\r\n                        <defs>\r\n                            <linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#fd3c3c\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#dc281e\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"green\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#7bdb06\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#36ac00\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"blue\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#00c6ff\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#0072ff\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#fe8c00\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#f83600\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                        </defs>\r\n                    </svg>\r\n                    <div className=\"flex\">\r\n                        <div className=\"w-1/4 pb-5\">\r\n                            <div id=\"dvMap\" className={isMapError ? \"opacity-25\" : \"opacity-100 min-h-full\"}></div>\r\n                            {isMapError ?\r\n                                <div className=\"min-h-full mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                        <div className=\"w-3/4 p-5\">\r\n                            {/* gantt chat */}\r\n\r\n                            <div id=\"gantt\" className={isGanntHaveData ? \"block\" : \"hidden\"} style={{ minHeight: \"130px\" }}></div>\r\n                            {isGanntHaveData\r\n                                ? \"\"\r\n                                :\r\n                                <div className=\"h-64 mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={chat} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">No fixed and refrence data found</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {/* associate_gantt chat*/}\r\n                            <div id=\"associate_gantt\" className={isAssociateGanntHaveData ? \"block\" : \"hidden\"} style={{ height: \"200px\" }}></div>\r\n                            {isAssociateGanntHaveData\r\n                                ? \"\"\r\n                                :\r\n                                <div className=\"h-64 mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={chat} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">No associatives data found</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                {/* attribute */}\r\n                                {attributeData != undefined && attributeData != \"\"\r\n                                    ?\r\n                                    <div>\r\n                                            {/* <p className=\"text-xl font-bold mb-3\">Attributes</p> */}\r\n                                            <Accordion className=\"border-0\" preExpanded={[\"attributes\"]} >\r\n                                                <AccordionItem className=\"shadow-md mb-3\" uuid=\"attributes\"\r\n                                                // key={item.Latitude}\r\n                                                >\r\n                                                    <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                                        <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                                        &emsp;\r\n                                                        {/* {arrSplittedValue[index]} */}\r\n                                                        Attributes\r\n                                                    </AccordionItemButton>\r\n                                                    </AccordionItemHeading>\r\n                                                    <AccordionItemPanel className=\"h-56 overflow-y-auto\">\r\n                                                        <table class=\"table-auto w-full\">\r\n                                                            <tbody>\r\n                                                                {Object.keys(attributeData).map((key) => {\r\n                                                                    return <tr>\r\n                                                                        <td class=\"border px-4 py-2\">{key}</td>\r\n                                                                        <td class=\"border px-4 py-2\">{attributeData[key]}</td>\r\n                                                                    </tr>\r\n                                                                })}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </AccordionItemPanel>\r\n                                                </AccordionItem>\r\n                                            </Accordion>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"h-64 border-dashed border border-gray-600 relative\">\r\n                                        <div className=\"centerItem\">\r\n                                            <img className=\"attr_chat mx-auto\" draggable={false} src={noDataAttribute} />\r\n                                            <p className=\"text-center mt-3 text-purple-800\">No attributes data found</p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {/* document link data */}\r\n                                {documentData != undefined && documentData.length > 0\r\n                                    ?\r\n                                    <div>\r\n                                            {/* <p className=\"text-xl font-bold mb-3\">Attributes</p> */}\r\n                                            <Accordion className=\"border-0\" preExpanded={[\"doc\"]}>\r\n                                                <AccordionItem className=\"shadow-md mb-3\" uuid=\"doc\"\r\n                                                // key={item.Latitude}\r\n                                                >\r\n                                                    <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                                        <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                                        &emsp;\r\n                                                        {/* {arrSplittedValue[index]} */}\r\n                                                        Document Links\r\n                                                    </AccordionItemButton>\r\n                                                    </AccordionItemHeading>\r\n                                                    <AccordionItemPanel className=\"h-56 overflow-y-auto\">\r\n                                                        <table class=\"table-auto w-full\">\r\n                                                            <tbody>\r\n                                                                {documentData.map((item) => {\r\n                                                                    return <tr>\r\n                                                                        <td class=\"border px-4 py-2\">{item.name}</td>\r\n                                                                        <td class=\"border px-4 py-2\">{item.class}</td>\r\n                                                                        <td class=\"border px-4 py-2\" >\r\n                                                                            <a href={item.link} target=\"_blank\">\r\n                                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg>\r\n                                                                            </a>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                })}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </AccordionItemPanel>\r\n                                                </AccordionItem>\r\n                                            </Accordion>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"h-64 border-dashed border border-gray-600 relative\">\r\n                                        <div className=\"centerItem\">\r\n                                            <img className=\"attr_chat mx-auto\" draggable={false} src={noDataAttribute} />\r\n                                            <p className=\"text-center mt-3 text-purple-800\">No documents data found</p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"centerItem\">\r\n                    <img draggable={false} width={300} src={search} />\r\n                    <p className=\"text-center mt-3 text-purple-800\">Search to show the data here</p>\r\n                </div>\r\n            }\r\n\r\n            {isError ?\r\n                <div className=\"centerItem\">\r\n                    <img draggable={false} width={300} src={bug} />\r\n                    <p className=\"text-center mt-3 text-purple-800\">Something went wrong. Please try again!!</p>\r\n                </div>\r\n                : \"\"}\r\n            {/* loader */}\r\n            {/* searchBar */}\r\n            {/* map */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinearAsset;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport search from \"../assests/search.svg\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logo from '../assests/logo_search.png';\r\n\r\nmapboxgl.accessToken =\r\n    'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png\" />{text}</div>;\r\n\r\nfunction LiveViewAndTag(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showData, setShowData] = useState(false);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n    const [showMapBox, setShowMapBox] = useState(false);\r\n    const [boxMapData, setBoxMapData] = useState({});\r\n    const [googleMapData, setGoogleMapData] = useState([]);\r\n    //map states\r\n    const mapContainerRef = useRef(null);\r\n    const [lng, setLng] = useState(5);\r\n    const [lat, setLat] = useState(34);\r\n    const [zoom, setZoom] = useState(5);\r\n    let map = null;\r\n    //local storage values\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n\r\n    //home page states\r\n    const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\r\n    const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\";\r\n    const [isError, setIsError] = useState();\r\n    const [inputTag, setInputTag] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n    const [showcommonLogo, setShowcommonLogo] = useState(true);\r\n    const [commonMsg, setCommonMsg] = useState('Select the liveview / tag number to show the data here');\r\n    const history = useHistory();\r\n\r\n    // Initialize map when component mounts\r\n    useEffect(() => {\r\n        if (window.location.pathname != '/') {\r\n            const token = localStorage.getItem('b_token');\r\n            const redirectPath = localStorage.getItem('redirectPath');\r\n            if (token == null) {\r\n                let arrLocation = window.location.href.split('/');\r\n                localStorage.setItem('redirectPath', arrLocation[arrLocation.length - 1]);\r\n                history.push('/');\r\n            } else if (redirectPath != null) {\r\n                history.push(redirectPath)\r\n                localStorage.removeItem('redirectPath')\r\n            }\r\n        } else {\r\n            fetchLiveView();\r\n        }\r\n    }, [])\r\n\r\n    const show_mapBox = () => {\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    // console.log('boxMapData --------', JSON.stringify(boxMapData))\r\n                    // Add a GeoJSON source with 2 points\r\n                    map.addSource('points', {\r\n                        'type': 'geojson',\r\n                        'data': boxMapData,\r\n                        cluster: true,\r\n                        clusterMaxZoom: 14, // Max zoom to cluster points on\r\n                        clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\r\n                    });\r\n\r\n                    // Add a symbol layer\r\n                    map.addLayer({\r\n                        'id': 'points',\r\n                        'type': 'symbol',\r\n                        'source': 'points',\r\n                        'layout': {\r\n                            'icon-image': 'custom-marker',\r\n                            // get the title name from the source's \"title\" property\r\n                            'text-field': ['get', 'title'],\r\n                            'text-font': [\r\n                                'Open Sans Semibold',\r\n                                'Arial Unicode MS Bold'\r\n                            ],\r\n                            'text-offset': [0, 1.25],\r\n                            'text-anchor': 'top'\r\n                        }\r\n                    });\r\n\r\n                    map.addLayer({\r\n                        id: 'clusters',\r\n                        type: 'circle',\r\n                        source: 'points',\r\n                        filter: ['has', 'point_count'],\r\n                        paint: {\r\n                            // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n                            // with three steps to implement three types of circles:\r\n                            //   * Blue, 20px circles when point count is less than 100\r\n                            //   * Yellow, 30px circles when point count is between 100 and 750\r\n                            //   * Pink, 40px circles when point count is greater than or equal to 750\r\n                            'circle-color': [\r\n                                'step',\r\n                                ['get', 'point_count'],\r\n                                '#51bbd6',\r\n                                100,\r\n                                '#f1f075',\r\n                                750,\r\n                                '#f28cb1'\r\n                            ],\r\n                            'circle-radius': [\r\n                                'step',\r\n                                ['get', 'point_count'],\r\n                                20,\r\n                                100,\r\n                                30,\r\n                                750,\r\n                                40\r\n                            ]\r\n                        }\r\n                    });\r\n\r\n                    map.addLayer({\r\n                        id: 'cluster-count',\r\n                        type: 'symbol',\r\n                        source: 'points',\r\n                        filter: ['has', 'point_count'],\r\n                        layout: {\r\n                            'text-field': '{point_count_abbreviated}',\r\n                            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n                            'text-size': 12\r\n                        }\r\n                    });\r\n\r\n                    map.addLayer({\r\n                        id: 'unclustered-point',\r\n                        type: 'circle',\r\n                        source: 'points',\r\n                        filter: ['!', ['has', 'point_count']],\r\n                        paint: {\r\n                            'circle-color': '#11b4da',\r\n                            'circle-radius': 4,\r\n                            'circle-stroke-width': 1,\r\n                            'circle-stroke-color': '#fff'\r\n                        }\r\n                    });\r\n\r\n                    // inspect a cluster on click\r\n                    map.on('click', 'clusters', function (e) {\r\n                        var features = map.queryRenderedFeatures(e.point, {\r\n                            layers: ['clusters']\r\n                        });\r\n                        var clusterId = features[0].properties.cluster_id;\r\n                        map.getSource('points').getClusterExpansionZoom(\r\n                            clusterId,\r\n                            function (err, zoom) {\r\n                                if (err) return;\r\n\r\n                                map.easeTo({\r\n                                    center: features[0].geometry.coordinates,\r\n                                    zoom: zoom\r\n                                });\r\n                            }\r\n                        );\r\n                    });\r\n\r\n                    // When a click event occurs on a feature in\r\n                    // the unclustered-point layer, open a popup at\r\n                    // the location of the feature, with\r\n                    // description HTML from its properties.\r\n                    map.on('click', 'unclustered-point', function (e) {\r\n                        var coordinates = e.features[0].geometry.coordinates.slice();\r\n                        var mag = e.features[0].properties.mag;\r\n                        var tsunami;\r\n\r\n                        if (e.features[0].properties.tsunami === 1) {\r\n                            tsunami = 'yes';\r\n                        } else {\r\n                            tsunami = 'no';\r\n                        }\r\n\r\n                        // Ensure that if the map is zoomed out such that\r\n                        // multiple copies of the feature are visible, the\r\n                        // popup appears over the copy being pointed to.\r\n                        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                        }\r\n\r\n                        // new mapboxgl.Popup()\r\n                        //   .setLngLat(coordinates)\r\n                        //   .setHTML(\r\n                        //     'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\r\n                        //   )\r\n                        //   .addTo(map);\r\n                    });\r\n\r\n                    map.on('mouseenter', 'clusters', function () {\r\n                        map.getCanvas().style.cursor = 'pointer';\r\n                    });\r\n                    map.on('mouseleave', 'clusters', function () {\r\n                        map.getCanvas().style.cursor = '';\r\n                    });\r\n\r\n                    // When a click event occurs on a feature in the places layer, open a popup at the\r\n                    // location of the feature, with description HTML from its properties.\r\n                    map.on('click', 'points', function (e) {\r\n                        var coordinates = e.features[0].geometry.coordinates.slice();\r\n                        var description = e.features[0].properties.description;\r\n                        // Ensure that if the map is zoomed out such that multiple\r\n                        // copies of the feature are visible, the popup appears\r\n                        // over the copy being pointed to.\r\n                        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                        }\r\n\r\n                        new mapboxgl.Popup()\r\n                            .setLngLat(coordinates)\r\n                            .setHTML(description)\r\n                            .addTo(map);\r\n                    });\r\n\r\n                    // Change the cursor to a pointer when the mouse is over the places layer.\r\n                    map.on('mouseenter', 'places', function () {\r\n                        map.getCanvas().style.cursor = 'pointer';\r\n                    });\r\n\r\n                    // Change it back to a pointer when it leaves.\r\n                    map.on('mouseleave', 'places', function () {\r\n                        map.getCanvas().style.cursor = '';\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const doAuth = () => {\r\n        setIsLoading(true);\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                fetchSelectedLiveViewData();\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const formData = (response) => {\r\n        let data = { ...response };\r\n        let gMapData = [];\r\n        data.features.map((item) => {\r\n            //form mapBoxData\r\n            let keys = Object.keys(item.properties);\r\n            let tableData = \"\";\r\n            tableData += \"<p>\";\r\n            keys.map((k) => {\r\n                if (k !== 'undefined' && k !== '(unresolved)') {\r\n                    tableData += k;\r\n                    tableData += \" : \";\r\n                    tableData += item.properties[k];\r\n                    tableData += \" <br> \";\r\n                }\r\n            });\r\n            tableData += \"</p>\";\r\n            let linkTitle = item.properties[\"TAG NUMBER\"] ? item.properties[\"TAG NUMBER\"] : item.properties[\"Tag Number\"];\r\n            let tagHdl = item.properties['undefined'] ? item.properties['undefined'] : item.properties['(unresolved)'];\r\n            const link = `<a href='https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${tagHdl}' target='_blank'> ${linkTitle} <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>`;\r\n            let decriptionContent = `<div class='description-wrapper'><div class='header'></div><div class=\"content\">${link}${tableData}</div></div>`\r\n\r\n            //form gMapData\r\n            gMapData.push({\r\n                \"lat\": Number(item.geometry.coordinates[1]),\r\n                \"lng\": Number(item.geometry.coordinates[0]),\r\n                \"ref_or_fix\": \"fix\",\r\n                \"desc\": decriptionContent\r\n            });\r\n\r\n            item.properties.description = decriptionContent;\r\n\r\n            let lat = item.geometry.coordinates[1];\r\n            let lng = item.geometry.coordinates[0];\r\n            item.geometry.coordinates[0] = lng;\r\n            item.geometry.coordinates[1] = lat;\r\n        });\r\n\r\n        setLat(data.features[0].geometry.coordinates[1]);\r\n        setLng(data.features[0].geometry.coordinates[0]);\r\n        setBoxMapData(data);\r\n        setGoogleMapData(gMapData);\r\n        setShowData(true);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const formDataTagNumber = (response, dataToSet) => {\r\n        let data = [...response];\r\n        let gMapData = [];\r\n        let keys = [];\r\n        let latKey = '';\r\n        let longKey = '';\r\n        data.map((item) => {\r\n            if (item.hasOwnProperty('Latitude')) {\r\n                keys = ['Tag Number', 'Longitude', 'Latitude'];\r\n                latKey = 'Latitude';\r\n                longKey = 'Longitude';\r\n            } else if (item.hasOwnProperty('LATITUDE')) {\r\n                keys = ['TAG NUMBER', 'LONGITUDE', 'LATITUDE']\r\n                latKey = 'LATITUDE';\r\n                longKey = 'LONGITUDE';\r\n            }\r\n            else if (item.hasOwnProperty('Approved Latitude')) {\r\n                keys = ['Tag Number', 'Approved Longitude', 'Approved Latitude'];\r\n                latKey = 'Approved Latitude';\r\n                longKey = 'Approved Longitude';\r\n            }\r\n            //form mapBoxData\r\n            let tableData = \"\";\r\n            tableData += \"<p>\";\r\n            keys.map((k) => {\r\n                if (k !== 'undefined' && k !== '(unresolved)') {\r\n                    tableData += k;\r\n                    tableData += \" : \";\r\n                    tableData += item[k];\r\n                    tableData += \" <br> \";\r\n                }\r\n            });\r\n            tableData += \"</p>\";\r\n            let linkTitle = item[\"TAG NUMBER\"] ? item[\"TAG NUMBER\"] : item[\"Tag Number\"];\r\n            let tagHdl = item['Handle'] ? item['Handle'] : '';\r\n            const link = `<a href='https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${tagHdl}' target='_blank'> ${linkTitle} <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>`;\r\n            let decriptionContent = `<div class='description-wrapper'><div class='header'></div><div class=\"content\">${link}${tableData}</div></div>`\r\n\r\n            //form gMapData\r\n            gMapData.push({\r\n                \"lat\": Number(item[latKey]),\r\n                \"lng\": Number(item[longKey]),\r\n                \"ref_or_fix\": \"fix\",\r\n                \"desc\": decriptionContent\r\n            });\r\n\r\n            item['description'] = decriptionContent;\r\n        });\r\n\r\n        setLat(data[0][latKey]);\r\n        setLng(data[0][longKey]);\r\n        setGoogleMapData(gMapData);\r\n        setData(dataToSet);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const fetchSelectedLiveViewData = () => {\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=${selectedLiveViewName}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData != null) {\r\n                    formData(responseData);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsLoading(false);\r\n                console.log('fetchSelectedLiveViewData error --------->', error)\r\n                alert(error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showData) {\r\n            if (showMapBox) {\r\n                show_mapBox();\r\n            }\r\n            else {\r\n                //initialize map\r\n                window.InitializeMap(googleMapData);\r\n            }\r\n        }\r\n        else if (data != undefined && data.length > 0) {\r\n            //initialize map\r\n            window.InitializeMap(googleMapData);\r\n        }\r\n    }, [showMapBox, showData, data]);\r\n\r\n    const submitTagNumber = () => {\r\n        setShowcommonLogo(false);\r\n        //reset default value \r\n        setIsError(false);\r\n        setShowData(false);\r\n\r\n        //validation\r\n        if (inputTag !== null && inputTag.length > 0) {\r\n            setIsLoading(true)\r\n            let arrData = [];\r\n            let counter = 0;\r\n            var splitedValue = inputTag.split(\",\").map((item) => {\r\n                return item.trim();\r\n            });\r\n            setArrSplittedValue(splitedValue);\r\n            splitedValue.map((id) => {\r\n                let url = \"https://\" + localStorage.getItem(\"prefixUrl\") + \".pim360.io/api/objects/TAGGED_ITEM/id/\" + id;\r\n                let token = localStorage.getItem(\"b_token\");\r\n                fetch(url, {\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: token,\r\n                    }\r\n                }).then(response => {\r\n                    var responseValue = response.json();\r\n                    return responseValue;\r\n                }).then(responseData => {\r\n                    if (responseData.attrs !== undefined && responseData.attrs !== null) {\r\n                        arrData.push(responseData);\r\n                    }\r\n                    counter += 1;\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                        let arrNameValue = [];\r\n                        arrData.map((item) => {\r\n                            let arrkeys = Object.keys(item.attrs)\r\n                            let obj = {};\r\n                            arrkeys.map((key) => {\r\n                                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                                return '';\r\n                            })\r\n                            arrNameValue.push(obj);\r\n                            return '';\r\n                        });\r\n                        formDataTagNumber(arrNameValue, arrData)\r\n                        return\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"error -------->\" + error);\r\n                    counter += 1\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                        setShowcommonLogo(true);\r\n                        setCommonMsg('Something went wrong. Please try again')\r\n                    }\r\n                })\r\n                return '';\r\n            })\r\n        }\r\n        else {\r\n            setIsError(true);\r\n        }\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key) => {\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                return '';\r\n            })\r\n            arrNameValue.push(obj);\r\n            return '';\r\n        });\r\n        console.log(\"arrNameValue ------->\", JSON.stringify(arrNameValue))\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        return <div className=\"flex my-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 && (arrNameValue[0].hasOwnProperty(\"Latitude\") || arrNameValue[0].hasOwnProperty(\"LATITUDE\") || arrNameValue[0].hasOwnProperty(\"Approved Latitude\")) ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        {/* <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                            }}\r\n                            center={{\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 18 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                    lat={parseFloat(nameValue.hasOwnProperty(\"Latitude\") ? nameValue[\"Latitude\"] : (nameValue.hasOwnProperty(\"LATITUDE\") ? nameValue[\"LATITUDE\"] : (nameValue.hasOwnProperty(\"Approved Latitude\") ? nameValue[\"Approved Latitude\"] : 0)))}\r\n                                    lng={parseFloat(nameValue.hasOwnProperty(\"Longitude\") ? nameValue[\"Longitude\"] : (nameValue.hasOwnProperty(\"LONGITUDE\") ? nameValue[\"LONGITUDE\"] : (nameValue.hasOwnProperty(\"Approved Longitude\") ? nameValue[\"Approved Longitude\"] : 0)))}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact> */}\r\n                        <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={index} uuid=\"attributes\">\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        &emsp;\r\n                                        {arrSplittedValue[index]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel>\r\n                                    <table class=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key) => {\r\n                                                return <tr>\r\n                                                    <td class=\"border px-4 py-2\">{key}</td>\r\n                                                    <td class=\"border px-4 py-2\">{item[key]}</td>\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    const handleLiveViewSubmit = () => {\r\n        setShowcommonLogo(false);\r\n        setData([]);\r\n        if (selectedLiveViewName != '') {\r\n            doAuth();\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        //remove all local storage\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div id=\"searchContainer\">\r\n            {/* <NavBar showLogoutButton={true} showSearch={false}></NavBar> */}\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <div class=\"header-nav\">\r\n                <div className=\"flex items-center flex-shrink-0 text-black mr-6 cursor-pointer\" onClick={() => window.location.reload()}>\r\n                    <img alt=\"Logo\" className=\"w-1/2\" src={Logo}></img>\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                        LiveView\r\n                    </label>\r\n                    <div className=\"inline-block relative w-1/1\">\r\n                        <select\r\n                            class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                            onChange={(e) => {\r\n                                var textVal = e.target.options[e.target.selectedIndex].text;\r\n                                // doAuth(textVal, e.target.value);\r\n                                setselectedLiveViewName(textVal);\r\n                                setselectedLiveViewHdl(e.target.value);\r\n                            }}>\r\n                            <option value=\"\">Select</option>\r\n                            {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                                return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n                            }) : \"\"\r\n                            }\r\n                        </select>\r\n                        <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inline-block ml-5\">\r\n                        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                            onClick={() => { handleLiveViewSubmit() }}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"inline-block\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Tag Number\r\n                        </label>\r\n                        <input className={isError ? errInputClass : inputClass} value={inputTag}\r\n                            id=\"tagNumber\" type=\"text\" placeholder=\"Enter your tag number\" onChange={(e) => setInputTag(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"inline-block ml-5\">\r\n                        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                            onClick={() => { submitTagNumber() }}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"inline-block ml-5\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            &emsp;\r\n                        </label>\r\n                        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                            onClick={() => { logout() }}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                    {/* {isError ? <p className=\"text-red-500 pl-2 text-xs pt-1\">Tag name is required </p> : \"\"} */}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"liveView-container\">\r\n                <div className=\"w-full\">\r\n                    {showData &&\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n                            </div>\r\n                            <div className=\"m-4\">\r\n                                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => setShowMapBox(false)}>Google Map</button>\r\n                                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n                            </div>\r\n                            {showMapBox &&\r\n                                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                            }\r\n                            {!showMapBox ? <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div> : \"\"}\r\n                        </div>\r\n                    }\r\n                    {data !== undefined && data.length > 0 &&\r\n                        <div>\r\n                            {showAttr()}\r\n                        </div>\r\n                    }\r\n                    {showcommonLogo && (\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} alt='' width={300} src={search} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">{commonMsg}</p>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveViewAndTag;","import React, { useEffect } from 'react';\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction Poc(props) {\r\n    useEffect(() => {\r\n        var tasks = [\r\n            {\r\n                \"startDate\": 2885, \"endDate\": 3293, \"taskName\": \"Hexo\", \"status\": \"KILLED\", \"attrs\": [\r\n                    {\r\n                        \"name\": \"Wear\",\r\n                        \"value\": \"here\",\r\n                    },\r\n                    {\r\n                        \"name\": \"ABC\",\r\n                        \"value\": \"XYZ\",\r\n                    }\r\n                ]\r\n            },\r\n            { \"startDate\": 4333, \"endDate\": 4453, \"taskName\": \"Fixed\", \"status\": \"RUNNING\", \"tootl\": \"hello2\" },\r\n            { \"startDate\": 7025, \"endDate\": 9280, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\", \"tootl\": \"hello3\" },\r\n            // { \"startDate\": 94, \"endDate\": 194, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\" },\r\n            // { \"startDate\": 1000, \"endDate\": 1100, \"taskName\": \"Fixed\", \"status\": \"RUNNING\" },\r\n            // { \"startDate\": 2000, \"endDate\": 2100, \"taskName\": \"Fixed\", \"status\": \"RUNNING\" },\r\n            // { \"startDate\": 3200, \"endDate\": 3300, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\" },\r\n        ];\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n\r\n        var taskNames = [\"Hexo\", \"Fixed\", \"Reference\"];\r\n\r\n        tasks.sort(function (a, b) {\r\n            return a.endDate - b.endDate;\r\n        });\r\n        var maxDate = tasks[tasks.length - 1].endDate;\r\n        tasks.sort(function (a, b) {\r\n            return a.startDate - b.startDate;\r\n        });\r\n        var minDate = tasks[0].startDate;\r\n\r\n\r\n        var format = \"%H:%M\";\r\n\r\n        // gantt 1\r\n        var gantt1 = window.d3.gantt(\"new-gantt\", tasks).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(tasks);\r\n\r\n\r\n        //gantt2\r\n        var tasks2 = [\r\n            { \"startDate\": 35, \"endDate\": 45, \"taskName\": \"DS - Inner Rail Wear\", \"status\": \"RUNNING\", \"wear\": \"<0.5km\" },\r\n            { \"startDate\": 40, \"endDate\": 50, \"taskName\": \"DS - Outer Rail Wear\", \"status\": \"SUCCEEDED\", \"wear\": \"<0.1km\" },\r\n            { \"startDate\": 75, \"endDate\": 85, \"taskName\": \"DS - Speed Restriction\", \"status\": \"FAILED\", \"wear\": \"<10km\" },\r\n            { \"startDate\": 100, \"endDate\": 110, \"taskName\": \"DS - Vertical Clearance Limitation\", \"status\": \"RUNNING\", \"wear\": \"<3km\" },\r\n            { \"startDate\": 120, \"endDate\": 130, \"taskName\": \"DS - Vertical Clearance Limitation\", \"status\": \"KILLED\", \"wear\": \"<5km\" },\r\n        ];\r\n\r\n\r\n        var taskNames2 = [\"DS - Inner Rail Wear\", \"DS - Outer Rail Wear\", \"DS - Speed Restriction\", \"DS - Vertical Clearance Limitation\"];\r\n\r\n        tasks2.sort(function (a, b) {\r\n            return a.endDate - b.endDate;\r\n        });\r\n\r\n\r\n        // gantt 2\r\n        var gantt2 = window.d3.gantt(\"new-gantt2\", tasks2).taskTypes(taskNames2).taskStatus(taskStatus).tickFormat(format);\r\n        gantt2(tasks2);\r\n\r\n        // // for map\r\n        window.InitializeMap([{ \"lat\": 21.2379446999999998979546944610774517059326171875, \"lng\": 72.77922780000000102518242783844470977783203125 }, { \"lat\": 21.237881200000000347927198163233697414398193359375, \"lng\": 72.77926089999999703650246374309062957763671875 }, { \"lat\": 21.23800320000000141362761496566236019134521484375, \"lng\": 72.779213999999996076439856551587581634521484375 }, { \"lat\": 21.23816790000000054305928642861545085906982421875, \"lng\": 72.7788641000000069425368565134704113006591796875 }]);\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true}></NavBar>\r\n            <br></br>\r\n            {/* <!-- // just for styling purpoe --> */}\r\n            <svg style={{ height: 0, position: \"absolute\" }}>\r\n                <defs>\r\n                    <linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#fd3c3c\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#dc281e\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"green\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#7bdb06\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#36ac00\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"blue\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#00c6ff\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#0072ff\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#fe8c00\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#f83600\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n\r\n            <h3>Gantt 1</h3>\r\n            <div id=\"new-gantt\" style={{ height: \"130px\", width: \"1000px\" }}></div>\r\n            <h3>Gantt 2</h3>\r\n            <div id=\"new-gantt2\" style={{ height: \"200px\", width: \"1000px\" }}></div>\r\n\r\n            <br></br>\r\n\r\n            <h3>Map</h3>\r\n            <br></br>\r\n            <div id=\"dvMap\" style={{ height: \"500px\", width: \"35%\" }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Poc;","import React from 'react';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport LiveView from './screens/LiveView';\r\nimport LiveToMap from './screens/LiveToMap';\r\nimport LiveToShape from './screens/LiveToShape';\r\nimport LiveToShape_v2 from './screens/LiveToShape_v2';\r\nimport LiveViewWithTable from \"./screens/LiveViewWithTable\";\r\nimport LiveViewToLink from \"./screens/LiveViewToLink\";\r\nimport esriMapPOC from './screens/ESRIMapPOC';\r\nimport LinearAsset from \"./screens/LinearAsset\";\r\nimport LiveViewAndTag from \"./screens/LiveViewAndTag\";\r\nimport Poc from './screens/Poc';\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path=\"/\" component={LoginScreen} />\r\n        <Route exact path=\"/home\" component={HomeScreen} />\r\n        <Route exact path=\"/liveView\" component={LiveView} />\r\n        <Route exact path=\"/poc\" component={Poc} />\r\n        <Route exact path=\"/linearAsset\" component={LinearAsset} />\r\n        <Route exact path=\"/liveview2map\" component={LiveToMap} />\r\n        <Route exact path=\"/l2sv1\" component={LiveToShape} />\r\n        <Route exact path=\"/l2sv2\" component={LiveToShape_v2} />\r\n        <Route exact path=\"/esriMapPOC\" component={esriMapPOC} />\r\n        <Route exact path=\"/liveView_Table\" component={LiveViewWithTable} />\r\n        <Route exact path=\"/liveview2link\" component={LiveViewToLink} />\r\n        <Route exact path=\"/search\" component={LiveViewAndTag} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/map.a856e094.svg\";","module.exports = __webpack_public_path__ + \"static/media/noDataAttribute.cb61ac4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_search.03be6e84.png\";","module.exports = __webpack_public_path__ + \"static/media/gantt_chat.dd2288fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/bug.9062dc5c.svg\";"],"sourceRoot":""}