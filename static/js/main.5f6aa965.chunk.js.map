{"version":3,"sources":["components/NavBar.js","api/api.js","screens/LoginScreen.js","utils/KML_GEN.js","screens/HomeScreen.js","components/Modal.js","screens/LiveView.js","screens/LiveToMap.js","screens/ESRIMapPOC.js","screens/LiveToShape.js","screens/Poc.js","screens/LinearAsset.js","App.js","serviceWorker.js","index.js","assests/map.svg","assests/search.svg","assests/gantt_chat.svg","assests/noDataAttribute.svg","assests/bug.svg"],"names":["NavBar","props","history","useHistory","className","alt","src","viewBox","xmlns","d","showSearch","id","type","name","placeholder","defaultValue","onClick","e","document","getElementById","value","onClickSearch","xmlnsXlink","version","x","y","style","enableBackground","xmlSpace","width","height","showLogoutButton","push","localStorage","clear","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","axios","require","defaults","timeout","Api","loginDetails","user","pass","attrGroups","this","getToken","contextFields","getAttributeGroups","console","log","p","searchObject","pp","objectAssociations","data","hdl","assocs","generateDataMapEQ","dataMap","objectType","route_length","fixedFields","retData","plaCount","Number","items","assoc","objectByHdl","Hdl","ta","taClass","helperAttrByName","attrs","from_route_chainage","to_route_chainage","attribute_name","attribute_value","attribute_uom","ds_flag","localMap","assocId","class_name","refObj","stylePlace","styleWidth","indexOf","laMap","fixed","ref","it","routeChainage","objId","route_chainage","route_chainage_uom","uom","sort","a","b","searchTerm","ppp","searchObjectWithAttr","pppp","generateDataMap","dataMapRef","routeInfo","route_uom","from_node","to_node","dd","dataMapEq","index","length","JSON","stringify","attrName","key","hasOwnProperty","element","username","password","prefixUrl","request","url","method","baseURL","auth","then","res","headers","common","access_token","query","contextCache","getRequest","assocTo","searchCxt","body","ID","CLASS","DESCRIPTION","postRequest","qReq","resulturl","attrValue","LoginScren","useState","userName","setUserName","setPassword","setPrefixUrl","isUserNameError","setIsUserNameError","isPassError","setIsPassError","isUrlError","setIsUrlError","isError","setisError","errMsg","setErrMsg","isLoading","setIsLoading","inputClass","errInputClass","htmlFor","onChange","target","undefined","setItem","response","token_type","catch","KML_GEN","geoList","inputArray","forEach","i","Object","keys","val","newKey","replace","newKML","map","item","new_html_for_description","j","join","newItem","xml","formatted","lines","split","indent","lastType","transitions","ln","match","single","Boolean","closing","opening","fromTo","padding","substr","formatXml","OBJtoXML","obj","prop","Array","array","AnyReactComponent","text","HomeScreen","setIsError","inputTag","setInputTag","setData","arrSplittedValue","setArrSplittedValue","arrData","counter","splitedValue","trim","getItem","token","fetch","Accept","Authorization","json","responseData","error","submitTagNumber","display","preventDefault","pre_kml_data","parse","file","File","Date","saveAs","class","features","geometry","properties","arrNameValue","arrkeys","bootstrapURLKeys","options","mapTypeControl","defaultCenter","lat","parseFloat","lng","center","distanceToMouse","defaultZoom","nameValue","draggable","allowZeroExpanded","preExpanded","uuid","stroke-width","stroke-linecap","stroke-linejoin","showAttr","Modal","eicData","setEicData","deliverablesData","setDeliverablesData","ensData","setEnsData","sourceData","setSourceData","domainData","setDomainData","finalObj","setFinalObj","selectClass","lableClass","clsToken","baseUrl","cls_baseUrl","classification","useEffect","getEICList","onClickCancel","filteredList","rows","keyToGetValue","filter","getDeliverables","eic","deliverable_keys","Deliverables","filter_list","deliverables_list","getTimeLine","tempObj","authCls","getClsToken","getDomains","domain_List","Name","getSourceNames","source_List","getEnsNames","ens_List","params","object_type","eic_handle","deliverable","source_handle","ens_name","aria-hidden","role","aria-modal","aria-labelledby","for","LiveView","arrLiveView","setarrLiveView","showData","setShowData","arrTagNumber","setArrTagNumber","selectedLiveViewHdl","setselectedLiveViewHdl","isContentEditable","setisContentEditable","editedAttr","seteditedAttr","showModal","setshowModal","fetchLiveView","getResultUrl","createQueryBody","Data","conditions","fields","getFinalResult","finalResult","arrFirstObjKeys","arrModifiedData","arrTagNumberData","queryResult","pageSize","page","hasmore","liveView","selectedLiveView","selectedHdl","fetchSelectedLiveViewData","selectedTag","getAttributes","tag","href","onError","mapTypeId","Latitude","onChangeAttributeValue","search","mapboxgl","accessToken","LiveToMap","selectedLiveViewName","setselectedLiveViewName","showMapBox","setShowMapBox","boxMapData","setBoxMapData","googleMapData","setGoogleMapData","mapContainerRef","useRef","setLng","setLat","zoom","formData","gMapData","tableData","k","coordinates","description","myHeaders","Headers","redirect","alert","Map","container","addControl","NavigationControl","on","loadImage","image","addImage","addSource","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","layout","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","slice","mag","tsunami","Math","abs","lngLat","getCanvas","cursor","Popup","setLngLat","setHTML","addTo","window","InitializeMap","doAuth","selectedIndex","fileReader","FileReader","readAsText","files","onload","result","EsriMapPOC","setSource","LiveToShape","selectedType","setSelectedType","random","floor","esriData","setEsriData","esriCenterData","setEsriCenterData","mapBoxData","esriMapBoxData","btoa","textVal","updateEsriMapData","Poc","tasks","taskStatus","endDate","startDate","d3","gantt","taskTypes","tickFormat","gantt1","tasks2","gantt2","position","offset","stopColor","stopOpacity","LinearAsset","ganttData","setGanttData","setAss_ganttData","attributeData","setAttributeData","documentData","setdocumentData","isAttrLoading","setIsAttrLoading","isGanntHaveData","setIsGanntHaveData","isAssociateGanntHaveData","setIsAssociateGanntHaveData","isMapError","setIsMapError","generateGanttData","LaMap","mapdata","fixed_obj","lastObj","pointsToAdd","parseInt","values","toLowerCase","ref_obj","onClickGanttItem","clickedObj","associativeData","ClsName","link","Url","myMap","setZoom","panTo","generateAssociateData","AssociativeData","issueKeys","Issue","issue_obj","Type","valueKeys","Value","value_obj","taskNames","keyword","searchKey","getRouteObj","minHeight","chat","noDataAttribute","bug","App","exact","path","component","LoginScreen","esriMapPOC","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5f6aa965.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = props => {\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        //remove all local storage\r\n        localStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    const onClickSearch = () => {\r\n        if(document.getElementById(\"search\").value != \"\"){\r\n            //pass value in props\r\n            props.onClickSearch(document.getElementById(\"search\").value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex items-center justify-between flex-wrap bg-purple-900  p-6\">\r\n            <div className=\"flex items-center flex-shrink-0 text-black mr-6\">\r\n                <img alt=\"Logo\" className=\"w-1/2\" src=\"https://www.datum360.com/assets/img/logo.png\"></img>\r\n            </div>\r\n            <div className=\"block lg:hidden\">\r\n                <button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n                    <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n                <div className=\"text-sm lg:flex-grow\">\r\n                </div>\r\n                    <div className={props.showSearch ? \"relative mx-auto text-gray-600 mr-3\" : \"hidden\"}> \r\n                        <input id=\"search\" className=\"border-2 bg-gray-300 bg-white h-10 px-5 pr-10 rounded-lg text-sm focus:outline-none\" \r\n                            type=\"search\" name=\"search\" placeholder=\"Enter you tag to search\" \r\n                            defaultValue=\"\"\r\n                        />\r\n                        <button type=\"submit\" className=\"absolute right-0 top-0 mt-5 mr-4 r-5px t-n7px focus:outline-none\" \r\n                            onClick={(e)=> onClickSearch(e)}\r\n                        >\r\n                        <svg className=\"text-gray-600 h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 56.966 56.966\" style={{enableBackground: 'new 0 0 56.966 56.966'}} xmlSpace=\"preserve\" width=\"512px\" height=\"512px\">\r\n                            <path d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\" />\r\n                        </svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/home\")}>\r\n                        <span>Home</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/linearAsset\")}>\r\n                        <span>Linear Asset</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveView\")}>\r\n                        <span>Live View</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveview2map\")}>\r\n                        <span>LiveView to map</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mr-3\" onClick={() => history.push(\"/liveview2shape\")}>\r\n                        <span>Liveview to Linestring / Polygon</span>\r\n                    </button>\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\" onClick={() => logout()}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-log-out\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line></svg>\r\n                        <span>Logout</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","\r\nconst axios = require('axios');\r\naxios.defaults.timeout = 10000;\r\nexport default class Api {\r\n\r\n    loginDetails = { user: '', pass: '' };\r\n\r\n    attrGroups = {};\r\n\r\n    static async warmUp() {\r\n        await this.getToken();\r\n        await this.contextFields('TAGGED_ITEM');\r\n        this.attrGroups = await this.getAttributeGroups();\r\n    }\r\n\r\n    static setUserPass(user, pass) {\r\n        this.loginDetails = { user: user, pass: pass };\r\n    }\r\n\r\n    static async login() {\r\n        console.log(\"inside login --------->\")\r\n        var p = await this.getToken();\r\n        console.log(p);\r\n\r\n        var pp = await this.searchObject(\"TAGGED_ITEM\", 'Route B to C');\r\n        var assocs = await this.objectAssociations('TAGGED_ITEM', pp.data[0].hdl, \"EQUIPMENT_ITEM\");\r\n        var dd = await this.generateDataMapEQ(assocs, 'TAGGED_ITEM');\r\n\r\n        // var pp = await this.searchObject(\"TAGGED_ITEM\", 'Route B to C');\r\n        // var ppp = await this.objectByHdl('TAGGED_ITEM', pp.data[0].hdl);\r\n\r\n        // var routeInfo = {\r\n        //     route_length: this.helperAttrByName(ppp.attrs, 'Length').value,\r\n        //     route_uom: this.helperAttrByName(ppp.attrs, 'Length').uom,\r\n        //     from_node: this.helperAttrByName(ppp.attrs, 'From Reference Node').value,\r\n        //     to_node: this.helperAttrByName(ppp.attrs, 'To Reference Node').value,\r\n        // }\r\n\r\n        // var pppp = await this.searchObjectWithAttr('TAGGED_ITEM', 'Route', 'Route B To C');\r\n        // await this.generateDataMap(pppp, 'TAGGED_ITEM');\r\n\r\n        console.log('done');\r\n        // var pp = await x.getRequest(\"api/context/fields/TAGGED_ITEM\");\r\n        // console.log(pp.ID);\r\n    }\r\n\r\n    static async generateDataMapEQ(dataMap, objectType, route_length) {\r\n        console.log(\"inside generateDataMapEQ ---------> dataMap \"+ dataMap + \" route_length \" + route_length)\r\n\r\n        let fixedFields = ['Issue', 'Value'];\r\n        let retData = {};\r\n\r\n\r\n        let plaCount = 100 / Number(route_length);\r\n\r\n        for (const assoc of dataMap.items) {\r\n\r\n            let ta = await this.objectByHdl(\"EQUIPMENT_ITEM\", assoc.Hdl);\r\n\r\n            let taClass = this.helperAttrByName(ta.attrs, 'Class Name').value;\r\n            let from_route_chainage = this.helperAttrByName(ta.attrs, 'From Route Chainage');\r\n            let to_route_chainage = this.helperAttrByName(ta.attrs, 'To Route Chainage');\r\n            let attribute_name = this.helperAttrByName(ta.attrs, 'Linear Asset Attribute Name').value;\r\n            let attribute_value = this.helperAttrByName(ta.attrs, 'Linear Asset Attribute Value').value;\r\n            let attribute_uom = this.helperAttrByName(ta.attrs, 'Linear Asset Value UoM').value;\r\n            let ds_flag = this.helperAttrByName(ta.attrs, 'DS Flag').value;\r\n\r\n            let localMap = {\r\n                assocId: assoc.id,\r\n                from_route_chainage: Number(from_route_chainage.value),\r\n                to_route_chainage: Number(to_route_chainage.value),\r\n                class_name: taClass,\r\n                attribute_name: attribute_name,\r\n                attribute_value: attribute_value,\r\n                attribute_uom: attribute_uom,\r\n                ds_flag: ds_flag,\r\n                refObj: assoc\r\n            };\r\n\r\n            localMap.stylePlace = plaCount * localMap.from_route_chainage;\r\n            localMap.styleWidth = (plaCount * localMap.to_route_chainage) - localMap.stylePlace;\r\n\r\n\r\n            if (fixedFields.indexOf(ds_flag) != -1) {\r\n                if (!retData[localMap.ds_flag])\r\n                    retData[localMap.ds_flag] = {};\r\n\r\n                if (!retData[localMap.ds_flag][localMap.class_name])\r\n                    retData[localMap.ds_flag][localMap.class_name] = [];\r\n\r\n                retData[localMap.ds_flag][localMap.class_name].push(localMap);\r\n            }\r\n\r\n        }\r\n\r\n        //retData = retData.sort((a, b) => (a.class_name > b.class_name) ? 1 : -1);\r\n\r\n        return retData;\r\n    }\r\n\r\n\r\n    static async generateDataMap(dataMap, objectType) {\r\n        console.log(\"inside generateDataMap ---------> dataMap \"+ dataMap + \" objectType \" + objectType)\r\n\r\n        let laMap = {\r\n            fixed: [],\r\n            ref: []\r\n        };\r\n\r\n        for (const it of dataMap.data) {\r\n            let fixedFields = ['Isolator', 'AST Booster', 'Section Insulator'];\r\n\r\n            let ta = await this.objectByHdl(objectType, it.hdl);\r\n            let taClass = this.helperAttrByName(ta.attrs, 'Class Name').value;\r\n            let routeChainage = this.helperAttrByName(ta.attrs, 'Route Chainage');\r\n            if (routeChainage) {\r\n                let localMap = {\r\n                    objId: it.objId,\r\n                    class_name: taClass,\r\n                    route_chainage: Number(routeChainage.value),\r\n                    route_chainage_uom: routeChainage.uom,\r\n                    hdl: it.hdl,\r\n                    refObj: ta\r\n                };\r\n\r\n                if (fixedFields.indexOf(taClass) != -1)\r\n                    laMap.fixed.push(localMap);\r\n                else\r\n                    laMap.ref.push(localMap);\r\n            }\r\n        }\r\n\r\n        laMap.fixed = laMap.fixed.sort((a, b) => (a.route_chainage > b.route_chainage) ? 1 : -1);\r\n        laMap.ref = laMap.ref.sort((a, b) => (a.route_chainage > b.route_chainage) ? 1 : -1);\r\n        // console.log(\"laMap --------------> \" + JSON.stringify(laMap));\r\n        // console.log(laMap);\r\n        return laMap;\r\n        //working\r\n    }\r\n\r\n    static async getRouteObj(searchTerm) {\r\n        console.log(\"inside getRouteObj --------> searchTerm \"+searchTerm)\r\n        // var p = await this.getToken();//this is really bad practise as generate datamap could be proper async\r\n        var pp = await this.searchObject(\"TAGGED_ITEM\", searchTerm);\r\n        var ppp = await this.objectByHdl('TAGGED_ITEM', pp.data[0].hdl);\r\n        var pppp = await this.searchObjectWithAttr('TAGGED_ITEM', 'Route', searchTerm);\r\n        var dataMapRef = await this.generateDataMap(pppp, 'TAGGED_ITEM');\r\n        var assocs = await this.objectAssociations('TAGGED_ITEM', pp.data[0].hdl, \"EQUIPMENT_ITEM\");\r\n\r\n        var routeInfo = {\r\n            route_length: Number(this.helperAttrByName(ppp.attrs, 'Length').value),\r\n            route_uom: this.helperAttrByName(ppp.attrs, 'Length').uom,\r\n            from_node: this.helperAttrByName(ppp.attrs, 'From Reference Node').value,\r\n            to_node: this.helperAttrByName(ppp.attrs, 'To Reference Node').value,\r\n            dataMap: dataMapRef\r\n        }\r\n\r\n        let plaCount = 100 / Number(routeInfo.route_length);\r\n\r\n        var dd = await this.generateDataMapEQ(assocs, 'TAGGED_ITEM', routeInfo.route_length);\r\n        routeInfo.dataMapEq = dd;\r\n\r\n        for (let index = 0; index < routeInfo.dataMap.fixed.length; index++) {\r\n            routeInfo.dataMap.fixed[index].stylePlace = plaCount * routeInfo.dataMap.fixed[index].route_chainage;\r\n        }\r\n\r\n        for (let index = 0; index < routeInfo.dataMap.ref.length; index++) {\r\n            routeInfo.dataMap.ref[index].stylePlace = plaCount * routeInfo.dataMap.ref[index].route_chainage;\r\n        }\r\n        console.log(\"routeInfo  ------------> \"+JSON.stringify(routeInfo))\r\n        // console.log(routeInfo)\r\n        return routeInfo;\r\n    }\r\n\r\n    static helperAttrByName(attrs, attrName) {\r\n        //this entire function can be replaced by 1 or two lines TS/ES6\r\n        for (const key in attrs) {\r\n            if (attrs.hasOwnProperty(key)) {\r\n                const element = attrs[key];\r\n                if (element.name == attrName)\r\n                    return element;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static async getToken(username, password, prefixUrl) {\r\n        return axios.request({\r\n            url: \"/oauth2/token\",\r\n            method: \"post\",\r\n            baseURL: \"https://\" + prefixUrl + \".acl360.io\",\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            data: {\r\n                \"grant_type\": \"client_credentials\",\r\n                \"service_url\": \"https://\" + prefixUrl + \".pim360.io/\"\r\n            }\r\n        }).then(function (res) {\r\n            axios.defaults.headers.common = { 'Authorization': \"Bearer \" + res.data.access_token }\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static async getClsToken(username, password, prefixUrl) {\r\n        return axios.request({\r\n            url: \"/oauth2/token\",\r\n            method: \"post\",\r\n            baseURL: \"https://\" + prefixUrl + \".acl360.io\",\r\n            auth: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            data: {\r\n                \"grant_type\": \"client_credentials\",\r\n                \"service_url\": \"https://\" + prefixUrl + \".cls360.io/\"\r\n            }\r\n        }).then(function (res) {\r\n            axios.defaults.headers.common = { 'Authorization': \"Bearer \" + res.data.access_token }\r\n            return res;\r\n        });\r\n    }\r\n\r\n    static async getRequest(url) {\r\n        return axios.request({\r\n            url: url,\r\n            method: \"get\",\r\n            baseURL: \"https://mim.pim360.io/\",\r\n        }).then(function (res) {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    static async postRequest(url, query) {\r\n        return axios.request({\r\n            url: url,\r\n            method: \"post\",\r\n            baseURL: \"https://mim.pim360.io/\",\r\n            data: query\r\n        }).then(function (res) {\r\n            console.log(\"res ---------\", res)\r\n            return res.data;\r\n        })\r\n    }\r\n\r\n\r\n    static async contextFields(objectType) {\r\n        console.log(\"inside contextFields ------------> \"+objectType);\r\n        console.log(this.contextCache);\r\n        if (!this.contextCache)\r\n            this.contextCache = {};\r\n\r\n        if (!this.contextCache[objectType]) {\r\n            this.contextCache[objectType] = await this.getRequest('api/context/fields/' + objectType);\r\n        }\r\n\r\n        return this.contextCache[objectType];\r\n    }\r\n\r\n    static async objectByHdl(objectType, hdl) {\r\n        console.log(\"inside objectByHdl ---------> objectType  \" + objectType + \" hdl \" + hdl)\r\n\r\n        return this.getRequest(`api/objects/${objectType}/${hdl}`);\r\n    }\r\n\r\n    static async getAttributeGroups() {\r\n        return this.getRequest(`api/objects/attributegroups`);\r\n    }\r\n\r\n    static async objectAssociations(objectType, hdl, assocTo) {\r\n        return this.getRequest(`api/associations?type=${objectType}&hdl=${hdl}&assoc=${assocTo}&skip=0`);\r\n    }\r\n\r\n    static async searchObject(objectType, searchTerm) {\r\n        let searchCxt = await this.contextFields(objectType);\r\n\r\n        let body = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": {\r\n                \"logical\": \"AND\",\r\n                \"items\": [\r\n                    {\r\n                        \"handle\": searchCxt.ID.Hdl,\r\n                        \"operator\": \"$regex-l\",\r\n                        \"value\": searchTerm,\r\n                        \"caseSensitive\": false,\r\n                        \"excludeUoM\": false,\r\n                        \"regex\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"fields\": [\r\n                searchCxt.ID.Hdl,\r\n                searchCxt.CLASS.Hdl,\r\n                searchCxt.DESCRIPTION.Hdl\r\n            ]\r\n        };\r\n\r\n        let qReq = await this.postRequest('api/queries', body);\r\n\r\n        return this.getRequest(`api${qReq.resulturl}`);\r\n    }\r\n\r\n    static async searchObjectWithAttr(objectType, attrName, attrValue) {\r\n        console.log(\"inside searchObjectWithAttr ----------> objectType \"+objectType + \" attrName \" + attrName + \" attrValue \" + attrValue)\r\n        let searchCxtR = await this.contextFields(attrName);\r\n        let searchCxt = await this.contextFields(objectType);\r\n\r\n        let body = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": {\r\n                \"logical\": \"AND\",\r\n                \"items\": [\r\n                    {\r\n                        \"operator\": \"$regex-l\",\r\n                        \"value\": attrValue,\r\n                        \"handle\": \"TMiQuiViT1OEjp8uEeLy_Q\",\r\n                        \"caseSensitive\": false,\r\n                        \"excludeUoM\": false,\r\n                        \"regex\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"fields\": [\r\n                searchCxt.ID.Hdl,\r\n                searchCxt.CLASS.Hdl,\r\n                searchCxt.DESCRIPTION.Hdl\r\n            ]\r\n        };\r\n\r\n        let qReq = await this.postRequest('api/queries', body);\r\n\r\n        return this.getRequest(`api${qReq.resulturl}`);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/NavBar'\r\nimport Api from \"../api/api\";\r\n\r\n\r\nfunction LoginScren(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  // const [count, setCount] = useState(0);\r\n  const history = useHistory();\r\n  // const [userName, setUserName] = useState(\"ranjithdinakaran\");\r\n  // const [password, setPassword] = useState(\"Drk_13232104\");\r\n  // const [prefixUrl, setPrefixUrl] = useState(\"d-lab-2020\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [prefixUrl, setPrefixUrl] = useState(\"\");\r\n  const [isUserNameError, setIsUserNameError] = useState(false);\r\n  const [isPassError, setIsPassError] = useState(false);\r\n  const [isUrlError, setIsUrlError] = useState(false);\r\n  const [isError, setisError] = useState();\r\n  const [errMsg, setErrMsg] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:border-purple-900\";\r\n  const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none border-red-500\";\r\n\r\n\r\n  const doLogin = () => {\r\n    setIsLoading(true);\r\n    //reset error value\r\n    setisError(false);\r\n    setIsUserNameError(false);\r\n    setIsPassError(false);\r\n    setIsUrlError(false);\r\n    setErrMsg(\"\");\r\n\r\n    // validation\r\n    if (userName !== undefined && userName.length > 0 && password.length > 0 && prefixUrl.length > 0) {\r\n      //setting prefix url to localstorage\r\n      localStorage.setItem(\"prefixUrl\", prefixUrl);\r\n      //setting userName to localstorage\r\n      localStorage.setItem(\"userName\", userName);\r\n      //setting password to localstorage\r\n      localStorage.setItem(\"password\", password);\r\n      Api.getToken(userName, password, prefixUrl).then((response) => {\r\n        if (response.data.access_token != \"\") {\r\n          setIsLoading(false);\r\n          //set token in local storage\r\n          localStorage.setItem(\"b_token\", response.data.token_type + \" \" + response.data.access_token);\r\n          history.push('/home');\r\n        };\r\n      }).catch((e)=>{\r\n        //setting common error\r\n        setisError(true);\r\n        setErrMsg(\"Something went wrong!!!\");\r\n        setIsLoading(false);\r\n      })\r\n    }\r\n    else {\r\n      //setting userName error \r\n      if (userName.length == 0) {\r\n        setIsUserNameError(true);\r\n      }\r\n      //setting password error \r\n      if (password.length == 0) {\r\n        setIsPassError(true);\r\n      }\r\n      //setting userName error \r\n      if (prefixUrl.length == 0) {\r\n        setIsUrlError(true);\r\n      }\r\n      //setting common error\r\n      setisError(true);\r\n      setErrMsg(\"Please fill all the fields\");\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar showLogoutButton={false}></NavBar>\r\n      {isLoading ?\r\n        <div className=\"popUpContainer\">\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n        : \"\"}\r\n      <div className=\"w-full max-w-sm login-container mt-5\">\r\n        <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Username\r\n          </label>\r\n            <input className={isUserNameError ? errInputClass : inputClass}\r\n              id=\"username\" type=\"text\" value={userName} placeholder=\"Enter your username\" onChange={(e) => setUserName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              Password\r\n          </label>\r\n            <input className={isPassError ? errInputClass : inputClass} value={password}\r\n              id=\"password\" type=\"password\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n              Prefix URL\r\n          </label>\r\n            <input className={isUrlError ? errInputClass : inputClass} value={prefixUrl}\r\n              id=\"prefixUrl\" type=\"text\" placeholder=\"Enter your prefix url\" onChange={(e) => setPrefixUrl(e.target.value)}\r\n            />\r\n            <span className=\"text-gray-700 text-xs\">Note: Its is 1st portion of your domain name (also known as subdomain), or its called as scope of pim360.</span>\r\n          </div>\r\n          <p className=\"text-center text-red-500\">{isError ? errMsg : \"\"}</p>\r\n          <div className=\"flex\">\r\n            <button className=\"mt-3 bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-auto\" type=\"button\"\r\n              onClick={() => { doLogin() }}>\r\n              Proceed\r\n      </button>\r\n          </div>\r\n        </form>\r\n        <br>\r\n        </br>\r\n        <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScren;","// KML Generator\\\r\nexport const KML_GEN = (geoList, inputArray) => {\r\n    var latlngToDms = require('latlng-to-dms');\r\n\r\n    function toDegreesMinutesAndSeconds(coordinate) {\r\n        var absolute = Math.abs(coordinate);\r\n        var degrees = Math.floor(absolute);\r\n        var minutesNotTruncated = (absolute - degrees) * 60;\r\n        var minutes = Math.floor(minutesNotTruncated);\r\n        var seconds = Math.floor((minutesNotTruncated - minutes) * 60);\r\n    \r\n        return degrees + \"° \" + minutes + \"' \" + seconds + `''`;\r\n    }\r\n\r\n    if (geoList) {\r\n        if (geoList.length > 0) {\r\n            // remove space with _\r\n            geoList.forEach(function (e, i) {\r\n                // Iterate over the keys of object\r\n                Object.keys(e).forEach(function (key) {\r\n\r\n                    // Copy the value\r\n                    var val = e[key],\r\n                        newKey = key.replace(/\\s+/g, '_');\r\n\r\n                    // Remove key-value from object\r\n                    delete geoList[i][key];\r\n\r\n                    // Add value with new key\r\n                    geoList[i][newKey] = val;\r\n                });\r\n            });\r\n\r\n            // custom json to ready for xml json\r\n            let newKML = [];\r\n            if (geoList.length > 0) {\r\n                geoList.map((item, index) => {\r\n                    let new_html_for_description = Object.keys(item).map((j) => {\r\n                        return \"<div>\" + j + \" - \" + item[j] + \"<br></div>\";\r\n                    }).join('')\r\n\r\n                    let newItem = {\r\n                        \"Placemark\": {\r\n                            \"name\": inputArray[index],\r\n                            \"description\": `<![CDATA[${new_html_for_description}]]>`,\r\n                            \"Point\": {\r\n                                \"coordinates\": `${item[\"Longitude\"]},${item[\"Latitude\"]}`\r\n                                // \"coordinates\": latlngToDms(`${item[\"Latitude\"]}, ${item[\"Longitude\"]}`)\r\n                                // \"coordinates\": `${toDegreesMinutesAndSeconds(item[\"Latitude\"])} ${item[\"Latitude\"] > 0 ? \"N\" : \"S\"}, ${toDegreesMinutesAndSeconds(item[\"Longitude\"])} ${item[\"Longitude\"] > 0 ? \"E\" : \"W\"}`\r\n                            }\r\n                        }\r\n                    };\r\n                    newKML.push(newItem)\r\n                })\r\n            }\r\n\r\n            // object to xml\r\n            function OBJtoXML(obj) {\r\n                var xml = '';\r\n                for (var prop in obj) {\r\n                    xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\r\n                    if (obj[prop] instanceof Array) {\r\n                        for (var array in obj[prop]) {\r\n                            xml += \"<\" + prop + \">\";\r\n                            xml += OBJtoXML(new Object(obj[prop][array]));\r\n                            xml += \"</\" + prop + \">\";\r\n                        }\r\n                    } else if (typeof obj[prop] == \"object\") {\r\n                        xml += OBJtoXML(new Object(obj[prop]));\r\n                    } else {\r\n                        xml += obj[prop];\r\n                    }\r\n                    xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\r\n                }\r\n                var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\r\n                return xml\r\n            }\r\n\r\n            // formatXml\r\n            function formatXml (xml) {\r\n                var reg = /(>)\\s*(<)(\\/*)/g; // updated Mar 30, 2015\r\n                var wsexp = / *(.*) +\\n/g;\r\n                var contexp = /(<.+>)(.+\\n)/g;\r\n                xml = xml.replace(reg, '$1\\n$2$3').replace(wsexp, '$1\\n').replace(contexp, '$1\\n$2');\r\n                var pad = 0;\r\n                var formatted = '';\r\n                var lines = xml.split('\\n');\r\n                var indent = 0;\r\n                var lastType = 'other';\r\n                // 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions \r\n                var transitions = {\r\n                    'single->single': 0,\r\n                    'single->closing': -1,\r\n                    'single->opening': 0,\r\n                    'single->other': 0,\r\n                    'closing->single': 0,\r\n                    'closing->closing': -1,\r\n                    'closing->opening': 0,\r\n                    'closing->other': 0,\r\n                    'opening->single': 1,\r\n                    'opening->closing': 0,\r\n                    'opening->opening': 1,\r\n                    'opening->other': 1,\r\n                    'other->single': 0,\r\n                    'other->closing': -1,\r\n                    'other->opening': 0,\r\n                    'other->other': 0\r\n                };\r\n\r\n                for (var i = 0; i < lines.length; i++) {\r\n                    var ln = lines[i];\r\n\r\n                    // Luca Viggiani 2017-07-03: handle optional <?xml ... ?> declaration\r\n                    if (ln.match(/\\s*<\\?xml/)) {\r\n                        formatted += ln + \"\\n\";\r\n                        continue;\r\n                    }\r\n                    // ---\r\n\r\n                    var single = Boolean(ln.match(/<.+\\/>/)); // is this line a single tag? ex. <br />\r\n                    var closing = Boolean(ln.match(/<\\/.+>/)); // is this a closing tag? ex. </a>\r\n                    var opening = Boolean(ln.match(/<[^!].*>/)); // is this even a tag (that's not <!something>)\r\n                    var type = single ? 'single' : closing ? 'closing' : opening ? 'opening' : 'other';\r\n                    var fromTo = lastType + '->' + type;\r\n                    lastType = type;\r\n                    var padding = '';\r\n\r\n                    indent += transitions[fromTo];\r\n                    for (var j = 0; j < indent; j++) {\r\n                        padding += '\\t';\r\n                    }\r\n                    if (fromTo == 'opening->closing')\r\n                        formatted = formatted.substr(0, formatted.length - 1) + ln + '\\n'; // substr removes line break (\\n) from prev loop\r\n                    else\r\n                        formatted += padding + ln + '\\n';\r\n                }\r\n\r\n                return formatted;\r\n            };\r\n\r\n            // final processing\r\n            let beforeKML = OBJtoXML(newKML)\r\n            const responseMessage = `<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\"><Document id=\"1\">` + beforeKML + `</Document></kml>`;\r\n\r\n            return formatXml(responseMessage);\r\n        } else {\r\n            return \"\";\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { FileSaver, saveAs } from 'file-saver';\r\nimport { KML_GEN } from '../utils/KML_GEN'\r\nimport NavBar from '../components/NavBar'\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\n\r\nconst HomeScreen = props => {\r\n    const inputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\r\n    const errInputClass = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\";\r\n    const [isError, setIsError] = useState();\r\n    const [inputTag, setInputTag] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n\r\n    const submitTagNumber = () => {\r\n        //reset default value \r\n        setIsError(false);\r\n\r\n        //validation\r\n        if (inputTag !== null && inputTag.length > 0) {\r\n            setIsLoading(true)\r\n            let arrData = [];\r\n            let counter = 0;\r\n            var splitedValue = inputTag.split(\",\").map((item) => {\r\n                return item.trim();\r\n            });\r\n            setArrSplittedValue(splitedValue);\r\n            splitedValue.map((id) => {\r\n                let url = \"https://\" + localStorage.getItem(\"prefixUrl\") + \".pim360.io/api/objects/TAGGED_ITEM/id/\" + id;\r\n                let token = localStorage.getItem(\"b_token\");\r\n                fetch(url, {\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        Authorization: token,\r\n                    }\r\n                }).then(response => {\r\n                    var responseValue = response.json();\r\n                    return responseValue;\r\n                }).then(responseData => {\r\n                    if (responseData.attrs !== undefined && responseData.attrs !== null) {\r\n                        arrData.push(responseData);\r\n                    }\r\n                    else {\r\n                        console.log(responseData);\r\n                    }\r\n                    counter += 1;\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                        setData(arrData);\r\n                        return\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"error -------->\" + error);\r\n                    counter += 1\r\n                    if (counter === splitedValue.length) {\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n                return '';\r\n            })\r\n        }\r\n        else {\r\n            setIsError(true);\r\n            console.log(\"show error\");\r\n        }\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key) => {\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n                return '';\r\n            })\r\n            arrNameValue.push(obj);\r\n            return '';\r\n        });\r\n        console.log(\"arrNameValue ------->\", arrNameValue)\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        // console.log(JSON.stringify(arrNameValue))\r\n        // console.log(arrSplittedValue);\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 && (arrNameValue[0].hasOwnProperty(\"Latitude\") || arrNameValue[0].hasOwnProperty(\"LATITUDE\") || arrNameValue[0].hasOwnProperty(\"Approved Latitude\")) ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                                // lat: parseFloat(arrNameValue[0][\"Latitude\"]),\r\n                                // lng: parseFloat(arrNameValue[0][\"Longitude\"])\r\n                            }}\r\n                            center={{\r\n                                // lat: parseFloat(arrNameValue[0][\"Latitude\"]),\r\n                                // lng: parseFloat(arrNameValue[0][\"Longitude\"])\r\n                                lat: parseFloat(arrNameValue[0].hasOwnProperty(\"Latitude\") ? arrNameValue[0][\"Latitude\"] : (arrNameValue[0].hasOwnProperty(\"LATITUDE\") ? arrNameValue[0][\"LATITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ? arrNameValue[0][\"Approved Latitude\"] : 0))),\r\n                                lng: parseFloat(arrNameValue[0].hasOwnProperty(\"Longitude\") ? arrNameValue[0][\"Longitude\"] : (arrNameValue[0].hasOwnProperty(\"LONGITUDE\") ? arrNameValue[0][\"LONGITUDE\"] : (arrNameValue[0].hasOwnProperty(\"Approved Longitude\") ? arrNameValue[0][\"Approved Longitude\"] : 0))),\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 6 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                lat={parseFloat(nameValue.hasOwnProperty(\"Latitude\") ? nameValue[\"Latitude\"] : (nameValue.hasOwnProperty(\"LATITUDE\") ? nameValue[\"LATITUDE\"] : (nameValue.hasOwnProperty(\"Approved Latitude\") ? nameValue[\"Approved Latitude\"] : 0)))}\r\n                                lng={parseFloat(nameValue.hasOwnProperty(\"Longitude\") ? nameValue[\"Longitude\"] : (nameValue.hasOwnProperty(\"LONGITUDE\") ? nameValue[\"LONGITUDE\"] : (nameValue.hasOwnProperty(\"Approved Longitude\") ? nameValue[\"Approved Longitude\"] : 0)))}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={index} uuid=\"attributes\">\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                        &emsp;\r\n                                        {arrSplittedValue[index]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel>\r\n                                    <table class=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key) => {\r\n                                                return <tr>\r\n                                                    <td class=\"border px-4 py-2\">{key}</td>\r\n                                                    <td class=\"border px-4 py-2\">{item[key]}</td>\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar showLogoutButton={true}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"}\r\n            <div className=\"p-10\">\r\n                <div className=\"w-full max-w\">\r\n                    <form className=\"bg-white rounded pt-6 pb-8 mb-4\">\r\n                        <div>\r\n                            <div className=\"inline-block\">\r\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                    Tag Number\r\n                            </label>\r\n                                <input className={isError ? errInputClass : inputClass} value={inputTag}\r\n                                    id=\"tagNumber\" type=\"text\" placeholder=\"Enter your tag number\" onChange={(e) => setInputTag(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\">\r\n                                <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none m-auto\" type=\"button\"\r\n                                    onClick={() => { submitTagNumber() }}\r\n                                >\r\n                                    Submit\r\n                             </button>\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\" style={{ display: data.length > 0 ? \"\" : \"none\" }}>\r\n                                <button onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    // console.log()\r\n                                    let pre_kml_data = JSON.parse(localStorage.getItem('pre_kml_data'))\r\n                                    let inputArray = JSON.parse(localStorage.getItem('inputsArray'))\r\n                                    var file = new File([`${KML_GEN(pre_kml_data, inputArray)}`], `${new Date()}.kml`, { type: \"text/xml;charset=utf-8\" });\r\n                                    saveAs(file);\r\n                                }} class=\"bg-purple-800 hover:bg-purple-900 text-white  py-2 px-4 rounded inline-flex items-center\">\r\n                                    <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\r\n                                    <span>Download KML</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"inline-block ml-5\" style={{ display: data.length > 0 ? \"\" : \"none\" }}>\r\n                                <button onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    let pre_kml_data = JSON.parse(localStorage.getItem('pre_kml_data'))\r\n                                    let json = { type: 'FeatureCollection', features: [] };\r\n                                    let temp = pre_kml_data.map((i) => {\r\n                                        json.features.push({\r\n                                            type: 'Feature',\r\n                                            geometry: {\r\n                                                type: 'Point',\r\n                                                // coordinates: [parseFloat(i.Longitude), parseFloat(i.Latitude)],\r\n                                            },\r\n                                            properties: i,\r\n                                        });\r\n                                    });\r\n                                    var file = new File([`${JSON.stringify(json)}`], `${new Date()}.json`, { type: \"application/json;charset=utf-8\" });\r\n                                    saveAs(file);\r\n                                }} class=\"bg-purple-800 hover:bg-purple-900 text-white  py-2 px-4 rounded inline-flex items-center\">\r\n                                    <svg class=\"fill-current w-4 h-4 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z\" /></svg>\r\n                                    <span>Download JSON</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        {isError ? <p className=\"text-red-500 pl-2 text-xs pt-1\">Tag name is required </p> : \"\"}\r\n                    </form>\r\n                </div>\r\n                {data !== undefined && data.length > 0 &&\r\n                    <div>\r\n                        {showAttr()}\r\n                    </div>\r\n                }\r\n                <p className=\"text-center\">&copy; Datum360 Limited</p>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HomeScreen;","import React, { useEffect, useState } from 'react';\r\nimport Api from \"../api/api\";\r\n\r\nconst Modal = (props) => {\r\n    const [eicData, setEicData] = useState([]);\r\n    const [deliverablesData, setDeliverablesData] = useState([]);\r\n    const [ensData, setEnsData] = useState([]);\r\n    const [sourceData, setSourceData] = useState([]);\r\n    const [domainData, setDomainData] = useState([]);\r\n    const [finalObj, setFinalObj] = useState({\r\n        \"hdl\": \"\",\r\n        \"status\": \"PENDING\",\r\n        \"params\": {\r\n            \"eic_handle\": \"\",\r\n            \"manifest_name\": \"\",\r\n            \"inputfile\": \"\",\r\n            \"worksheets\": \"\",\r\n            \"object_type\": \"\",\r\n            \"deliverable\": \"\",\r\n            \"source_handle\": \"\",\r\n            \"classification\": \"\",\r\n            \"ens_name\": \"\",\r\n            \"terminate_attributes\": \"ignore\"\r\n        }\r\n    }\r\n    );\r\n    const selectClass = \"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\";\r\n    const lableClass = \"block text-sm font-medium text-gray-700\";\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let clsToken = localStorage.getItem(\"b_token_cls\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let cls_baseUrl = `https://${prefixUrl}.cls360.io/api`;\r\n    const objectType = [\r\n        { value: \"TAGGED_ITEM\", name: \"Tagged Item\" },\r\n        { value: \"EQUIPMENT_ITEM\", name: \"Equipment Item\" },\r\n        { value: \"EQUIPMENT_MODEL\", name: \"Equipment Model\" },\r\n        { value: \"DOCUMENT\", name: \"Document\" }\r\n    ];\r\n    const classification = [\r\n        { value: \"cls\", name: \"CLASS\" },\r\n        { value: \"ens\", name: \"ENS\" }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getEICList();\r\n    }, []);\r\n\r\n    const onClickCancel = () => {\r\n        if (props.onClickCancel) {\r\n            props.onClickCancel();\r\n        };\r\n    };\r\n\r\n    const getEICList = () => {\r\n        console.log('inside getEICList ---------->')\r\n        let url = `${baseUrl}/eic/list`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let eic_List = responseData.rows.map((item) => {\r\n                    let keyToGetValue = Object.keys(item)[4];\r\n                    if (item[keyToGetValue] != undefined) {\r\n                        return { \"name\": item[keyToGetValue], \"value\": item.id }\r\n                    }\r\n                    else {\r\n                        return null\r\n                    }\r\n                });\r\n                let filteredList = eic_List.filter(item => item != null);\r\n                // console.log('filteredList -------', JSON.stringify(filteredList))\r\n                setEicData(filteredList)\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getEICList error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getDeliverables = (eic) => {\r\n        console.log('inside getDeliverables ---------->');\r\n        let url = `${baseUrl}/eic/${eic}/deliverables`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                // console.log('getDeliverables   -------->', JSON.stringify(responseData));\r\n                let deliverable_keys = Object.keys(responseData.Deliverables)\r\n                if (deliverable_keys.length != null && deliverable_keys.length > 0) {\r\n                    let filter_list = deliverable_keys.filter(e => e != \"length\");\r\n                    let deliverables_list = [];\r\n                    filter_list.map((filter) => {\r\n                        responseData.Deliverables[filter].map(({ ID, Hdl }) => {\r\n                            deliverables_list.push({ \"name\": ID, \"value\": Hdl });\r\n                        });\r\n                    });\r\n                    setDeliverablesData(deliverables_list);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getDeliverables error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getTimeLine = () => {\r\n        console.log('inside getTimeLine ---------->');\r\n        let url = `${baseUrl}/timeline?categories=IMPORT&offset=0&limit=200`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let tempObj = { ...finalObj };\r\n                tempObj.hdl = responseData[0].Hdl;\r\n                setFinalObj(tempObj);\r\n                onClickCancel();\r\n                console.log('final obj --------', JSON.stringify(tempObj));\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getTimeLine error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const authCls = () => {\r\n        console.log('inside authCls -------------> ')\r\n        Api.getClsToken(userName, password, prefixUrl).then((response) => {\r\n            if (response.data.access_token != \"\") {\r\n                //set token in local storage\r\n                localStorage.setItem(\"b_token_cls\", response.data.token_type + \" \" + response.data.access_token);\r\n                clsToken = localStorage.getItem(\"b_token_cls\");\r\n                getDomains();\r\n            };\r\n        }).catch((e) => {\r\n            //setting common error\r\n            console.log('authCls error-------> ');\r\n        });\r\n    };\r\n\r\n    const getDomains = () => {\r\n        console.log('inside getDomains ---------->');\r\n        let url = `${cls_baseUrl}/domains?pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let domain_List = responseData.value.map(({ Name, Hdl }) => {\r\n                    return { \"name\": Name, \"value\": Hdl };\r\n                })\r\n                setDomainData(domain_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getDomains error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getSourceNames = (hdl) => {\r\n        console.log('inside getSourceNames ---------->');\r\n        let url = `${cls_baseUrl}/domains/${hdl}/classes?filter=%5BObject%20Type%5D%20cnt%20Source&pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let source_List = responseData.value.map(({ Name, Hdl }) => {\r\n                    return { \"name\": Name, \"value\": Hdl }\r\n                })\r\n                setSourceData(source_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getSourceNames error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    const getEnsNames = (hdl) => {\r\n        console.log('inside getEnsNames ---------->');\r\n        let url = `${cls_baseUrl}/domains/${hdl}/classes?filter=%5BObject%20Type%5D%20cnt%20Numbering&pageSize=200&page=0`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: clsToken,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                let ens_List = responseData.value.map(({ Name }) => {\r\n                    return { \"name\": Name, \"value\": Name }\r\n                })\r\n                setEnsData(ens_List);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getEnsNames error -------->\" + error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"none\" }} className=\"modal-container\">\r\n                <div className=\"modal\">\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Object Type\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.object_type = e.target.value\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Object Type</option>\r\n                            {objectType.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Classification\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.classification = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Classification</option>\r\n                            {classification.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            EIC\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.eic_handle = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                                getDeliverables(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Eic</option>\r\n                            {eicData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Deliverables\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.deliverable = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                                authCls();\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {deliverablesData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Domains\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                getSourceNames(e.target.value);\r\n                                getEnsNames(e.target.value);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {domainData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            Source Name\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.source_handle = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Source</option>\r\n                            {sourceData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <label className=\"label inline-block mr-3 w-1/4\">\r\n                            ENS Name\r\n                        </label>\r\n                        <select className=\"select inline-block w-2/4\"\r\n                            onChange={(e) => {\r\n                                let tempObj = { ...finalObj };\r\n                                tempObj.params.ens_name = e.target.value;\r\n                                setFinalObj(tempObj);\r\n                            }}\r\n                        >\r\n                            <option value=\"\">Select Deliverables</option>\r\n                            {ensData.map((eic) => {\r\n                                return <option value={eic.value}>{eic.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"x-icon\" onClick={() => onClickCancel()}>\r\n                        X\r\n                    </button>\r\n                    <div>\r\n                        <button className=\"mr-3\" onClick={() => onClickCancel()}>\r\n                            Cancel\r\n                    </button>\r\n                        <button className=\"\" onClick={() => getTimeLine()}>\r\n                            Submit\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"fixed z-10 inset-0 overflow-y-auto\">\r\n                <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n                    <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n                        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n                    </div>\r\n                    <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n                    <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n                        <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                            <div className=\"mt-3\">\r\n                                <label for=\"objectType\" className={lableClass}>Object Type</label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.object_type = e.target.value\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Object Type</option>\r\n                                    {objectType.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Classification\r\n                                </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.classification = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Classification</option>\r\n                                    {classification.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    EIC\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.eic_handle = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                        getDeliverables(e.target.value)\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Eic</option>\r\n                                    {eicData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Deliverables\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.deliverable = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                        authCls();\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {deliverablesData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Domains\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        getSourceNames(e.target.value);\r\n                                        getEnsNames(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {domainData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    Source Name\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.source_handle = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Source</option>\r\n                                    {sourceData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className={lableClass}>\r\n                                    ENS Name\r\n                        </label>\r\n                                <select className={selectClass}\r\n                                    onChange={(e) => {\r\n                                        let tempObj = { ...finalObj };\r\n                                        tempObj.params.ens_name = e.target.value;\r\n                                        setFinalObj(tempObj);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Select Deliverables</option>\r\n                                    {ensData.map((eic) => {\r\n                                        return <option value={eic.value}>{eic.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                            <button onClick={() => getTimeLine()} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-900 text-base font-medium text-white hover:bg-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                                Submit\r\n                            </button>\r\n                            <button onClick={() => onClickCancel()} type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Modal from '../components/Modal';\r\nimport Upload from \"../components/Upload\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport map from \"../assests/map.svg\";\r\nconst axios = require('axios');\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\n\r\nfunction LiveView(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isError, setIsError] = useState();\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [arrSplittedValue, setArrSplittedValue] = useState([]);\r\n    const [showData, setShowData] = useState(false);\r\n    const [arrTagNumber, setArrTagNumber] = useState([]);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [isContentEditable, setisContentEditable] = useState(false);\r\n    const [editedAttr, seteditedAttr] = useState({});\r\n    const [showModal, setshowModal] = useState(false);\r\n    \r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let arrData = [];\r\n\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (e, selectedLiveView, selectedHdl) => {\r\n        setselectedLiveViewHdl(selectedLiveView);\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews/${selectedHdl}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(response => {\r\n            if (response !== undefined && response !== null) {\r\n                getResultUrl(response);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"fetchSelectedLiveViewData error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const getResultUrl = (response) => {\r\n        let createQueryBody = {\r\n            \"type\": \"TAGGED_ITEM\",\r\n            \"eic\": \"\",\r\n            \"filter\": response.Data.conditions,\r\n            \"fields\": response.Data.fields\r\n        };\r\n        let url = `${baseUrl}/queries`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(createQueryBody),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                return getFinalResult(data.resulturl).then((finalResult) => {\r\n                    setIsLoading(false);\r\n                    let arrFirstObjKeys = Object.keys(finalResult[0]).filter(e => typeof finalResult[0][e] == 'object')\r\n                    let arrModifiedData = [];\r\n                    let arrTagNumberData = [];\r\n                    finalResult.map((item) => {\r\n                        let obj = {};\r\n                        arrFirstObjKeys.map((key) => {\r\n                            if (item[key].name == \"Tag Number\" || item[key].name == \"TAG NUMBER\") {\r\n                                arrTagNumberData.push(item[key].value);\r\n                            }\r\n                            obj[item[key].name] = item[key].value;\r\n                        });\r\n                        arrModifiedData.push(obj);\r\n                    });\r\n                    if (arrModifiedData.length > 0) {\r\n                        if (arrModifiedData[0].hasOwnProperty(\"Tag Number\") || arrModifiedData[0].hasOwnProperty(\"TAG NUMBER\")) {\r\n                            if (arrTagNumberData.length > 0) {\r\n                                setArrTagNumber(arrTagNumberData);\r\n                            }\r\n                            setShowData(true);\r\n                        }\r\n                        else {\r\n                            //finish process and show no data found\r\n                            setShowData(true)\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const getFinalResult = (queryResult, pageSize = 200, page = 0) => {\r\n        let url = `${baseUrl}${queryResult}?limit=${pageSize}&skip=${page}`\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        return Api.getRequest(url).then((response) => {\r\n            arrData.push(...response.data);\r\n            if (response.hasmore) {\r\n                return getFinalResult(queryResult, pageSize, (arrData.length / pageSize) * 200)\r\n            } else {\r\n                setIsLoading(false);\r\n                return arrData;\r\n            }\r\n        });\r\n    }\r\n\r\n    const getAttributes = (selectedTag) => {\r\n        let url = `${baseUrl}/objects/TAGGED_ITEM/id/${selectedTag}`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            setData(responseData);\r\n        }).catch(error => {\r\n            setIsLoading(false);\r\n            console.log(\"getAttributes error -------->\" + error);\r\n        })\r\n    }\r\n\r\n    const onChangeAttributeValue = (value, key) => {\r\n        // console.log('value -------->', value);\r\n        // console.log('key -------->', key);\r\n        let obj = {...editedAttr};\r\n        obj[key] = value;\r\n        seteditedAttr(obj);\r\n        console.log('obj --------', JSON.stringify(obj));\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        let arrkeys = Object.keys(data.attrs)\r\n        let obj = {};\r\n        arrkeys.map((key) => {\r\n            obj[data.attrs[key].name] = data.attrs[key].value;\r\n            return '';\r\n        })\r\n        arrNameValue.push(obj);\r\n        localStorage.setItem('pre_kml_data', JSON.stringify(arrNameValue))\r\n        localStorage.setItem('inputsArray', JSON.stringify(arrSplittedValue))\r\n        return <div className=\"flex mb-4\">\r\n            <div className=\"w-1/2 m-h-500px p-5\">\r\n                {arrNameValue.length > 0 && arrNameValue[0].hasOwnProperty(\"Approved Longitude\") && arrNameValue[0].hasOwnProperty(\"Approved Latitude\") ?\r\n                    <div className=\"w-full h-full shadow-lg\">\r\n                        <a target=\"_blank\" href={`https://earth.google.com/web/search/Arsenal+fc/@${parseFloat(arrNameValue[0][\"Approved Latitude\"])},${parseFloat(arrNameValue[0][\"Approved Longitude\"])},9.09858867a,612.98636056d,35y,-40.1316669h,45.00000069t,0`}>Click here for Google Earth</a>\r\n                        <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: \"AIzaSyDNeF0TGdzD6PN696-ZWgdP7z9ltW0l1QY\" }}\r\n                            options={() => {\r\n                                return {\r\n                                    mapTypeControl: true,\r\n                                    mapTypeId: \"satellite\"\r\n                                }\r\n                            }}\r\n                            defaultCenter={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            center={{\r\n                                lat: parseFloat(arrNameValue[0][\"Approved Latitude\"]),\r\n                                lng: parseFloat(arrNameValue[0][\"Approved Longitude\"])\r\n                            }}\r\n                            distanceToMouse={() => { }}\r\n                            defaultZoom={arrNameValue ? 18 : 6}\r\n                        >\r\n                            {arrNameValue.map((nameValue) => {\r\n                                return <AnyReactComponent\r\n                                    lat={nameValue[\"Approved Latitude\"]}\r\n                                    lng={nameValue[\"Approved Longitude\"]}\r\n                                />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    : <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"w-1/2 m-h-500px\">\r\n                <div className=\"max-w rounded w-full shadow  p-5\">\r\n                    <div>\r\n                        {!isContentEditable \r\n                            ? \r\n                                <button className=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={()=>setisContentEditable(true)}>\r\n                                    Edit\r\n                                </button>\r\n                            : \r\n                                <div>\r\n                                     <button className=\"bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3\" onClick={()=> setisContentEditable(false)}>\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button className=\"inline-flex justify-center py-2 px-3 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-900 hover:bg-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={()=> setshowModal(true)}>\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <p className=\"text-xl font-bold mb-3\">Attributes</p>\r\n                    <Accordion className=\"border-0\" allowZeroExpanded preExpanded={[\"attributes\"]}>\r\n                        {arrNameValue.map((item, index) => {\r\n                            return <AccordionItem className=\"shadow-md mb-3\" key={item.Latitude} uuid=\"attributes\">\r\n                                <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                    <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                        &emsp;\r\n                                        {arrNameValue[index].hasOwnProperty(\"Tag Number\") ? arrNameValue[index][\"Tag Number\"] : arrNameValue[index][\"TAG NUMBER\"]}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel className=\"liveView-item-container\">\r\n                                    <table class=\"table-auto w-full\">\r\n                                        <tbody>\r\n                                            {Object.keys(item).map((key) => {\r\n                                                return <tr>\r\n                                                    <td class=\"border px-4 py-2\">{key}</td>\r\n                                                    {!isContentEditable \r\n                                                    ? \r\n                                                        <td class=\"border px-4 py-2\">{item[key]}</td>\r\n                                                    : \r\n                                                        <td class=\"border px-4 py-2\">\r\n                                                            <input onChange={(e)=> onChangeAttributeValue(e.target.value, key)} defaultValue={item[key]}></input>\r\n                                                        </td>\r\n                                                    }\r\n                                                    \r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        })}\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            {showModal ? <Modal onClickCancel={()=> {setshowModal(false)}} /> : \"\" }\r\n            <div id=\"liveView-container\">\r\n                <div className=\"sideBar bg-purple-900\">\r\n                    {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                        return (<div>\r\n                            <button\r\n                                onClick={(e) => fetchSelectedLiveViewData(e, liveView.Name, liveView.Hdl)}\r\n                                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex my-2 justify-center w-full\">\r\n                                {liveView.Name}\r\n                            </button>\r\n                        </div>)\r\n                    }) : \"\"}\r\n                </div>\r\n                <div className=\"liveView-wrapper\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewHdl}</p>\r\n                            </div>\r\n                            {arrTagNumber.length > 0 &&\r\n                                <div className=\"m-4 mt-0\">\r\n                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                                        Tag Number\r\n                                    </label>\r\n                                    <div className=\"inline-block relative w-1/4\">\r\n                                        <select\r\n                                            class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                                            onChange={(e) => {\r\n                                                getAttributes(e.target.value)\r\n                                            }}>\r\n                                            <option value=\"\">Select</option>\r\n                                            {\r\n                                                arrTagNumber.map((tag) => {\r\n                                                    return <option value={tag}>{tag}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                        <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"inline-block relative w-1/4 ml-3\">\r\n                                        {\r\n                                            data !== undefined && Object.keys(data).length > 0 ?\r\n                                                <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/object/TAGGED_ITEM/${data.hdl}`}>\r\n                                                    <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n                                                        \r\n                                                        e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                                                        // e.src = \"hello.png\"\r\n                                                    }} />\r\n                                                </a>\r\n                                                : ''\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                            }\r\n                            {data !== undefined && Object.keys(data).length > 0 &&\r\n                                <div>\r\n                                    {showAttr()}\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveView;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport map from \"../assests/map.svg\";\r\nimport Upload from \"../components/Upload\";\r\nimport mapboxgl from 'mapbox-gl';\r\n// mapboxgl.accessToken =\r\n//   'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\nconst axios = require('axios');\r\n\r\nfunction LiveToMap(props) {\r\n  const [arrLiveView, setarrLiveView] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showData, setShowData] = useState(false);\r\n  const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n  const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n  const [showMapBox, setShowMapBox] = useState(false);\r\n  const [boxMapData, setBoxMapData] = useState({});\r\n  const [googleMapData, setGoogleMapData] = useState([]);\r\n  //map states\r\n  const mapContainerRef = useRef(null);\r\n  const [lng, setLng] = useState(5);\r\n  const [lat, setLat] = useState(34);\r\n  const [zoom, setZoom] = useState(5);\r\n  let map = null;\r\n  //local storage values\r\n  let token = localStorage.getItem(\"b_token\");\r\n  let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n  let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n  let userName = localStorage.getItem(\"userName\");\r\n  let password = localStorage.getItem(\"password\");\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n    fetchLiveView();\r\n  }, []);\r\n\r\n  const show_mapBox = () => {\r\n    map = new mapboxgl.Map({\r\n      container: \"map-container\",\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n    map.on('load', function () {\r\n      // Add an image to use as a custom marker\r\n      map.loadImage(\r\n        'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n        function (error, image) {\r\n          if (error) throw error;\r\n          map.addImage('custom-marker', image);\r\n          // console.log('boxMapData --------', JSON.stringify(boxMapData))\r\n          // Add a GeoJSON source with 2 points\r\n          map.addSource('points', {\r\n            'type': 'geojson',\r\n            'data': boxMapData,\r\n            cluster: true,\r\n            clusterMaxZoom: 14, // Max zoom to cluster points on\r\n            clusterRadius: 50 // Radius of each cluster when clustering points (defaults to 50)\r\n          });\r\n\r\n          // Add a symbol layer\r\n          map.addLayer({\r\n            'id': 'points',\r\n            'type': 'symbol',\r\n            'source': 'points',\r\n            'layout': {\r\n              'icon-image': 'custom-marker',\r\n              // get the title name from the source's \"title\" property\r\n              'text-field': ['get', 'title'],\r\n              'text-font': [\r\n                'Open Sans Semibold',\r\n                'Arial Unicode MS Bold'\r\n              ],\r\n              'text-offset': [0, 1.25],\r\n              'text-anchor': 'top'\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'clusters',\r\n            type: 'circle',\r\n            source: 'points',\r\n            filter: ['has', 'point_count'],\r\n            paint: {\r\n              // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n              // with three steps to implement three types of circles:\r\n              //   * Blue, 20px circles when point count is less than 100\r\n              //   * Yellow, 30px circles when point count is between 100 and 750\r\n              //   * Pink, 40px circles when point count is greater than or equal to 750\r\n              'circle-color': [\r\n                'step',\r\n                ['get', 'point_count'],\r\n                '#51bbd6',\r\n                100,\r\n                '#f1f075',\r\n                750,\r\n                '#f28cb1'\r\n              ],\r\n              'circle-radius': [\r\n                'step',\r\n                ['get', 'point_count'],\r\n                20,\r\n                100,\r\n                30,\r\n                750,\r\n                40\r\n              ]\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'cluster-count',\r\n            type: 'symbol',\r\n            source: 'points',\r\n            filter: ['has', 'point_count'],\r\n            layout: {\r\n              'text-field': '{point_count_abbreviated}',\r\n              'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n              'text-size': 12\r\n            }\r\n          });\r\n\r\n          map.addLayer({\r\n            id: 'unclustered-point',\r\n            type: 'circle',\r\n            source: 'points',\r\n            filter: ['!', ['has', 'point_count']],\r\n            paint: {\r\n              'circle-color': '#11b4da',\r\n              'circle-radius': 4,\r\n              'circle-stroke-width': 1,\r\n              'circle-stroke-color': '#fff'\r\n            }\r\n          });\r\n\r\n          // inspect a cluster on click\r\n          map.on('click', 'clusters', function (e) {\r\n            var features = map.queryRenderedFeatures(e.point, {\r\n              layers: ['clusters']\r\n            });\r\n            var clusterId = features[0].properties.cluster_id;\r\n            map.getSource('points').getClusterExpansionZoom(\r\n              clusterId,\r\n              function (err, zoom) {\r\n                if (err) return;\r\n\r\n                map.easeTo({\r\n                  center: features[0].geometry.coordinates,\r\n                  zoom: zoom\r\n                });\r\n              }\r\n            );\r\n          });\r\n\r\n          // When a click event occurs on a feature in\r\n          // the unclustered-point layer, open a popup at\r\n          // the location of the feature, with\r\n          // description HTML from its properties.\r\n          map.on('click', 'unclustered-point', function (e) {\r\n            var coordinates = e.features[0].geometry.coordinates.slice();\r\n            var mag = e.features[0].properties.mag;\r\n            var tsunami;\r\n\r\n            if (e.features[0].properties.tsunami === 1) {\r\n              tsunami = 'yes';\r\n            } else {\r\n              tsunami = 'no';\r\n            }\r\n\r\n            // Ensure that if the map is zoomed out such that\r\n            // multiple copies of the feature are visible, the\r\n            // popup appears over the copy being pointed to.\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n\r\n            // new mapboxgl.Popup()\r\n            //   .setLngLat(coordinates)\r\n            //   .setHTML(\r\n            //     'magnitude: ' + mag + '<br>Was there a tsunami?: ' + tsunami\r\n            //   )\r\n            //   .addTo(map);\r\n          });\r\n\r\n          map.on('mouseenter', 'clusters', function () {\r\n            map.getCanvas().style.cursor = 'pointer';\r\n          });\r\n          map.on('mouseleave', 'clusters', function () {\r\n            map.getCanvas().style.cursor = '';\r\n          });\r\n\r\n          // When a click event occurs on a feature in the places layer, open a popup at the\r\n          // location of the feature, with description HTML from its properties.\r\n          map.on('click', 'points', function (e) {\r\n            var coordinates = e.features[0].geometry.coordinates.slice();\r\n            var description = e.features[0].properties.description;\r\n\r\n            // Ensure that if the map is zoomed out such that multiple\r\n            // copies of the feature are visible, the popup appears\r\n            // over the copy being pointed to.\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n\r\n            new mapboxgl.Popup()\r\n              .setLngLat(coordinates)\r\n              .setHTML(description)\r\n              .addTo(map);\r\n          });\r\n\r\n          // Change the cursor to a pointer when the mouse is over the places layer.\r\n          map.on('mouseenter', 'places', function () {\r\n            map.getCanvas().style.cursor = 'pointer';\r\n          });\r\n\r\n          // Change it back to a pointer when it leaves.\r\n          map.on('mouseleave', 'places', function () {\r\n            map.getCanvas().style.cursor = '';\r\n          });\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const fetchLiveView = () => {\r\n    setIsLoading(true);\r\n    let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n    fetch(url, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: token,\r\n      }\r\n    }).then(response => {\r\n      var responseValue = response.json();\r\n      return responseValue;\r\n    }).then(responseData => {\r\n      if (responseData !== undefined && responseData !== null) {\r\n        setarrLiveView(responseData);\r\n      }\r\n      setIsLoading(false);\r\n    }).catch(error => {\r\n      console.log(\"error -------->\" + error);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const doAuth = (selectedLiveView, selectedHdl) => {\r\n    setIsLoading(true);\r\n    setselectedLiveViewHdl(selectedHdl);\r\n    setselectedLiveViewName(selectedLiveView);\r\n    let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n    var myHeaders = new Headers();\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(url, requestOptions).then(response => {\r\n      var responseValue = response.json();\r\n      return responseValue;\r\n    }).then(responseData => {\r\n      if (responseData !== undefined && responseData !== null) {\r\n        console.log(\"doAuth responseData-------->\", JSON.stringify(responseData));\r\n        fetchSelectedLiveViewData(selectedLiveView, selectedHdl);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const formData = (response) => {\r\n    let data = { ...response };\r\n    let gMapData = [];\r\n    data.features.map((item, index) => {\r\n      //form mapBoxData\r\n      let keys = Object.keys(item.properties);\r\n      let tableData = \"\";\r\n      tableData += \"<p>\";\r\n      keys.map((k) => {\r\n        tableData += k;\r\n        tableData += \" : \";\r\n        tableData += item.properties[k];\r\n        tableData += \" <br> \";\r\n      });\r\n      tableData += \"</p>\";\r\n\r\n      //form gMapData\r\n      gMapData.push({\r\n        \"lat\": Number(item.geometry.coordinates[1]),\r\n        \"lng\": Number(item.geometry.coordinates[0]),\r\n        \"ref_or_fix\": \"fix\",\r\n        \"desc\": tableData\r\n      });\r\n\r\n      item.properties.description = tableData;\r\n      // item.properties.title = index + 1;\r\n      let lat = item.geometry.coordinates[1];\r\n      let lng = item.geometry.coordinates[0];\r\n      item.geometry.coordinates[0] = lng;\r\n      item.geometry.coordinates[1] = lat;\r\n    });\r\n\r\n    setLat(data.features[0].geometry.coordinates[1]);\r\n    setLng(data.features[0].geometry.coordinates[0]);\r\n    setBoxMapData(data);\r\n    setGoogleMapData(gMapData);\r\n    setShowData(true);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const fetchSelectedLiveViewData = (selectedLiveView, selectedHdl) => {\r\n    let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=${selectedLiveView}`;\r\n    var myHeaders = new Headers();\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      headers: myHeaders,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        // console.log(\"result response-------\", JSON.stringify(responseData));\r\n        if (responseData != null) {\r\n          formData(responseData);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setIsLoading(false);\r\n        console.log('fetchSelectedLiveViewData error --------->', error)\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      let value = JSON.parse(e.target.result);\r\n      formData(value);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showData) {\r\n      if (showMapBox) {\r\n        show_mapBox();\r\n      }\r\n      else {\r\n        //initialize map\r\n        window.InitializeMap(googleMapData);\r\n      }\r\n    }\r\n  }, [showMapBox, showData]);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n      {isLoading ?\r\n        <div className=\"popUpContainer\">\r\n          <div className=\"loader\"></div>\r\n        </div>\r\n        : \"\"\r\n      }\r\n      <div className=\"m-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n          LiveView\r\n            </label>\r\n        <div className=\"inline-block relative w-1/1\">\r\n          <select\r\n            class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n            onChange={(e) => {\r\n              var textVal = e.target.options[e.target.selectedIndex].text;\r\n              doAuth(textVal, e.target.value);\r\n            }}>\r\n            <option value=\"\">Select</option>\r\n            {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n              return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n            }) : \"\"\r\n            }\r\n          </select>\r\n          <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"inline-block relative mx-3\">\r\n          {\r\n            selectedLiveViewHdl !== undefined && selectedLiveViewHdl != \"\" ?\r\n              // https://d-lab-2019.pim360.io/liveview#view=vkbseBkRSF-CfXDXdy6D7Q\r\n              <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/liveview#view=${selectedLiveViewHdl}`}>\r\n                <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n\r\n                  e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                  // e.src = \"hello.png\"\r\n                }} />\r\n              </a>\r\n              : ''\r\n          }\r\n        </div>\r\n        <div className=\"inline-block relative w-1/4 ml-3\">\r\n          <input type=\"file\" onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n      <div id=\"liveView-container\">\r\n        <div className=\"w-full\">\r\n          {showData ?\r\n            <div className=\"relative\">\r\n              <div className=\"m-4\">\r\n                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                  Selected LiveView:\r\n                </label>\r\n                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n              </div>\r\n              <div className=\"m-4\">\r\n                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => setShowMapBox(false)}>Google Map</button>\r\n                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n              </div>\r\n              {showMapBox ?\r\n                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                : \"\"\r\n              }\r\n              {!showMapBox ? <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div> : \"\"}\r\n\r\n\r\n              {/* {!showMapBox && <div>\r\n                {googleMapData.length > 0 ?\r\n                    <div className='m-4 w-full h-full'>\r\n                          Google map\r\n                    </div> \r\n                    : \r\n                    <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n              </div>\r\n              } */}\r\n            </div>\r\n            :\r\n            <div className=\"centerItem\">\r\n              <img draggable={false} width={300} src={search} />\r\n              <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveToMap;","import React, { useEffect, useState } from 'react';\r\nimport { Map } from '@esri/react-arcgis';\r\n\r\nfunction EsriMapPOC(props) {\r\n\r\n    const[source, setSource] = useState(\"https://dev-env.space/esri.php\");\r\n\r\n    useEffect(()=>{\r\n        let src = \"https://dev-env.space/esri.php?data=\" + props.data + \"&center=\" + props.center;\r\n        console.log('src ------>', src)\r\n        setSource(src);\r\n    }, [props.data])\r\n    \r\n    return (\r\n        <div style={{ width: '100vw', height: '100vh' }}>\r\n            {/* <Map /> */}\r\n            <iframe style={{ width: '100vw', height: '100vh' }} src=\"https://dev-env.space/esri.php?data=\"></iframe>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EsriMapPOC;","import React, { useEffect, useState, useRef } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport search from \"../assests/search.svg\";\r\nimport Api from '../api/api';\r\nimport map from \"../assests/map.svg\";\r\nimport Upload from \"../components/Upload\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport EsriMapPOC from \"./ESRIMapPOC\";\r\n// mapboxgl.accessToken =\r\n//   'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\nmapboxgl.accessToken =\r\n    'pk.eyJ1IjoicmFuaml0aGRpbmFrYXJhbiIsImEiOiJja2h1bHd2azAwNmZvMnZvMm5jYXZubGt1In0.tG3PJN1RAiiFoDhCBFvADQ';\r\nconst AnyReactComponent = ({ text }) => <div><img alt=\"Marker\" src=\"https://img.icons8.com/fluent/48/000000/marker-storm.png\" />{text}</div>;\r\nconst axios = require('axios');\r\n\r\nfunction LiveToShape(props) {\r\n    const [arrLiveView, setarrLiveView] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showData, setShowData] = useState(false);\r\n    const [selectedLiveViewHdl, setselectedLiveViewHdl] = useState(\"\");\r\n    const [selectedLiveViewName, setselectedLiveViewName] = useState(\"\");\r\n    const [showMapBox, setShowMapBox] = useState(true);\r\n    const [boxMapData, setBoxMapData] = useState({});\r\n    const [googleMapData, setGoogleMapData] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const types = [\r\n        { value: \"linestring\", name: \"Linestring\" },\r\n        { value: \"polygon\", name: \"Polygon\" },\r\n    ];\r\n    //map states\r\n    const mapContainerRef = useRef(null);\r\n    const [lng, setLng] = useState(5);\r\n    const [lat, setLat] = useState(34);\r\n    const [zoom, setZoom] = useState(5);\r\n    const [randomNum, setRandomNum] = useState(Math.random() * Math.floor(100));\r\n    const [esriData, setEsriData] = useState(null);\r\n    const [ esriCenterData,setEsriCenterData] = useState(\"\");\r\n    let map = null;\r\n    //local storage values\r\n    let token = localStorage.getItem(\"b_token\");\r\n    let prefixUrl = localStorage.getItem(\"prefixUrl\");\r\n    let baseUrl = `https://${prefixUrl}.pim360.io/api`;\r\n    let userName = localStorage.getItem(\"userName\");\r\n    let password = localStorage.getItem(\"password\");\r\n    // Initialize map when component mounts\r\n    useEffect(() => {\r\n        fetchLiveView();\r\n    }, []);\r\n\r\n    const show_linear_mapBox = () => {\r\n        console.log('inside show_linear_mapBox -------->', '')\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    map.addSource('route', {\r\n                        'type': 'geojson',\r\n                        'data': {\r\n                            'type': 'Feature',\r\n                            'properties': {},\r\n                            'geometry': {\r\n                                'type': 'LineString',\r\n                                'coordinates': boxMapData\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    map.addLayer({\r\n                        'id': 'route',\r\n                        'type': 'line',\r\n                        'source': 'route',\r\n                        'layout': {\r\n                            'line-join': 'round',\r\n                            'line-cap': 'round'\r\n                        },\r\n                        'paint': {\r\n                            'line-color': '#44337a',\r\n                            'line-width': 8\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const show_polygon_mapBox = () => {\r\n        console.log('inside show_polygon_mapBox -------->', '')\r\n        map = new mapboxgl.Map({\r\n            container: \"map-container\",\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom\r\n        });\r\n        // Add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n        map.on('load', function () {\r\n            // Add an image to use as a custom marker\r\n            map.loadImage(\r\n                'https://res.cloudinary.com/di9ckb63k/image/upload/v1606463408/ref_1_bzw94s.png',\r\n                function (error, image) {\r\n                    if (error) throw error;\r\n                    map.addImage('custom-marker', image);\r\n                    map.addSource('maine', {\r\n                        'type': 'geojson',\r\n                        'data': {\r\n                            'type': 'Feature',\r\n                            'geometry': {\r\n                                'type': 'Polygon',\r\n                                'coordinates': [boxMapData]\r\n                            }\r\n                        }\r\n                    });\r\n                    map.addLayer({\r\n                        'id': 'maine',\r\n                        'type': 'fill',\r\n                        'source': 'maine',\r\n                        'layout': {},\r\n                        'paint': {\r\n                            'fill-color': '#44337a',\r\n                            'fill-opacity': 0.8\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    const fetchLiveView = () => {\r\n        setIsLoading(true);\r\n        let url = `${baseUrl}/customviews?type=LIVE_VIEW`;\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: token,\r\n            }\r\n        }).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                setarrLiveView(responseData);\r\n            }\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error -------->\" + error);\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const doAuth = (selectedLiveView, selectedHdl) => {\r\n        console.log('inside do auth ------', '')\r\n        setShowMapBox(false);\r\n        setShowData(false)\r\n        setBoxMapData([]);\r\n        setIsLoading(true);\r\n        setselectedLiveViewHdl(selectedHdl);\r\n        setselectedLiveViewName(selectedLiveView);\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=auth&username=${userName}&password=${password}&purl=${prefixUrl}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions).then(response => {\r\n            var responseValue = response.json();\r\n            return responseValue;\r\n        }).then(responseData => {\r\n            if (responseData !== undefined && responseData !== null) {\r\n                console.log(\"doAuth responseData-------->\");\r\n                fetchSelectedLiveViewData(selectedLiveView, selectedHdl);\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"doAuth error-------->\", JSON.stringify(error));\r\n            setIsLoading(false);\r\n        });\r\n    };\r\n\r\n    const formData = (response) => {\r\n        setShowMapBox(true)\r\n        let data = { ...response };\r\n        let gMapData = [];\r\n        let mapBoxData = [];\r\n        let esriMapBoxData = [];\r\n        data.features.map((item, index) => {\r\n            let obj = {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                  \"mag\": 500\r\n                },\r\n                \"geometry\": {\r\n                  \"type\": \"Point\",\r\n                  \"coordinates\": [parseFloat(item.properties[\"Geometry.Start.Longitude\"]), parseFloat(item.properties[\"Geometry.Start.Latitude\"])]\r\n                }\r\n              }\r\n            let keys = Object.keys(item.properties);\r\n            keys.map((k)=>{\r\n                obj.properties[k] = item.properties[k];\r\n            });\r\n            if (index == 0) {\r\n                mapBoxData.push([item.properties[\"Geometry.Start.Longitude\"], item.properties[\"Geometry.Start.Latitude\"]]);\r\n                esriMapBoxData.push(obj);\r\n            }\r\n            //form mapboxdata\r\n            mapBoxData.push([item.properties[\"Geometry.End.Longitude\"], item.properties[\"Geometry.End.Latitude\"]]);\r\n            // esriMapBoxData.push([parseFloat(item.properties[\"Geometry.End.Longitude\"]), parseFloat(item.properties[\"Geometry.End.Latitude\"])]);\r\n            esriMapBoxData.push(obj);\r\n\r\n            let lat = item.geometry.coordinates[1];\r\n            let lng = item.geometry.coordinates[0];\r\n            item.geometry.coordinates[0] = lng;\r\n            item.geometry.coordinates[1] = lat;\r\n        });\r\n        setLat(data.features[0].properties[\"Geometry.Start.Latitude\"]);\r\n        setLng(data.features[0].properties[\"Geometry.Start.Longitude\"]);\r\n        setBoxMapData(mapBoxData);\r\n        setShowData(true);\r\n        setIsLoading(false);\r\n        // var arr_20 = esriMapBoxData.slice(0, 20);\r\n        //converting to base64\r\n        // setEsriData(window.btoa(JSON.stringify(arr_20)));\r\n        setEsriData(window.btoa(JSON.stringify(esriMapBoxData)));\r\n        setEsriCenterData(window.btoa(JSON.stringify(esriMapBoxData[0])));\r\n    }\r\n\r\n    const updateEsriMapData = () => {\r\n        setIsLoading(true)\r\n        let data = {\r\n            \"data\": esriData\r\n        };\r\n        let url = `https://dev-env.space/post_req.php`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                setIsLoading(false)\r\n                setShowMapBox(false);\r\n            })\r\n            .catch((error) => {\r\n                // setShowMapBox(false);\r\n                console.error('updateEsriMapData error: ------->', error);\r\n                setIsLoading(false)\r\n            });\r\n    };\r\n\r\n    const fetchSelectedLiveViewData = (selectedLiveView, selectedHdl) => {\r\n        let url = `https://pim4.azurewebsites.net/api/pim360?function_name=liveview_to_geojson&live_view_name=${selectedLiveView}`;\r\n        var myHeaders = new Headers();\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        fetch(url, requestOptions)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData != null) {\r\n                    formData(responseData);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setIsLoading(false);\r\n                console.log('fetchSelectedLiveViewData error --------->', error)\r\n                alert(error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showData) {\r\n            if (showMapBox) {\r\n                if (selectedType == \"linestring\") {\r\n                    show_linear_mapBox()\r\n                }\r\n                else if (selectedType == \"polygon\") {\r\n                    show_polygon_mapBox()\r\n                }\r\n            }\r\n            else {\r\n                //initialize map\r\n                // window.InitializeMap(googleMapData);\r\n            }\r\n        }\r\n    }, [showMapBox, showData, boxMapData]);\r\n\r\n    function bufferToBase64(buf) {\r\n        var binstr = Array.prototype.map.call(buf, function (ch) {\r\n            return String.fromCharCode(ch);\r\n        }).join('');\r\n        return btoa(binstr);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={false}></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <div className=\"m-4 inline-block\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    Choose type\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            setSelectedType(e.target.value);\r\n                            if (selectedLiveViewName != null && selectedLiveViewName != \"\") {\r\n                                console.log('inside 1 ------->', '')\r\n                                // map = null;\r\n                                // if (e.target.value == \"linestring\") {\r\n                                //     console.log('inside 1 linestring ------->', '')\r\n                                //     show_linear_mapBox()\r\n                                // }\r\n                                // else if (e.target.value == \"polygon\") {\r\n                                //     console.log('inside 1 polygon ------->', '')\r\n                                //     show_polygon_mapBox()\r\n                                // }\r\n                                map = null;\r\n                                doAuth(selectedLiveViewName, selectedLiveViewHdl)\r\n                            }\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {types.map((type) => {\r\n                            return <option value={type.value}>{type.name}</option>\r\n                        })}\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"m-4 inline-block\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\r\n                    LiveView\r\n                </label>\r\n                <div className=\"inline-block relative w-1/1\">\r\n                    <select\r\n                        class=\"block appearance-none w-full bg-gray-300 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                        onChange={(e) => {\r\n                            var textVal = e.target.options[e.target.selectedIndex].text;\r\n                            setShowMapBox(false)\r\n                            doAuth(textVal, e.target.value);\r\n                        }}>\r\n                        <option value=\"\">Select</option>\r\n                        {arrLiveView != null && arrLiveView.length > 0 ? arrLiveView.map((liveView, index) => {\r\n                            return <option name={liveView.Name} value={liveView.Hdl}>{liveView.Name}</option>\r\n                        }) : \"\"\r\n                        }\r\n                    </select>\r\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                        <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" /></svg>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"inline-block relative mx-3\">\r\n                    {\r\n                        selectedLiveViewHdl !== undefined && selectedLiveViewHdl != \"\" ?\r\n                            // https://d-lab-2019.pim360.io/liveview#view=vkbseBkRSF-CfXDXdy6D7Q\r\n                            <a target=\"_blank\" href={`https://${prefixUrl}.pim360.io/liveview#view=${selectedLiveViewHdl}`}>\r\n                                <img width=\"15%\" src={`https://${prefixUrl}.acl360.io/img/pim360-logo.svg`} onError={(e) => {\r\n\r\n                                    e.target.src = `https://${prefixUrl}.acl360.io/img/pim360_logo.png`\r\n                                    // e.src = \"hello.png\"\r\n                                }} />\r\n                            </a>\r\n                            : ''\r\n                    }\r\n                </div>\r\n                {/* <div className=\"inline-block relative w-1/4 ml-3\">\r\n          <input type=\"file\" onChange={handleChange} />\r\n        </div> */}\r\n            </div>\r\n            <div id=\"liveView-container\">\r\n                <div className=\"w-full\">\r\n                    {showData ?\r\n                        <div className=\"relative\">\r\n                            <div className=\"m-4\">\r\n                                <label className=\"inline-block text-gray-700 text-sm font-bold \" htmlFor=\"username\">\r\n                                    Selected LiveView:\r\n                </label>\r\n                                <p className=\"inline-block ml-4\">{selectedLiveViewName}</p>\r\n                            </div>\r\n                            <div className=\"m-4\">\r\n                                <button className={showMapBox ? \"btn-selected\" : \"btn\"} onClick={() => { setShowMapBox(true) }}>Mapbox</button>\r\n                                <button className={showMapBox ? \"btn\" : \"btn-selected\"} onClick={() => updateEsriMapData()}>ESRI</button>\r\n                            </div>\r\n                            {showMapBox ?\r\n                                <div id=\"map-container\" className='map-container m-4 map-height width' ref={mapContainerRef} />\r\n                                : \"\"\r\n                            }\r\n                            {/* {!showMapBox ? <div id=\"dvMap\" className={showMapBox ? \"opacity-25\" : \"opacity-100 min-h-full width m-4 map-height\"}></div> : \"\"} */}\r\n                            {!showMapBox ? <EsriMapPOC  data={esriData != null ? esriData : \"\"} center={esriCenterData}/> : \"\"}\r\n\r\n                            {/* {!showMapBox && <div>\r\n                {googleMapData.length > 0 ?\r\n                    <div className='m-4 w-full h-full'>\r\n                          Google map\r\n                    </div> \r\n                    : \r\n                    <div className=\"w-full h-full shadow-lg relative\">\r\n                        <div className=\"centerItem\">\r\n                            <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n              </div>\r\n              } */}\r\n                        </div>\r\n                        :\r\n                        <div className=\"centerItem\">\r\n                            <img draggable={false} width={300} src={search} />\r\n                            <p className=\"text-center mt-3 text-purple-800\">Select the liveview to show the data here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LiveToShape;","import React, { useEffect } from 'react';\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction Poc(props) {\r\n    useEffect(() => {\r\n        var tasks = [\r\n            {\r\n                \"startDate\": 2885, \"endDate\": 3293, \"taskName\": \"Hexo\", \"status\": \"KILLED\", \"attrs\": [\r\n                    {\r\n                        \"name\": \"Wear\",\r\n                        \"value\": \"here\",\r\n                    },\r\n                    {\r\n                        \"name\": \"ABC\",\r\n                        \"value\": \"XYZ\",\r\n                    }\r\n                ]\r\n            },\r\n            { \"startDate\": 4333, \"endDate\": 4453, \"taskName\": \"Fixed\", \"status\": \"RUNNING\", \"tootl\": \"hello2\" },\r\n            { \"startDate\": 7025, \"endDate\": 9280, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\", \"tootl\": \"hello3\" },\r\n            // { \"startDate\": 94, \"endDate\": 194, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\" },\r\n            // { \"startDate\": 1000, \"endDate\": 1100, \"taskName\": \"Fixed\", \"status\": \"RUNNING\" },\r\n            // { \"startDate\": 2000, \"endDate\": 2100, \"taskName\": \"Fixed\", \"status\": \"RUNNING\" },\r\n            // { \"startDate\": 3200, \"endDate\": 3300, \"taskName\": \"Reference\", \"status\": \"SUCCEEDED\" },\r\n        ];\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n\r\n        var taskNames = [\"Hexo\", \"Fixed\", \"Reference\"];\r\n\r\n        tasks.sort(function (a, b) {\r\n            return a.endDate - b.endDate;\r\n        });\r\n        var maxDate = tasks[tasks.length - 1].endDate;\r\n        tasks.sort(function (a, b) {\r\n            return a.startDate - b.startDate;\r\n        });\r\n        var minDate = tasks[0].startDate;\r\n\r\n\r\n        var format = \"%H:%M\";\r\n\r\n        // gantt 1\r\n        var gantt1 = window.d3.gantt(\"new-gantt\", tasks).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(tasks);\r\n\r\n\r\n        //gantt2\r\n        var tasks2 = [\r\n            { \"startDate\": 35, \"endDate\": 45, \"taskName\": \"DS - Inner Rail Wear\", \"status\": \"RUNNING\", \"wear\": \"<0.5km\" },\r\n            { \"startDate\": 40, \"endDate\": 50, \"taskName\": \"DS - Outer Rail Wear\", \"status\": \"SUCCEEDED\", \"wear\": \"<0.1km\" },\r\n            { \"startDate\": 75, \"endDate\": 85, \"taskName\": \"DS - Speed Restriction\", \"status\": \"FAILED\", \"wear\": \"<10km\" },\r\n            { \"startDate\": 100, \"endDate\": 110, \"taskName\": \"DS - Vertical Clearance Limitation\", \"status\": \"RUNNING\", \"wear\": \"<3km\" },\r\n            { \"startDate\": 120, \"endDate\": 130, \"taskName\": \"DS - Vertical Clearance Limitation\", \"status\": \"KILLED\", \"wear\": \"<5km\" },\r\n        ];\r\n\r\n\r\n        var taskNames2 = [\"DS - Inner Rail Wear\", \"DS - Outer Rail Wear\", \"DS - Speed Restriction\", \"DS - Vertical Clearance Limitation\"];\r\n\r\n        tasks2.sort(function (a, b) {\r\n            return a.endDate - b.endDate;\r\n        });\r\n\r\n\r\n        // gantt 2\r\n        var gantt2 = window.d3.gantt(\"new-gantt2\", tasks2).taskTypes(taskNames2).taskStatus(taskStatus).tickFormat(format);\r\n        gantt2(tasks2);\r\n\r\n        // // for map\r\n        window.InitializeMap([{ \"lat\": 21.2379446999999998979546944610774517059326171875, \"lng\": 72.77922780000000102518242783844470977783203125 }, { \"lat\": 21.237881200000000347927198163233697414398193359375, \"lng\": 72.77926089999999703650246374309062957763671875 }, { \"lat\": 21.23800320000000141362761496566236019134521484375, \"lng\": 72.779213999999996076439856551587581634521484375 }, { \"lat\": 21.23816790000000054305928642861545085906982421875, \"lng\": 72.7788641000000069425368565134704113006591796875 }]);\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true}></NavBar>\r\n            <br></br>\r\n            {/* <!-- // just for styling purpoe --> */}\r\n            <svg style={{ height: 0, position: \"absolute\" }}>\r\n                <defs>\r\n                    <linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#fd3c3c\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#dc281e\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"green\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#7bdb06\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#36ac00\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"blue\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#00c6ff\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#0072ff\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                    <linearGradient id=\"orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                        <stop offset=\"0%\" style={{ stopColor: \"#fe8c00\", stopOpacity: 1 }} />\r\n                        <stop offset=\"100%\" style={{ stopColor: \"#f83600\", stopOpacity: 1 }} />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n\r\n            <h3>Gantt 1</h3>\r\n            <div id=\"new-gantt\" style={{ height: \"130px\", width: \"1000px\" }}></div>\r\n            <h3>Gantt 2</h3>\r\n            <div id=\"new-gantt2\" style={{ height: \"200px\", width: \"1000px\" }}></div>\r\n\r\n            <br></br>\r\n\r\n            <h3>Map</h3>\r\n            <br></br>\r\n            <div id=\"dvMap\" style={{ height: \"500px\", width: \"35%\" }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Poc;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/NavBar'\r\nimport Api from \"../api/api\";\r\nimport bug from \"../assests/bug.svg\";\r\nimport chat from \"../assests/gantt_chat.svg\";\r\nimport map from \"../assests/map.svg\";\r\nimport search from \"../assests/search.svg\";\r\nimport noDataAttribute from \"../assests/noDataAttribute.svg\";\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nconst axios = require('axios');\r\n\r\nfunction LinearAsset(props) {\r\n    const [ganttData, setGanttData] = useState([]);\r\n    const [ass_ganttData, setAss_ganttData] = useState([]);\r\n    const [attributeData, setAttributeData] = useState([]);\r\n    const [documentData, setdocumentData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isAttrLoading, setIsAttrLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errMsg, setErrorMsg] = useState();\r\n    const [showData, setShowData] = useState(false);\r\n    const [isGanntHaveData, setIsGanntHaveData] = useState(false);\r\n    const [isAssociateGanntHaveData, setIsAssociateGanntHaveData] = useState(false);\r\n    const [isMapError, setIsMapError] = useState(false);\r\n    const doApi = (searchKey) => {\r\n        setIsLoading(true);\r\n        //setting token in header\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") };\r\n        Api.getRouteObj(searchKey).then((response) => {\r\n            console.log(\"response ------------>\");\r\n            console.log(response);\r\n            if (response != undefined && response != null) {\r\n                setShowData(true);\r\n                if (response.dataMap != undefined && response.dataMap != null && Object.keys(response.dataMap).length > 0) {\r\n                    console.log(\"inside if\")\r\n                    setIsGanntHaveData(true);\r\n\r\n                    //generating data\r\n                    generateGanttData(response.dataMap);\r\n                }\r\n                else {\r\n                    console.log(\"inside else\")\r\n                    //set gantt data error\r\n                    setIsGanntHaveData(false);\r\n                }\r\n                if (response.dataMapEq != undefined && response.dataMapEq != null && Object.keys(response.dataMapEq).length > 0) {\r\n                    setIsAssociateGanntHaveData(true);\r\n\r\n                    //generate associate Data\r\n                    generateAssociateData(response);\r\n                }\r\n                else {\r\n                    //set gantt data error\r\n                    setIsAssociateGanntHaveData(false);\r\n                }\r\n            }\r\n            console.log(\"isGanntHaveData----------->\" + isGanntHaveData)\r\n            console.log(\"isAssociateGanntHaveData ------------ \" + isAssociateGanntHaveData)\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"doApi error ------------>\");\r\n            console.log(error);\r\n            setIsLoading(false);\r\n            console.log(\"isGanntHaveData----------->\" + isGanntHaveData)\r\n            console.log(\"isAssociateGanntHaveData ------------ \" + isAssociateGanntHaveData)\r\n            if (!isAssociateGanntHaveData && !ganttData) {\r\n                setIsError(true);\r\n            }\r\n            // setIsError(true);\r\n            // setErrorMsg(\"Something went wrong. Please Try again!!\");\r\n        });\r\n    };\r\n\r\n    const generateGanttData = (LaMap) => {\r\n        //getting y keys from main object\r\n        let ganntKeys = Object.keys(LaMap);\r\n        //variable to store all data\r\n        let data = [];\r\n        let mapdata = [];\r\n        //generating data for fixed key\r\n        LaMap.fixed.map((fixed_obj) => {\r\n            let lastObj = LaMap.fixed[LaMap.fixed.length - 1];\r\n            let pointsToAdd = 0;\r\n            if(parseInt(lastObj.route_chainage) < 25000) {\r\n                pointsToAdd = 300;\r\n            }\r\n            else{\r\n                pointsToAdd = 1500;\r\n            }\r\n\r\n            //getting all keys from attrs\r\n            let arrkeys = Object.keys(fixed_obj.refObj.attrs);\r\n\r\n            //initalize object\r\n            let obj = {};\r\n\r\n            //looping attribute keys and getting attribute values\r\n            arrkeys.map((key, index) => {\r\n                obj[fixed_obj.refObj.attrs[key].name] = fixed_obj.refObj.attrs[key].value;\r\n            });\r\n\r\n            //getting lat and lang\r\n            let lat = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Latitude' || e.name.toLowerCase() == 'latitude')[0].value)\r\n            // let lng = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\")) > 0 ? Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\")) : Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude')[0].value.replace(\" E\", \"\").substring(1))\r\n            let lng = Number(Object.values(fixed_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude' || e.name.toLowerCase() == 'longitude')[0].value)\r\n            \r\n            if(lat){\r\n                mapdata.push({\r\n                    \"lat\": lat ,\r\n                    \"lng\": lng,\r\n                    \"ref_or_fix\": \"fix\"\r\n                });\r\n            }\r\n            \r\n            //creating object with required values  \r\n            data.push({\r\n                \"startDate\": fixed_obj.route_chainage,\r\n                \"endDate\": (fixed_obj.route_chainage + pointsToAdd),\r\n                \"taskName\": \"Fixed\",\r\n                \"type\": fixed_obj.refObj.type,\r\n                \"status\": \"RUNNING\",\r\n                \"attrs\": [{\r\n                    \"name\": \"Tag: \",\r\n                    \"value\": fixed_obj.objId\r\n                }],\r\n                \"hdl\": fixed_obj.hdl,\r\n                \"lat\": lat,\r\n                \"lng\": lng\r\n            });\r\n        });\r\n\r\n        //generating data for ref key\r\n        LaMap.ref.map((ref_obj) => {\r\n            let lastObj = LaMap.ref[LaMap.ref.length - 1];\r\n            let pointsToAdd = 0;\r\n            if(parseInt(lastObj.route_chainage) < 25000) {\r\n                pointsToAdd = 300;\r\n            }\r\n            else{\r\n                pointsToAdd = 1500;\r\n            }\r\n\r\n            //getting lat and lang\r\n            let lat = Number(Object.values(ref_obj.refObj.attrs).filter(e => e.name == 'Approved Latitude' || e.name.toLowerCase() == 'latitude')[0].value)\r\n            let lng = Number(Object.values(ref_obj.refObj.attrs).filter(e => e.name == 'Approved Longitude' || e.name.toLowerCase() == 'longitude')[0].value)\r\n            if(lat){\r\n                mapdata.push({\r\n                    \"lat\": lat ,\r\n                    \"lng\": lng,\r\n                    \"ref_or_fix\": \"ref\"\r\n                });\r\n            }\r\n            //creating object with required values\r\n            data.push({\r\n                \"startDate\": ref_obj.route_chainage,\r\n                \"endDate\": (ref_obj.route_chainage + pointsToAdd),\r\n                \"taskName\": \"Reference\",\r\n                \"type\": ref_obj.refObj.type,\r\n                \"status\": \"SUCCEEDED\",\r\n                \"attrs\": [{\r\n                    \"name\": \"Tag: \",\r\n                    \"value\": ref_obj.objId\r\n                }],\r\n                \"hdl\": ref_obj.hdl,\r\n                \"lat\": lat,\r\n                \"lng\": lng\r\n            });\r\n        });\r\n\r\n        //generating map data\r\n        // generateMapData(mapdata);\r\n\r\n        //initialize map\r\n        window.InitializeMap(mapdata);\r\n\r\n        //set generated data to state\r\n        setGanttData(data);\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n\r\n        var taskNames = [\"Fixed\", \"Reference\"];\r\n        var format = \"%H:%M\";\r\n        // gantt 1\r\n        var gantt1 = window.d3.gantt(\"gantt\", data, onClickGanttItem).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(data);\r\n    };\r\n\r\n    const onClickGanttItem = (clickedObj) => {\r\n        console.log(\"clickedObj -------> \"+JSON.stringify(clickedObj));\r\n        setAttributeData([]);\r\n        setdocumentData([]);\r\n        setIsMapError(false);\r\n        setIsAttrLoading(true);\r\n        let objType = \"TAGGED_ITEM\";\r\n        //setting token in header\r\n        axios.defaults.headers.common = { 'Authorization': localStorage.getItem(\"b_token\") }\r\n\r\n        //initialize required variables\r\n        let hdlData = [];\r\n\r\n        //doing api call for getting attributes data\r\n        Api.objectByHdl(clickedObj.type, clickedObj.hdl).then((response) => {\r\n            if (response != null) {\r\n                //getting all keys from attrs\r\n                let arrkeys = Object.keys(response.attrs);\r\n                //initalize object\r\n                let obj = {};\r\n                //looping attribute keys and getting attribute values\r\n                arrkeys.map((key) => {\r\n                    obj[response.attrs[key].name] = response.attrs[key].value;\r\n                });\r\n                //set data to state            \r\n                setAttributeData(obj);\r\n                setIsAttrLoading(false);\r\n            }\r\n        }).catch(error => {\r\n            setIsAttrLoading(false);\r\n            console.log(\"objectByHdl error---------->\" + JSON.stringify(error));\r\n        });\r\n\r\n        //doing api call for getting document link data\r\n        Api.objectAssociations(objType, clickedObj.hdl, \"DOCUMENT\").then((response) => {\r\n            let associativeData = [];\r\n            if (response != null) {\r\n                if (response.items.length > 0) {\r\n                    {\r\n                        response.items.map((item) => {\r\n                            associativeData.push({\r\n                                name: item.ID,\r\n                                class: item.ClsName,\r\n                                link: item.Url\r\n                            })\r\n                        })\r\n                    }\r\n                    setdocumentData(associativeData);\r\n                    setIsAttrLoading(false);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            setIsAttrLoading(false);\r\n            console.log(\"objectAssociations error---------->\" + JSON.stringify(error));\r\n        });\r\n        \r\n        // window.myMap.setCenter({lat:clickedObj.lat, lng:clickedObj.lng})    ;\r\n        window.myMap.setZoom(17);\r\n\r\n        window.myMap.panTo({ lat: clickedObj.lat, lng: clickedObj.lng });\r\n        // window.myMap.setZoom(18);      // This will trigger a zoom_changed on the map\r\n    };\r\n\r\n    const generateAssociateData = (AssociativeData) => {\r\n        // console.log(JSON.stringify(AssociativeData))\r\n        //getting y keys from main object\r\n        let issueKeys = Object.keys(AssociativeData.dataMapEq.Issue);\r\n        //variable to store all data\r\n        let data = [];\r\n        issueKeys.map((key) => {\r\n            //generating data for fixed key\r\n            AssociativeData.dataMapEq.Issue[key].map((issue_obj) => {\r\n                if (issue_obj.attribute_name != \"\") {\r\n                    //creating object with required values  \r\n                    data.push({\r\n                        \"startDate\": issue_obj.from_route_chainage,\r\n                        \"endDate\": issue_obj.to_route_chainage,\r\n                        \"taskName\": issue_obj.class_name,\r\n                        \"type\": issue_obj.refObj.Type,\r\n                        \"status\": \"KILLED\",\r\n                        \"attrs\": [{\r\n                            \"name\": issue_obj.attribute_name + \": \",\r\n                            \"value\": issue_obj.attribute_value + \" \" + issue_obj.attribute_uom\r\n                        },\r\n                        {\r\n                            \"name\": \"Ref: \",\r\n                            \"value\": issue_obj.refObj.ID\r\n                        }\r\n                        ],\r\n                        \"hdl\": issue_obj.refObj.Hdl,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //getting y keys from main object\r\n        let valueKeys = Object.keys(AssociativeData.dataMapEq.Value);\r\n        //variable to store all data\r\n        valueKeys.map((key) => {\r\n            //generating data for fixed key\r\n            AssociativeData.dataMapEq.Value[key].map((value_obj) => {\r\n                if (value_obj.attribute_name != \"\") {\r\n                    //creating object with required values  \r\n                    data.push({\r\n                        \"startDate\": value_obj.from_route_chainage,\r\n                        \"endDate\": value_obj.to_route_chainage,\r\n                        \"taskName\": value_obj.class_name,\r\n                        \"status\": \"RUNNING\",\r\n                        \"attrs\": [{\r\n                            \"name\": value_obj.attribute_name + \": \",\r\n                            \"value\": value_obj.attribute_value + \" \" + value_obj.attribute_uom\r\n                        },\r\n                        {\r\n                            \"name\": \"Ref: \",\r\n                            \"value\": value_obj.refObj.ID\r\n                        }\r\n                        ],\r\n                        \"hdl\": value_obj.refObj.Hdl,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        //set generated associative data to state\r\n        setAss_ganttData(data);\r\n\r\n        var taskStatus = {\r\n            \"SUCCEEDED\": \"bar\",\r\n            \"FAILED\": \"bar-failed\",\r\n            \"RUNNING\": \"bar-running\",\r\n            \"KILLED\": \"bar-killed\"\r\n        };\r\n        var taskNames = [...issueKeys, ...valueKeys];\r\n        var format = \"%H:%M\";\r\n        var gantt1 = window.d3.gantt(\"associate_gantt\", data, onClickGanttItem).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format);\r\n        gantt1(data);\r\n    };\r\n\r\n    const generateMapData = (data) => {\r\n        // console.log(JSON.stringify(data))\r\n        let mapObj = {\r\n            \"optimizeWaypoints\": false,\r\n            \"travelMode\": \"DRIVING\"\r\n        };\r\n        let waypoints = [];\r\n        {\r\n            data.map((item, index) => {\r\n                if (index == 0) {\r\n                    mapObj.origin = {\r\n                        \"lat\": item.lat,\r\n                        \"lng\": item.lng\r\n                    }\r\n                }\r\n                else if (index == (data.length - 1)) {\r\n                    mapObj.destination = {\r\n                        \"lat\": item.lat,\r\n                        \"lng\": item.lng\r\n                    }\r\n                    mapObj.waypoints = waypoints;\r\n                }\r\n                else {\r\n                    waypoints.push({\r\n                        \"location\": {\r\n                            \"lat\": item.lat,\r\n                            \"lng\": item.lng\r\n                        },\r\n                        \"stopover\": true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        // console.log(\"mapObj ------->\"+JSON.stringify(mapObj));\r\n        window.InitializeMap(mapObj);\r\n    };\r\n\r\n    const mapErrorCallback = (is) => {\r\n        setIsMapError(is);\r\n    }\r\n    const searchClicked = (keyword) => {\r\n        setShowData(false);\r\n        setAttributeData([]);\r\n        setdocumentData([]);\r\n        doApi(keyword);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // window.mapErrorCallback = mapErrorCallback;\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <NavBar showLogoutButton={true} showSearch={true} onClickSearch={searchClicked} ></NavBar>\r\n            {isLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                :\r\n                \"\"\r\n            }\r\n            {isAttrLoading ?\r\n                <div className=\"popUpContainer\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n                : \"\"}\r\n\r\n            {showData ?\r\n                <div className=\"relative\">\r\n                    <svg style={{ height: 0, position: \"absolute\" }}>\r\n                        <defs>\r\n                            <linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#fd3c3c\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#dc281e\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"green\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#7bdb06\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#36ac00\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"blue\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#00c6ff\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#0072ff\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"orange\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                                <stop offset=\"0%\" style={{ stopColor: \"#fe8c00\", stopOpacity: 1 }} />\r\n                                <stop offset=\"100%\" style={{ stopColor: \"#f83600\", stopOpacity: 1 }} />\r\n                            </linearGradient>\r\n                        </defs>\r\n                    </svg>\r\n                    <div className=\"flex\">\r\n                        <div className=\"w-1/4 pb-5\">\r\n                            <div id=\"dvMap\" className={isMapError ? \"opacity-25\" : \"opacity-100 min-h-full\"}></div>\r\n                            {isMapError ?\r\n                                <div className=\"min-h-full mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={map} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">Invalid map data</p>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                        <div className=\"w-3/4 p-5\">\r\n                            {/* gantt chat */}\r\n\r\n                            <div id=\"gantt\" className={isGanntHaveData ? \"block\" : \"hidden\"} style={{ minHeight: \"130px\" }}></div>\r\n                            {isGanntHaveData\r\n                                ? \"\"\r\n                                :\r\n                                <div className=\"h-64 mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={chat} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">No fixed and refrence data found</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {/* associate_gantt chat*/}\r\n                            <div id=\"associate_gantt\" className={isAssociateGanntHaveData ? \"block\" : \"hidden\"} style={{ height: \"200px\" }}></div>\r\n                            {isAssociateGanntHaveData\r\n                                ? \"\"\r\n                                :\r\n                                <div className=\"h-64 mx-auto border-dashed border border-gray-600 relative mb-5\">\r\n                                    <div className=\"centerItem\">\r\n                                        <img className=\"attr_chat mx-auto\" draggable={false} src={chat} />\r\n                                        <p className=\"text-center mt-3 text-purple-800\">No associatives data found</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                {/* attribute */}\r\n                                {attributeData != undefined && attributeData != \"\"\r\n                                    ?\r\n                                    <div>\r\n                                            {/* <p className=\"text-xl font-bold mb-3\">Attributes</p> */}\r\n                                            <Accordion className=\"border-0\" preExpanded={[\"attributes\"]} >\r\n                                                <AccordionItem className=\"shadow-md mb-3\" uuid=\"attributes\"\r\n                                                // key={item.Latitude}\r\n                                                >\r\n                                                    <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                                        <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                                        &emsp;\r\n                                                        {/* {arrSplittedValue[index]} */}\r\n                                                        Attributes\r\n                                                    </AccordionItemButton>\r\n                                                    </AccordionItemHeading>\r\n                                                    <AccordionItemPanel className=\"h-56 overflow-y-auto\">\r\n                                                        <table class=\"table-auto w-full\">\r\n                                                            <tbody>\r\n                                                                {Object.keys(attributeData).map((key) => {\r\n                                                                    return <tr>\r\n                                                                        <td class=\"border px-4 py-2\">{key}</td>\r\n                                                                        <td class=\"border px-4 py-2\">{attributeData[key]}</td>\r\n                                                                    </tr>\r\n                                                                })}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </AccordionItemPanel>\r\n                                                </AccordionItem>\r\n                                            </Accordion>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"h-64 border-dashed border border-gray-600 relative\">\r\n                                        <div className=\"centerItem\">\r\n                                            <img className=\"attr_chat mx-auto\" draggable={false} src={noDataAttribute} />\r\n                                            <p className=\"text-center mt-3 text-purple-800\">No attributes data found</p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {/* document link data */}\r\n                                {documentData != undefined && documentData.length > 0\r\n                                    ?\r\n                                    <div>\r\n                                            {/* <p className=\"text-xl font-bold mb-3\">Attributes</p> */}\r\n                                            <Accordion className=\"border-0\" preExpanded={[\"doc\"]}>\r\n                                                <AccordionItem className=\"shadow-md mb-3\" uuid=\"doc\"\r\n                                                // key={item.Latitude}\r\n                                                >\r\n                                                    <AccordionItemHeading className=\"bg-gray-400 p-2\">\r\n                                                        <AccordionItemButton className=\"w-full border-none outline-none focus:border-0 inline-flex\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg>\r\n                                                        &emsp;\r\n                                                        {/* {arrSplittedValue[index]} */}\r\n                                                        Document Links\r\n                                                    </AccordionItemButton>\r\n                                                    </AccordionItemHeading>\r\n                                                    <AccordionItemPanel className=\"h-56 overflow-y-auto\">\r\n                                                        <table class=\"table-auto w-full\">\r\n                                                            <tbody>\r\n                                                                {documentData.map((item) => {\r\n                                                                    return <tr>\r\n                                                                        <td class=\"border px-4 py-2\">{item.name}</td>\r\n                                                                        <td class=\"border px-4 py-2\">{item.class}</td>\r\n                                                                        <td class=\"border px-4 py-2\" >\r\n                                                                            <a href={item.link} target=\"_blank\">\r\n                                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-link\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg>\r\n                                                                            </a>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                })}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </AccordionItemPanel>\r\n                                                </AccordionItem>\r\n                                            </Accordion>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"h-64 border-dashed border border-gray-600 relative\">\r\n                                        <div className=\"centerItem\">\r\n                                            <img className=\"attr_chat mx-auto\" draggable={false} src={noDataAttribute} />\r\n                                            <p className=\"text-center mt-3 text-purple-800\">No documents data found</p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"centerItem\">\r\n                    <img draggable={false} width={300} src={search} />\r\n                    <p className=\"text-center mt-3 text-purple-800\">Search to show the data here</p>\r\n                </div>\r\n            }\r\n\r\n            {isError ?\r\n                <div className=\"centerItem\">\r\n                    <img draggable={false} width={300} src={bug} />\r\n                    <p className=\"text-center mt-3 text-purple-800\">Something went wrong. Please try again!!</p>\r\n                </div>\r\n                : \"\"}\r\n            {/* loader */}\r\n            {/* searchBar */}\r\n            {/* map */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinearAsset;","import React from 'react';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport LiveView from './screens/LiveView';\r\nimport LiveToMap from './screens/LiveToMap';\r\nimport LiveToShape from './screens/LiveToShape';\r\nimport esriMapPOC from './screens/ESRIMapPOC';\r\nimport Poc from './screens/Poc';\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport LinearAsset from \"./screens/LinearAsset\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path=\"/\" component={LoginScreen} />\r\n        <Route exact path=\"/home\" component={HomeScreen} />\r\n        <Route exact path=\"/liveView\" component={LiveView} />\r\n        <Route exact path=\"/poc\" component={Poc} />\r\n        <Route exact path=\"/linearAsset\" component={LinearAsset} />\r\n        <Route exact path=\"/liveview2map\" component={LiveToMap} />\r\n        <Route exact path=\"/liveview2shape\" component={LiveToShape} />\r\n        <Route exact path=\"/esriMapPOC\" component={esriMapPOC} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/map.a856e094.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.0f7fe590.svg\";","module.exports = __webpack_public_path__ + \"static/media/gantt_chat.dd2288fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/noDataAttribute.cb61ac4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bug.9062dc5c.svg\";"],"sourceRoot":""}