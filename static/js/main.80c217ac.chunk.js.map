{"version":3,"sources":["components/NavBar.js","screens/LoginScreen.js","screens/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","class","className","src","viewBox","xmlns","d","showLogoutButton","width","height","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","points","x1","y1","x2","y2","LoginScren","useState","userName","setUserName","password","setPassword","prefixUrl","setPrefixUrl","isError","errMsg","inputClass","errInputClass","useEffect","authInterval","setInterval","console","log","localStorage","getItem","window","myWindow","close","history","push","clearInterval","for","id","type","value","placeholder","onChange","e","target","onClick","setItem","link","open","doLogin","AnyReactComponent","text","HomeScreen","inputTag","setInputTag","data","setData","arrData","counter","splitedValue","split","map","item","trim","url","token","fetch","headers","Accept","Authorization","then","response","json","responseData","undefined","attrs","length","catch","error","submitTagNumber","arrNameValue","arrkeys","Object","keys","obj","key","name","style","defaultCenter","lat","lng","defaultZoom","nameValue","Latitude","Longitude","showAttr","App","exact","path","component","LoginScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0MA4BeA,MA1Bf,SAAgBC,GACZ,OACI,yBAAKC,MAAM,kEACP,yBAAKA,MAAM,mDACP,yBAAKC,UAAU,QAAQC,IAAI,kDAE/B,yBAAKF,MAAM,mBACP,4BAAQA,MAAM,gHACV,yBAAKA,MAAM,uBAAuBG,QAAQ,YAAYC,MAAM,8BAA6B,uCAAmB,0BAAMC,EAAE,mDAG5H,yBAAKL,MAAM,4DACP,yBAAKA,MAAM,yBAEX,yBAAKC,UAAS,UAAKF,EAAMO,iBAAmB,GAAK,WAC7C,4BAAQN,MAAM,oGAEV,yBAAKI,MAAM,6BAA6BG,MAAM,KAAKC,OAAO,KAAKL,QAAQ,YAAYM,KAAK,OAAOC,OAAO,eAAeC,eAAa,IAAIC,iBAAe,QAAQC,kBAAgB,QAAQb,MAAM,2BAA0B,0BAAMK,EAAE,4CAAiD,8BAAUS,OAAO,qBAA8B,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAC7V,6C,OC4ETC,MA7Ff,SAAoBpB,GAAO,MAGOqB,mBAAS,IAHhB,mBAGlBC,EAHkB,KAGRC,EAHQ,OAIOF,mBAAS,IAJhB,mBAIlBG,EAJkB,KAIRC,EAJQ,OAKSJ,mBAAS,IALlB,mBAKlBK,EALkB,KAKPC,EALO,OAMIN,qBANJ,mBAMnBO,EANmB,aAOEP,sBAPF,mBAOnBQ,EAPmB,aAQUR,mBAAS,+HARnB,mBAQnBS,EARmB,aASgBT,mBAAS,8IATzB,mBASnBU,EATmB,aAUMV,sBAVN,mBAmDzB,OAnDyB,UAuCzBW,qBAAU,WACT,IAAMC,EAAgBC,aAAY,WAC/BC,QAAQC,IAAI,8BAC0B,MAAnCC,aAAaC,QAAQ,aACtBH,QAAQC,IAAI,+BAA4BC,aAAaC,QAAQ,YATjEC,OAAOC,SAASC,QAChBzC,EAAM0C,QAAQC,KAAK,SACnBR,QAAQC,IAAI,6BAA0BG,OAAOC,UASzCI,cAAcX,MAEf,KACH,OAAO,kBAAMW,cAAcX,MAC1B,IAGD,oCACA,kBAAC,EAAD,CAAQ1B,kBAAkB,IAC1B,yBAAKN,MAAM,wCACT,0BAAMA,MAAM,kDACV,yBAAKA,MAAM,QACT,2BAAOA,MAAM,6CAA6C4C,IAAI,YAA9D,YAGA,2BAAO5C,MAAO2B,EAAUG,EAAgBD,EACtCgB,GAAG,WAAWC,KAAK,OAAOC,MAAO1B,EAAU2B,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAM5B,EAAY4B,EAAEC,OAAOJ,WAG3G,yBAAK/C,MAAM,QACT,2BAAOA,MAAM,6CAA6C4C,IAAI,YAA9D,YAGA,2BAAO5C,MAAO2B,EAAUG,EAAgBD,EAAYkB,MAAOxB,EACzDsB,GAAG,WAAWC,KAAK,WAAWE,YAAY,sBAAsBC,SAAU,SAACC,GAAD,OAAM1B,EAAY0B,EAAEC,OAAOJ,WAGzG,yBAAK/C,MAAM,QACT,2BAAOA,MAAM,6CAA6C4C,IAAI,YAA9D,cAGA,2BAAO5C,MAAO2B,EAAUG,EAAgBD,EAAYkB,MAAOtB,EACzDoB,GAAG,YAAYC,KAAK,OAAOE,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAMxB,EAAawB,EAAEC,OAAOJ,WAGzG,uBAAG/C,MAAM,iCAAiC2B,EAAUC,EAAS,IAC7D,yBAAK5B,MAAM,QACb,4BAAQA,MAAM,sHAAsH8C,KAAK,SACvIM,QAAS,YAtEC,WAEdhB,aAAaiB,QAAQ,YAAa5B,GAalC,IAAI6B,EAAI,kCAA8BjC,EAA9B,yBAAuDE,EAAvD,uBAA8EE,GACtFa,OAAOC,SAAWD,OAAOiB,KAAKD,EAAK,eAAjB,iGAsDEE,KADlB,c,iBCnFAC,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,yBAAK1D,MAAM,cAAa,yBAAKE,IAAI,0BAA2BwD,IAoIrFC,EAlII,SAAA5D,GAAU,IAAD,EACWqB,mBAAS,8HADpB,mBAClBS,EADkB,aAEiBT,mBAAS,8IAF1B,mBAElBU,EAFkB,aAGKV,sBAHL,mBAGlBO,EAHkB,aAIGP,sBAJH,gCAKOA,sBALP,mBAKlBwC,EALkB,KAKRC,EALQ,OAMDzC,mBAAS,IANR,mBAMlB0C,EANkB,KAMZC,EANY,OAOiB3C,mBAAS,IAP1B,6BAuG5B,OACI,yBAAKpB,MAAM,QACP,yBAAKA,MAAM,mBACP,0BAAMA,MAAM,mCACR,yBAAKA,MAAM,gBACP,2BAAOA,MAAM,6CAA6C4C,IAAI,YAA9D,cAGA,2BAAO5C,MAAO2B,EAAUG,EAAgBD,EAAYkB,MAAOa,EACvDf,GAAG,YAAYC,KAAK,OAAQE,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAMW,EAAYX,EAAEC,OAAOJ,WAG7G,yBAAK/C,MAAM,qBACP,4BAAQA,MAAM,sHAAsH8C,KAAK,SACrIM,QAAS,YA5GL,WACpB,IAAIY,EAAU,GACVC,EAAU,EACVC,EAAeN,EAASO,MAAM,KAAKC,KAAI,SAACC,GACxC,OAAOA,EAAKC,UAEhBJ,EAAaE,KAAI,SAACvB,GACd,IAAI0B,EAAM,WAAYnC,aAAaC,QAAQ,aAAe,yCAA2CQ,EACjG2B,EAAQpC,aAAaC,QAAQ,WACjCoC,MAAMF,EAAK,CACPG,QAAS,CACLC,OAAQ,mBACRC,cAAeJ,KAEpBK,MAAK,SAAAC,GAEJ,OADoBA,EAASC,UAE9BF,MAAK,SAAAG,QACqBC,GAAtBD,EAAaE,OAA4C,MAAtBF,EAAaE,MAC/ClB,EAAQtB,KAAKsC,GAGb9C,QAAQC,IAAI6C,IAEhBf,GAAW,IACGC,EAAaiB,QACvBpB,EAAQC,MAGboB,OAAM,SAAAC,GACLnD,QAAQC,IAAI,qBAAkBkD,GAC9BpB,GAAW,QA6EaqB,KADpB,kBAOHL,GAARnB,GAAqBA,EAAKqB,OAAS,GAChC,6BA/ES,WACb,IAAII,EAAe,GAkBnB,OAjBAzB,EAAKM,KAAI,SAACC,GACN,IAAImB,EAAUC,OAAOC,KAAKrB,EAAKa,OAC3BS,EAAM,GACVH,EAAQpB,KAAI,SAACwB,GACTD,EAAItB,EAAKa,MAAMU,GAAKC,MAAQxB,EAAKa,MAAMU,GAAK7C,SAEhDwC,EAAa7C,KAAKiD,MAWf,yBAAK3F,MAAM,aACN,yBAAKA,MAAM,qBACX,yBAAK8F,MAAO,CAAEtF,OAAQ,QAASD,MAAO,SAClC,kBAAC,IAAD,CAEIwF,cAAe,CACXC,IAAK,QACLC,KAAM,SAEVC,YAAa,IAEZX,EAAanB,KAAI,SAAC+B,GAEf,OADAjE,QAAQC,IAAIgE,GACJ,kBAAC,EAAD,CACIH,IAAKG,EAAUC,SACfH,IAAKE,EAAUE,kBAMvC,yBAAKrG,MAAM,uBACNuF,EAAanB,KAAI,SAACC,GACf,OAAOoB,OAAOC,KAAKrB,GAAMD,KAAI,SAACwB,GAC1B,OAAO,6BACH,yBAAK5F,MAAM,uBACN4F,GAEL,yBAAK5F,MAAM,uBACNqE,EAAKuB,aAgC7BU,M,uBC/GFC,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAW/C,OCAzBiD,QACW,cAA7BtE,OAAOuE,SAASC,UAEe,UAA7BxE,OAAOuE,SAASC,UAEhBxE,OAAOuE,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdrC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMqC,c","file":"static/js/main.80c217ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <nav class=\"flex items-center justify-between flex-wrap bg-purple-900  p-6\">\r\n            <div class=\"flex items-center flex-shrink-0 text-black mr-6\">\r\n                <img className=\"w-1/2\" src=\"https://www.datum360.com/assets/img/logo.png\"></img>\r\n            </div>\r\n            <div class=\"block lg:hidden\">\r\n                <button class=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n                    <svg class=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div class=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n                <div class=\"text-sm lg:flex-grow\">\r\n                </div>\r\n                <div className={`${props.showLogoutButton ? \"\" : \"hidden\"}`}>\r\n                    <button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\">\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-log-out\"><path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path><polyline points=\"16 17 21 12 16 7\"></polyline><line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line></svg>\r\n                        <span>Logout</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction LoginScren(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  // const [count, setCount] = useState(0);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [prefixUrl, setPrefixUrl] = useState(\"\");\r\n  const[isError, setisError] = useState();\r\n  const[errMsg, setErrMsg] = useState();\r\n  const[inputClass, setinputClass] = useState(\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\");\r\n  const[errInputClass, setErrInputClass] = useState(\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\");\r\n  const[myWindow, setMyWindow] = useState();\r\n  \r\n  \r\n  const doLogin = () => {\r\n    //setting prefix url to localstorage\r\n    localStorage.setItem(\"prefixUrl\", prefixUrl);\r\n\r\n  //validation\r\n  // if(userName != undefined && userName.length > 0 && password.length > 0 && prefixUrl > 0){\r\n  // }\r\n  // else{\r\n  //   //setting error \r\n  //   // setError(\"border-red-500\");\r\n  //   setisError(true);\r\n  //   setErrMsg(\"Please fill all the fields\");\r\n  // }\r\n\r\n    // let sampleLink = \"auth/index.php?clientId=ranjithdinakaran&clientSecret=Drk_13232104&prefix_url=d-lab-2019\";\r\n    let link = `auth/index.php?clientId=${userName}&clientSecret=${password}&prefix_url=${prefixUrl}`;\r\n    window.myWindow = window.open(link,'targetWindow',`toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,height=500`);\r\n    // setMyWindow = window.open(link,'targetWindow',`toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,height=500`);\r\n  }\r\n\r\n  const closeWindow = () => {\r\n    window.myWindow.close();\r\n    props.history.push('/home');\r\n    console.log(\"close window --------->\"+window.myWindow)\r\n  }\r\n  \r\n  useEffect(() => {\r\n   const authInterval =  setInterval(() => {\r\n      console.log(\"listening ------------>\")\r\n      if(localStorage.getItem(\"b_token\") != null) {\r\n        console.log(\"b_token found ---------->\"+localStorage.getItem(\"b_token\"))\r\n        closeWindow();\r\n        clearInterval(authInterval)\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(authInterval);\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n    <NavBar showLogoutButton={false}></NavBar>\r\n    <div class=\"w-full max-w-xs login-container mt-5\">\r\n      <form class=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n            Username\r\n          </label>\r\n          <input class={isError ? errInputClass : inputClass}\r\n            id=\"username\" type=\"text\" value={userName} placeholder=\"Username\" onChange={(e)=> setUserName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\r\n            Password\r\n          </label>\r\n          <input class={isError ? errInputClass : inputClass} value={password}\r\n            id=\"password\" type=\"password\" placeholder=\"Enter your password\" onChange={(e)=> setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class=\"mb-6\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n            Prefix URL\r\n          </label>\r\n          <input class={isError ? errInputClass : inputClass} value={prefixUrl}\r\n            id=\"prefixUrl\" type=\"text\" placeholder=\"Enter your prefix url\" onChange={(e)=> setPrefixUrl(e.target.value)}\r\n          />\r\n        </div>\r\n        <p class=\"text-center mb-3 text-red-500\">{isError ? errMsg : \"\"}</p>\r\n        <div class=\"flex\">\r\n      <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-auto\" type=\"button\"\r\n        onClick={() => {doLogin()}}>\r\n        Login\r\n      </button>\r\n    </div>\r\n      </form>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScren;","import React, { useState, useEffect } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nconst AnyReactComponent = ({ text }) => <div class=\"bg-red-500\"><img src=\"../assests/place.svg \" />{text}</div>;\r\n\r\nconst HomeScreen = props => {\r\n    const[inputClass, setinputClass] = useState(\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\");\r\n    const[errInputClass, setErrInputClass] = useState(\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline border-red-500\");\r\n    const[isError, setisError] = useState();\r\n    const[errMsg, setErrMsg] = useState();\r\n    const[inputTag, setInputTag] = useState();\r\n    const[data, setData] = useState([]);\r\n    const[arrAttributes, setArrAttributes] = useState([]);\r\n\r\n    const submitTagNumber = () => {\r\n        let arrData = [];\r\n        let counter = 0;\r\n        var splitedValue = inputTag.split(\",\").map((item)=>{\r\n            return item.trim();\r\n        });\r\n        splitedValue.map((id) => {\r\n            let url = \"https://\"+ localStorage.getItem(\"prefixUrl\") + \".pim360.io/api/objects/TAGGED_ITEM/id/\" + id;\r\n            let token = localStorage.getItem(\"b_token\");\r\n            fetch(url, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    Authorization: token,\r\n                }\r\n            }).then(response => {\r\n                var responseValue = response.json();\r\n                return responseValue;\r\n            }).then(responseData => {\r\n                if(responseData.attrs != undefined && responseData.attrs != null){\r\n                    arrData.push(responseData);\r\n                }\r\n                else{\r\n                    console.log(responseData);\r\n                }\r\n                counter += 1;\r\n                if(counter == splitedValue.length){\r\n                    setData(arrData);\r\n                    return\r\n                }\r\n            }).catch(error => {\r\n                console.log(\"error -------->\"+error);\r\n                counter += 1\r\n            })\r\n        })\r\n    }\r\n\r\n    const showAttr = () => {\r\n        let arrNameValue = [];\r\n        data.map((item) => {\r\n            let arrkeys = Object.keys(item.attrs)\r\n            let obj = {};\r\n            arrkeys.map((key)=>{\r\n                obj[item.attrs[key].name] = item.attrs[key].value;\r\n            })\r\n            arrNameValue.push(obj);\r\n        });\r\n\r\n        // var arrLatLong = [];\r\n        // arrNameValue.map((nameValue)=>{\r\n        //     arrLatLong.push({\r\n        //         lat: nameValue.Latitude,\r\n        //         lng: nameValue.Longitude\r\n        //     })\r\n        // });\r\n\r\n        return <div class=\"flex mb-4\">\r\n                    <div class=\"w-1/2 bg-gray-400\">\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                        <GoogleMapReact\r\n                            // bootstrapURLKeys={{ key: \"AIzaSyB2u7oBxh7nVmvBoCPIroY_VGGTs3og2kk\"}}\r\n                            defaultCenter={{\r\n                                lat: 53.7654,\r\n                                lng: -2.37106\r\n                            }}\r\n                            defaultZoom={10}\r\n                        >\r\n                            {arrNameValue.map((nameValue)=>{\r\n                                console.log(nameValue)\r\n                                return  <AnyReactComponent\r\n                                            lat={nameValue.Latitude}\r\n                                            lng={nameValue.Longitude}\r\n                                        />\r\n                            })}\r\n                        </GoogleMapReact>\r\n                    </div>\r\n                    </div>\r\n                    <div class=\"w-1/2 bg-purple-500\">\r\n                        {arrNameValue.map((item)=>{\r\n                            return Object.keys(item).map((key)=>{\r\n                                return <div>\r\n                                    <div class=\"inline-block w-1/2 \">\r\n                                        {key}\r\n                                    </div>\r\n                                    <div class=\"inline-block w-1/2 \">\r\n                                        {item[key]}\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        })}\r\n                    </div>\r\n                    \r\n                </div>\r\n    }\r\n\r\nreturn(\r\n    <div class=\"p-10\">\r\n        <div class=\"w-full max-w-xs\">\r\n            <form class=\"bg-white rounded pt-6 pb-8 mb-4\">\r\n                <div class=\"inline-block\">\r\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\r\n                        Tag Number\r\n                    </label>\r\n                    <input class={isError ? errInputClass : inputClass} value={inputTag}\r\n                        id=\"tagNumber\" type=\"text\"  placeholder=\"Enter your tag number\" onChange={(e)=> setInputTag(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div class=\"inline-block ml-5\">\r\n                    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-auto\" type=\"button\"\r\n                        onClick={() => {submitTagNumber()}}>\r\n                        SUBMIT\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        {data != undefined && data.length > 0 && \r\n            <div> \r\n                {showAttr()}\r\n            </div>\r\n        }\r\n        </div>\r\n)};\r\nexport default HomeScreen;","import React from 'react';\r\nimport NavBar from './components/NavBar'\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path=\"/\" component={LoginScreen}/>\r\n        <Route exact path=\"/home\" component={HomeScreen}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}